/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestWrapperPotionProtocolLib,
  TestWrapperPotionProtocolLibInterface,
} from "../../../contracts/test-wrappers/TestWrapperPotionProtocolLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPotionLiquidityPool",
        name: "potionLiquidityPoolManager",
        type: "address",
      },
      {
        internalType: "contract IOpynFactory",
        name: "opynFactory",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "targetPotionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikePriceInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct PotionBuyInfo",
        name: "buyInfo",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "USDC",
        type: "address",
      },
    ],
    name: "buyPotion",
    outputs: [
      {
        internalType: "uint256",
        name: "actualPremium",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPotionLiquidityPool",
        name: "potionLiquidityPoolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "potion",
        type: "address",
      },
    ],
    name: "redeemPotion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611015806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063313d32331461003b578063983c031114610050575b600080fd5b61004e610049366004610894565b610075565b005b61006361005e3660046108cd565b610083565b60405190815260200160405180910390f35b61007f82826100a4565b5050565b600061009a868661009387610b7f565b8686610103565b9695505050505050565b604051630545d15160e21b81526001600160a01b038281166004830152831690631517454490602401600060405180830381600087803b1580156100e757600080fd5b505af11580156100fb573d6000803e3d6000fd5b505050505050565b60008061011d848660a001516103c390919063ffffffff16565b905061012a8388836103f9565b602085015160408601516060870151600092610153926001600160a01b038b1692889190610535565b90506001600160a01b0381166102b35760208601516040870151606088015160009261018c926001600160a01b038c16928991906105b0565b905086600001516001600160a01b0316816001600160a01b03161461021e5760405162461bcd60e51b815260206004820152603760248201527f4f746f6b656e20646f6573206e6f7420657869737420616e642074617267657460448201527f206164647265737320646f6573206e6f74206d6174636800000000000000000060648201526084015b60405180910390fd5b602087015160408089015160608a015160808b015192516322d8755f60e01b81526001600160a01b038e16946322d8755f946102689491938c938493926001918d90600401610ce0565b6020604051808303816000875af1158015610287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ab9190610d41565b9350506103a4565b85516001600160a01b0382811691161461032b5760405162461bcd60e51b815260206004820152603360248201527f4f746f6b656e20646f65732065786973742062757420746172676574206164646044820152720e4cae6e640c8decae640dcdee840dac2e8c6d606b1b6064820152608401610215565b6080860151604051630e94961760e11b81526001600160a01b038a1691631d292c2e9161035e9185918790600401610d5a565b6020604051808303816000875af115801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a19190610d41565b92505b818310156103b8576103b8848960006103f9565b505095945050505050565b60006103f083836103d66006600a610e88565b6103e1906064610e94565b6103eb9190610eb3565b6105ea565b90505b92915050565b8015806104735750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561044d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104719190610d41565b155b6104de5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610215565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610530908490610617565b505050565b6040516304551c1560e21b81526000906001600160a01b0387169063115470549061056f9088908890819089908990600190600401610ecb565b602060405180830381865afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009a9190610f04565b604051632e1ae69960e21b81526000906001600160a01b0387169063b86b9a649061056f9088908890819089908990600190600401610ecb565b60006105f86006600a610e88565b610603906064610e94565b61060d8385610e94565b6103f09190610f21565b600061066c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106e99092919063ffffffff16565b805190915015610530578080602001905181019061068a9190610f43565b6105305760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610215565b60606106f88484600085610702565b90505b9392505050565b6060824710156107635760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610215565b6001600160a01b0385163b6107ba5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610215565b600080866001600160a01b031685876040516107d69190610f90565b60006040518083038185875af1925050503d8060008114610813576040519150601f19603f3d011682016040523d82523d6000602084013e610818565b606091505b5091509150610828828286610833565b979650505050505050565b606083156108425750816106fb565b8251156108525782518084602001fd5b8160405162461bcd60e51b81526004016102159190610fac565b6001600160a01b038116811461088157600080fd5b50565b803561088f8161086c565b919050565b600080604083850312156108a757600080fd5b82356108b28161086c565b915060208301356108c28161086c565b809150509250929050565b600080600080600060a086880312156108e557600080fd5b85356108f08161086c565b945060208601356109008161086c565b9350604086013567ffffffffffffffff81111561091c57600080fd5b860160e0818903121561092e57600080fd5b92506060860135915060808601356109458161086c565b809150509295509295909350565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561098c5761098c610953565b60405290565b60405160e0810167ffffffffffffffff8111828210171561098c5761098c610953565b604051601f8201601f1916810167ffffffffffffffff811182821017156109de576109de610953565b604052919050565b801515811461088157600080fd5b600060a08284031215610a0657600080fd5b610a0e610969565b90508135610a1b8161086c565b81526020820135610a2b8161086c565b60208201526040820135610a3e816109e6565b80604083015250606082013560608201526080820135608082015292915050565b600082601f830112610a7057600080fd5b8135602067ffffffffffffffff821115610a8c57610a8c610953565b610a9a818360051b016109b5565b8281526101a09283028501820192828201919087851115610aba57600080fd5b8387015b85811015610b725780890382811215610ad75760008081fd5b610adf610969565b8235610aea8161086c565b81528287013587820152604060a0603f198401811315610b0a5760008081fd5b610b12610969565b93508185013584526060808601358a86015260808087013584870152828701358287015260c0870135818701528584860152610b518f60e089016109f4565b91850191909152610180860135908401525050855250928401928101610abe565b5090979650505050505050565b600060e08236031215610b9157600080fd5b610b99610992565b610ba283610884565b8152610bb060208401610884565b60208201526040830135604082015260608301356060820152608083013567ffffffffffffffff811115610be357600080fd5b610bef36828601610a5f565b60808301525060a083013560a082015260c083013560c082015280915050919050565b600081518084526020808501945080840160005b83811015610cd557815180516001600160a01b03908116895284820151858a01526040808301518051828c0152808701516060808d0191909152818301516080808e01919091528183015160a08e01529182015160c08d0152808501518051851660e08e015260208101519094166101008d01529183015115156101208c0152908201516101408b0152908101516101608a015201516101808801526101a09096019590820190600101610c26565b509495945050505050565b6001600160a01b038981168252888116602083015287166040820152606081018690526080810185905283151560a082015261010060c08201819052600090610d2b83820186610c12565b9150508260e08301529998505050505050505050565b600060208284031215610d5357600080fd5b5051919050565b6001600160a01b0384168152606060208201819052600090610d7e90830185610c12565b9050826040830152949350505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610ddf578160001904821115610dc557610dc5610d8e565b80851615610dd257918102915b93841c9390800290610da9565b509250929050565b600082610df6575060016103f3565b81610e03575060006103f3565b8160018114610e195760028114610e2357610e3f565b60019150506103f3565b60ff841115610e3457610e34610d8e565b50506001821b6103f3565b5060208310610133831016604e8410600b8410161715610e62575081810a6103f3565b610e6c8383610da4565b8060001904821115610e8057610e80610d8e565b029392505050565b60006103f08383610de7565b6000816000190483118215151615610eae57610eae610d8e565b500290565b60008219821115610ec657610ec6610d8e565b500190565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925290151560a082015260c00190565b600060208284031215610f1657600080fd5b81516106fb8161086c565b600082610f3e57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610f5557600080fd5b81516106fb816109e6565b60005b83811015610f7b578181015183820152602001610f63565b83811115610f8a576000848401525b50505050565b60008251610fa2818460208701610f60565b9190910192915050565b6020815260008251806020840152610fcb816040850160208701610f60565b601f01601f1916919091016040019291505056fea264697066735822122024fe788d14d3ebcfafac23b839a3ee371e99cd0bda5f5473ac4c9af85dc2cfcb64736f6c634300080e0033";

type TestWrapperPotionProtocolLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrapperPotionProtocolLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrapperPotionProtocolLib__factory extends ContractFactory {
  constructor(...args: TestWrapperPotionProtocolLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestWrapperPotionProtocolLib> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestWrapperPotionProtocolLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWrapperPotionProtocolLib {
    return super.attach(address) as TestWrapperPotionProtocolLib;
  }
  override connect(signer: Signer): TestWrapperPotionProtocolLib__factory {
    return super.connect(signer) as TestWrapperPotionProtocolLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrapperPotionProtocolLibInterface {
    return new utils.Interface(_abi) as TestWrapperPotionProtocolLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrapperPotionProtocolLib {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestWrapperPotionProtocolLib;
  }
}
