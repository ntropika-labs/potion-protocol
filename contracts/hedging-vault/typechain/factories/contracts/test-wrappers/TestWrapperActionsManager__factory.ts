/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestWrapperActionsManager,
  TestWrapperActionsManagerInterface,
} from "../../../contracts/test-wrappers/TestWrapperActionsManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "PrincipalPercentageOutOfRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_principalPercentagesLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_principalPercentagesLengthExpected",
        type: "uint256",
      },
    ],
    name: "PrincipalPercentagesMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalSumOfPercentages",
        type: "uint256",
      },
    ],
    name: "PrincipalPercentagesSumMoreThan100",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAction[]",
        name: "actions",
        type: "address[]",
      },
    ],
    name: "ActionsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevAdminAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevOperatorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "OperatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_principalPercentages",
        type: "uint256[]",
      },
    ],
    name: "PrincipalPercentagesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevStrategistAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "StrategistChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "changeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "changeStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAction",
    outputs: [
      {
        internalType: "contract IAction",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActionsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actionIndex",
        type: "uint256",
      },
    ],
    name: "getPrincipalPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrincipalPercentages",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStrategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPrincipalPercentages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAction[]",
        name: "actions",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "principalPercentages",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "newPrincipalPercentages",
        type: "uint256[]",
      },
    ],
    name: "setPrincipalPercentages",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ff3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637fbbe46f1161008c578063b6e7687311610066578063b6e768731461019b578063e78c65aa146101ae578063e7f43c68146101b6578063ee280e04146101c757600080fd5b80637fbbe46f1461016d5780638f28397014610180578063939007f81461019357600080fd5b806306394c9b146100d45780632b6e6818146100e957806334d9b2dc1461010f5780635eed6848146101345780636e9960c31461014957806372eb05b91461015a575b600080fd5b6100e76100e2366004610bab565b6101da565b005b6100fc6100f7366004610bcf565b610222565b6040519081526020015b60405180910390f35b6034546001600160a01b03165b6040516001600160a01b039091168152602001610106565b61013c610255565b6040516101069190610be8565b6033546001600160a01b031661011c565b6100e7610168366004610bab565b6102ad565b6100e761017b366004610c78565b6102e9565b6100e761018e366004610bab565b610366565b6067546100fc565b61011c6101a9366004610bcf565b6103a2565b6065546100fc565b6035546001600160a01b031661011c565b6100e76101d5366004610ce4565b6103d2565b6033546001600160a01b0316336001600160a01b0316146102165760405162461bcd60e51b815260040161020d90610d26565b60405180910390fd5b61021f81610456565b50565b606654600090821015610250576066828154811061024257610242610d6b565b906000526020600020015490505b919050565b606060668054806020026020016040519081016040528092919081815260200182805480156102a357602002820191906000526020600020905b81548152602001906001019080831161028f575b5050505050905090565b6033546001600160a01b0316336001600160a01b0316146102e05760405162461bcd60e51b815260040161020d90610d26565b61021f81610516565b60006102f560016105d8565b9050801561030d576000805461ff0019166101001790555b61031985858585610660565b801561035f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6033546001600160a01b0316336001600160a01b0316146103995760405162461bcd60e51b815260040161020d90610d26565b61021f816107ec565b6000606582815481106103b7576103b7610d6b565b6000918252602090912001546001600160a01b031692915050565b6034546001600160a01b0316336001600160a01b0316146104485760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c792074686520537472617465676973742063616e2063616c6c207468696044820152693990333ab731ba34b7b760b11b606482015260840161020d565b61045282826108a9565b5050565b6001600160a01b0381166104c45760405162461bcd60e51b815260206004820152602f60248201527f4e6577204f70657261746f7220616464726573732063616e6e6f74206265207460448201526e6865206e756c6c206164647265737360881b606482015260840161020d565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fd58299b712891143e76310d5e664c4203c940a67db37cf856bdaa3c5c76a802c90600090a35050565b6001600160a01b0381166105865760405162461bcd60e51b815260206004820152603160248201527f4e6577205374726174656769737420616464726573732063616e6e6f7420626560448201527020746865206e756c6c206164647265737360781b606482015260840161020d565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f3a76e21b656d08e1747e6decb6c6dcb819ace8e654b6582f4fcc50875ff9f85490600090a35050565b60008054610100900460ff161561061f578160ff1660011480156105fb5750303b155b6106175760405162461bcd60e51b815260040161020d90610d81565b506000919050565b60005460ff8084169116106106465760405162461bcd60e51b815260040161020d90610d81565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166106cb5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161020d565b8267ffffffffffffffff8111156106e4576106e4610dcf565b60405190808252806020026020018201604052801561070d578160200160208202803683370190505b50805161072291606591602090910190610ae1565b5060005b838110156107a35784848281811061074057610740610d6b565b90506020020160208101906107559190610bab565b6065828154811061076857610768610d6b565b600091825260209091200180546001600160a01b0319166001600160a01b03929092169190911790558061079b81610dfb565b915050610726565b506107ae82826108a9565b7fe3fa68abdc4e3e7248b515aa82f93f671e5a70358342a2cbd4fea9d278cf15b460656040516107de9190610e14565b60405180910390a150505050565b6001600160a01b0381166108575760405162461bcd60e51b815260206004820152602c60248201527f4e65772041646d696e20616464726573732063616e6e6f74206265207468652060448201526b6e756c6c206164647265737360a01b606482015260840161020d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f90600090a35050565b60006108b460655490565b90508181146108e05760405163acbc4ec560e01b8152600481018390526024810182905260440161020d565b6066548114610942578167ffffffffffffffff81111561090257610902610dcf565b60405190808252806020026020018201604052801561092b578160200160208202803683370190505b50805161094091606691602090910190610b46565b505b600060678190555b82811015610a635783838281811061096457610964610d6b565b90506020020135600014806109a657506109806006600a610f3e565b61098b906064610f4a565b84848381811061099d5761099d610d6b565b90506020020135115b156109e957808484838181106109be576109be610d6b565b9050602002013560405163e16a8e8160e01b815260040161020d929190918252602082015260400190565b8383828181106109fb576109fb610d6b565b9050602002013560668281548110610a1557610a15610d6b565b600091825260209091200155838382818110610a3357610a33610d6b565b9050602002013560676000828254610a4b9190610f69565b90915550819050610a5b81610dfb565b91505061094a565b50610a706006600a610f3e565b610a7b906064610f4a565b6067541115610aa357606754604051634515cbdf60e11b815260040161020d91815260200190565b7f6f37dd052475dc2feae9dda23934528d00eddb02c392df86f7027192c8e962708383604051610ad4929190610f81565b60405180910390a1505050565b828054828255906000526020600020908101928215610b36579160200282015b82811115610b3657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610b01565b50610b42929150610b81565b5090565b828054828255906000526020600020908101928215610b36579160200282015b82811115610b36578251825591602001919060010190610b66565b5b80821115610b425760008155600101610b82565b6001600160a01b038116811461021f57600080fd5b600060208284031215610bbd57600080fd5b8135610bc881610b96565b9392505050565b600060208284031215610be157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610c2057835183529284019291840191600101610c04565b50909695505050505050565b60008083601f840112610c3e57600080fd5b50813567ffffffffffffffff811115610c5657600080fd5b6020830191508360208260051b8501011115610c7157600080fd5b9250929050565b60008060008060408587031215610c8e57600080fd5b843567ffffffffffffffff80821115610ca657600080fd5b610cb288838901610c2c565b90965094506020870135915080821115610ccb57600080fd5b50610cd887828801610c2c565b95989497509550505050565b60008060208385031215610cf757600080fd5b823567ffffffffffffffff811115610d0e57600080fd5b610d1a85828601610c2c565b90969095509350505050565b60208082526025908201527f4f6e6c79207468652041646d696e2063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610e0d57610e0d610de5565b5060010190565b6020808252825482820181905260008481528281209092916040850190845b81811015610c205783546001600160a01b031683526001938401939285019201610e33565b600181815b80851115610e93578160001904821115610e7957610e79610de5565b80851615610e8657918102915b93841c9390800290610e5d565b509250929050565b600082610eaa57506001610f38565b81610eb757506000610f38565b8160018114610ecd5760028114610ed757610ef3565b6001915050610f38565b60ff841115610ee857610ee8610de5565b50506001821b610f38565b5060208310610133831016604e8410600b8410161715610f16575081810a610f38565b610f208383610e58565b8060001904821115610f3457610f34610de5565b0290505b92915050565b6000610bc88383610e9b565b6000816000190483118215151615610f6457610f64610de5565b500290565b60008219821115610f7c57610f7c610de5565b500190565b6020808252810182905260006001600160fb1b03831115610fa157600080fd5b8260051b8085604085013760009201604001918252509291505056fea2646970667358221220ecea859c3e82e79f6706c6a5dc5931c3d88a81a42c95c657e6608ab4e3344ffd64736f6c634300080e0033";

type TestWrapperActionsManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrapperActionsManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrapperActionsManager__factory extends ContractFactory {
  constructor(...args: TestWrapperActionsManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestWrapperActionsManager> {
    return super.deploy(overrides || {}) as Promise<TestWrapperActionsManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWrapperActionsManager {
    return super.attach(address) as TestWrapperActionsManager;
  }
  override connect(signer: Signer): TestWrapperActionsManager__factory {
    return super.connect(signer) as TestWrapperActionsManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrapperActionsManagerInterface {
    return new utils.Interface(_abi) as TestWrapperActionsManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrapperActionsManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestWrapperActionsManager;
  }
}
