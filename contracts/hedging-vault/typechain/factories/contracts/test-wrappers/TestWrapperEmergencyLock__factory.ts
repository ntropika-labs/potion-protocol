/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestWrapperEmergencyLock,
  TestWrapperEmergencyLockInterface,
} from "../../../contracts/test-wrappers/TestWrapperEmergencyLock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevAdminAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevOperatorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "OperatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevStrategistAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "StrategistChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevVaultAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newVaultAddress",
        type: "address",
      },
    ],
    name: "VaultChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "changeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "changeStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVaultAddress",
        type: "address",
      },
    ],
    name: "changeVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStrategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "strategistAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "operatorAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a5f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806372eb05b91161007157806372eb05b91461013a5780638456cb591461014d5780638d928af8146101555780638f28397014610166578063c0c53b8b14610179578063e7f43c681461018c57600080fd5b806306394c9b146100b957806334d9b2dc146100ce5780633f4ba83a146100f85780635c975abb1461010057806360e232a9146101165780636e9960c314610129575b600080fd5b6100cc6100c73660046108e6565b61019d565b005b6034546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc6101e5565b60655460ff1660405190151581526020016100ef565b6100cc6101243660046108e6565b610222565b6033546001600160a01b03166100db565b6100cc6101483660046108e6565b61025e565b6100cc61029a565b6036546001600160a01b03166100db565b6100cc6101743660046108e6565b6102d5565b6100cc610187366004610908565b610311565b6035546001600160a01b03166100db565b6033546001600160a01b0316336001600160a01b0316146101d95760405162461bcd60e51b81526004016101d09061094b565b60405180910390fd5b6101e281610394565b50565b6033546001600160a01b0316336001600160a01b0316146102185760405162461bcd60e51b81526004016101d09061094b565b610220610454565b565b6033546001600160a01b0316336001600160a01b0316146102555760405162461bcd60e51b81526004016101d09061094b565b6101e2816104e7565b6033546001600160a01b0316336001600160a01b0316146102915760405162461bcd60e51b81526004016101d09061094b565b6101e2816105a4565b6033546001600160a01b0316336001600160a01b0316146102cd5760405162461bcd60e51b81526004016101d09061094b565b610220610666565b6033546001600160a01b0316336001600160a01b0316146103085760405162461bcd60e51b81526004016101d09061094b565b6101e2816106e1565b600061031d600161079e565b90508015610335576000805461ff0019166101001790555b61034084848461082b565b610348610872565b801561038e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6001600160a01b0381166104025760405162461bcd60e51b815260206004820152602f60248201527f4e6577204f70657261746f7220616464726573732063616e6e6f74206265207460448201526e6865206e756c6c206164647265737360881b60648201526084016101d0565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fd58299b712891143e76310d5e664c4203c940a67db37cf856bdaa3c5c76a802c90600090a35050565b60655460ff1661049d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016101d0565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0381166105525760405162461bcd60e51b815260206004820152602c60248201527f4e6577205661756c7420616464726573732063616e6e6f74206265207468652060448201526b6e756c6c206164647265737360a01b60648201526084016101d0565b603680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f16e2accad9173abff57b295b56993ec5d86b3cbf791fea02f02a6616463754ea90600090a35050565b6001600160a01b0381166106145760405162461bcd60e51b815260206004820152603160248201527f4e6577205374726174656769737420616464726573732063616e6e6f7420626560448201527020746865206e756c6c206164647265737360781b60648201526084016101d0565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f3a76e21b656d08e1747e6decb6c6dcb819ace8e654b6582f4fcc50875ff9f85490600090a35050565b60655460ff16156106ac5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016101d0565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586104ca3390565b6001600160a01b03811661074c5760405162461bcd60e51b815260206004820152602c60248201527f4e65772041646d696e20616464726573732063616e6e6f74206265207468652060448201526b6e756c6c206164647265737360a01b60648201526084016101d0565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f90600090a35050565b60008054610100900460ff16156107e5578160ff1660011480156107c15750303b155b6107dd5760405162461bcd60e51b81526004016101d090610990565b506000919050565b60005460ff80841691161061080c5760405162461bcd60e51b81526004016101d090610990565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166108525760405162461bcd60e51b81526004016101d0906109de565b61085b836106e1565b610864826105a4565b61086d81610394565b505050565b600054610100900460ff166108995760405162461bcd60e51b81526004016101d0906109de565b610220600054610100900460ff166108c35760405162461bcd60e51b81526004016101d0906109de565b6065805460ff19169055565b80356001600160a01b038116811461082657600080fd5b6000602082840312156108f857600080fd5b610901826108cf565b9392505050565b60008060006060848603121561091d57600080fd5b610926846108cf565b9250610934602085016108cf565b9150610942604085016108cf565b90509250925092565b60208082526025908201527f4f6e6c79207468652041646d696e2063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122007e4ed46fd3acff13318ebd054af86dca6612501a6a4440eea01030f5a1d054b64736f6c634300080e0033";

type TestWrapperEmergencyLockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrapperEmergencyLockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrapperEmergencyLock__factory extends ContractFactory {
  constructor(...args: TestWrapperEmergencyLockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestWrapperEmergencyLock> {
    return super.deploy(overrides || {}) as Promise<TestWrapperEmergencyLock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWrapperEmergencyLock {
    return super.attach(address) as TestWrapperEmergencyLock;
  }
  override connect(signer: Signer): TestWrapperEmergencyLock__factory {
    return super.connect(signer) as TestWrapperEmergencyLock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrapperEmergencyLockInterface {
    return new utils.Interface(_abi) as TestWrapperEmergencyLockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrapperEmergencyLock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestWrapperEmergencyLock;
  }
}
