/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ActionsManagerUpgradeable,
  ActionsManagerUpgradeableInterface,
} from "../../../contracts/vault/ActionsManagerUpgradeable";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "PrincipalPercentageOutOfRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_principalPercentagesLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_principalPercentagesLengthExpected",
        type: "uint256",
      },
    ],
    name: "PrincipalPercentagesMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalSumOfPercentages",
        type: "uint256",
      },
    ],
    name: "PrincipalPercentagesSumMoreThan100",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAction[]",
        name: "actions",
        type: "address[]",
      },
    ],
    name: "ActionsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevAdminAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevOperatorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "OperatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_principalPercentages",
        type: "uint256[]",
      },
    ],
    name: "PrincipalPercentagesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevStrategistAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "StrategistChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "changeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "changeStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAction",
    outputs: [
      {
        internalType: "contract IAction",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActionsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actionIndex",
        type: "uint256",
      },
    ],
    name: "getPrincipalPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrincipalPercentages",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStrategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPrincipalPercentages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "newPrincipalPercentages",
        type: "uint256[]",
      },
    ],
    name: "setPrincipalPercentages",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bbf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638f283970116100715780638f28397014610152578063939007f814610165578063b6e768731461016d578063e78c65aa14610180578063e7f43c6814610188578063ee280e041461019957600080fd5b806306394c9b146100b95780632b6e6818146100ce57806334d9b2dc146100f45780635eed6848146101195780636e9960c31461012e57806372eb05b91461013f575b600080fd5b6100cc6100c7366004610882565b6101ac565b005b6100e16100dc3660046108b2565b6101f4565b6040519081526020015b60405180910390f35b6034546001600160a01b03165b6040516001600160a01b0390911681526020016100eb565b610121610227565b6040516100eb91906108cb565b6033546001600160a01b0316610101565b6100cc61014d366004610882565b61027f565b6100cc610160366004610882565b6102bb565b6067546100e1565b61010161017b3660046108b2565b6102f7565b6065546100e1565b6035546001600160a01b0316610101565b6100cc6101a736600461090f565b610327565b6033546001600160a01b0316336001600160a01b0316146101e85760405162461bcd60e51b81526004016101df90610984565b60405180910390fd5b6101f1816103ab565b50565b6066546000908210156102225760668281548110610214576102146109c9565b906000526020600020015490505b919050565b6060606680548060200260200160405190810160405280929190818152602001828054801561027557602002820191906000526020600020905b815481526020019060010190808311610261575b5050505050905090565b6033546001600160a01b0316336001600160a01b0316146102b25760405162461bcd60e51b81526004016101df90610984565b6101f18161046b565b6033546001600160a01b0316336001600160a01b0316146102ee5760405162461bcd60e51b81526004016101df90610984565b6101f18161052d565b60006065828154811061030c5761030c6109c9565b6000918252602090912001546001600160a01b031692915050565b6034546001600160a01b0316336001600160a01b03161461039d5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c792074686520537472617465676973742063616e2063616c6c207468696044820152693990333ab731ba34b7b760b11b60648201526084016101df565b6103a782826105ea565b5050565b6001600160a01b0381166104195760405162461bcd60e51b815260206004820152602f60248201527f4e6577204f70657261746f7220616464726573732063616e6e6f74206265207460448201526e6865206e756c6c206164647265737360881b60648201526084016101df565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fd58299b712891143e76310d5e664c4203c940a67db37cf856bdaa3c5c76a802c90600090a35050565b6001600160a01b0381166104db5760405162461bcd60e51b815260206004820152603160248201527f4e6577205374726174656769737420616464726573732063616e6e6f7420626560448201527020746865206e756c6c206164647265737360781b60648201526084016101df565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f3a76e21b656d08e1747e6decb6c6dcb819ace8e654b6582f4fcc50875ff9f85490600090a35050565b6001600160a01b0381166105985760405162461bcd60e51b815260206004820152602c60248201527f4e65772041646d696e20616464726573732063616e6e6f74206265207468652060448201526b6e756c6c206164647265737360a01b60648201526084016101df565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f90600090a35050565b60006105f560655490565b90508181146106215760405163acbc4ec560e01b815260048101839052602481018290526044016101df565b6066548114610683578167ffffffffffffffff811115610643576106436109df565b60405190808252806020026020018201604052801561066c578160200160208202803683370190505b50805161068191606691602090910190610822565b505b600060678190555b828110156107a4578383828181106106a5576106a56109c9565b90506020020135600014806106e757506106c16006600a610af1565b6106cc906064610afd565b8484838181106106de576106de6109c9565b90506020020135115b1561072a57808484838181106106ff576106ff6109c9565b9050602002013560405163e16a8e8160e01b81526004016101df929190918252602082015260400190565b83838281811061073c5761073c6109c9565b9050602002013560668281548110610756576107566109c9565b600091825260209091200155838382818110610774576107746109c9565b905060200201356067600082825461078c9190610b1c565b9091555081905061079c81610b34565b91505061068b565b506107b16006600a610af1565b6107bc906064610afd565b60675411156107e457606754604051634515cbdf60e11b81526004016101df91815260200190565b7f6f37dd052475dc2feae9dda23934528d00eddb02c392df86f7027192c8e962708383604051610815929190610b4d565b60405180910390a1505050565b82805482825590600052602060002090810192821561085d579160200282015b8281111561085d578251825591602001919060010190610842565b5061086992915061086d565b5090565b5b80821115610869576000815560010161086e565b60006020828403121561089457600080fd5b81356001600160a01b03811681146108ab57600080fd5b9392505050565b6000602082840312156108c457600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610903578351835292840192918401916001016108e7565b50909695505050505050565b6000806020838503121561092257600080fd5b823567ffffffffffffffff8082111561093a57600080fd5b818501915085601f83011261094e57600080fd5b81358181111561095d57600080fd5b8660208260051b850101111561097257600080fd5b60209290920196919550909350505050565b60208082526025908201527f4f6e6c79207468652041646d696e2063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610a46578160001904821115610a2c57610a2c6109f5565b80851615610a3957918102915b93841c9390800290610a10565b509250929050565b600082610a5d57506001610aeb565b81610a6a57506000610aeb565b8160018114610a805760028114610a8a57610aa6565b6001915050610aeb565b60ff841115610a9b57610a9b6109f5565b50506001821b610aeb565b5060208310610133831016604e8410600b8410161715610ac9575081810a610aeb565b610ad38383610a0b565b8060001904821115610ae757610ae76109f5565b0290505b92915050565b60006108ab8383610a4e565b6000816000190483118215151615610b1757610b176109f5565b500290565b60008219821115610b2f57610b2f6109f5565b500190565b600060018201610b4657610b466109f5565b5060010190565b6020808252810182905260006001600160fb1b03831115610b6d57600080fd5b8260051b8085604085013760009201604001918252509291505056fea2646970667358221220e7a73c3b977168c95342c730cd827d50e75779808d0326d9ee70bedfbef84c5064736f6c634300080e0033";

type ActionsManagerUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ActionsManagerUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ActionsManagerUpgradeable__factory extends ContractFactory {
  constructor(...args: ActionsManagerUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ActionsManagerUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ActionsManagerUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ActionsManagerUpgradeable {
    return super.attach(address) as ActionsManagerUpgradeable;
  }
  override connect(signer: Signer): ActionsManagerUpgradeable__factory {
    return super.connect(signer) as ActionsManagerUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ActionsManagerUpgradeableInterface {
    return new utils.Interface(_abi) as ActionsManagerUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ActionsManagerUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ActionsManagerUpgradeable;
  }
}
