/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeeManagerUpgradeable,
  FeeManagerUpgradeableInterface,
} from "../../../contracts/vault/FeeManagerUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevAdminAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "managementAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "performanceAmount",
        type: "uint256",
      },
    ],
    name: "FeesETHSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldFeeReceipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newFeeReceipient",
        type: "address",
      },
    ],
    name: "FeesReceipientChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "managementAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "performanceAmount",
        type: "uint256",
      },
    ],
    name: "FeesSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldManagementFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newManagementFee",
        type: "uint256",
      },
    ],
    name: "ManagementFeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevOperatorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "OperatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldPerformanceFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPerformanceFee",
        type: "uint256",
      },
    ],
    name: "PerformanceFeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevStrategistAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "StrategistChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "changeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "changeStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getManagementFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPerformanceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStrategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newFeesRecipient",
        type: "address",
      },
    ],
    name: "setFeesRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newManagementFee",
        type: "uint256",
      },
    ],
    name: "setManagementFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPerformanceFee",
        type: "uint256",
      },
    ],
    name: "setPerformanceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610942806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806372eb05b91161007157806372eb05b91461012357806384b7719a146101365780638f283970146101495780639c2b1a951461015c578063e7f43c6814610164578063fe56e2321461017557600080fd5b806306394c9b146100ae578063235c3603146100c357806334d9b2dc146100da5780636e9960c3146100ff57806370897b2314610110575b600080fd5b6100c16100bc366004610782565b610188565b005b6066545b6040519081526020015b60405180910390f35b6035546001600160a01b03165b6040516001600160a01b0390911681526020016100d1565b6033546001600160a01b03166100e7565b6100c161011e3660046107a6565b6101d0565b6100c1610131366004610782565b61020c565b6100c1610144366004610782565b610248565b6100c1610157366004610782565b610284565b6065546100c7565b6034546001600160a01b03166100e7565b6100c16101833660046107a6565b6102c0565b6033546001600160a01b0316336001600160a01b0316146101c45760405162461bcd60e51b81526004016101bb906107bf565b60405180910390fd5b6101cd816102fc565b50565b6033546001600160a01b0316336001600160a01b0316146102035760405162461bcd60e51b81526004016101bb906107bf565b6101cd816103bc565b6033546001600160a01b0316336001600160a01b03161461023f5760405162461bcd60e51b81526004016101bb906107bf565b6101cd81610471565b6033546001600160a01b0316336001600160a01b03161461027b5760405162461bcd60e51b81526004016101bb906107bf565b6101cd81610533565b6033546001600160a01b0316336001600160a01b0316146102b75760405162461bcd60e51b81526004016101bb906107bf565b6101cd816105ed565b6033546001600160a01b0316336001600160a01b0316146102f35760405162461bcd60e51b81526004016101bb906107bf565b6101cd816106aa565b6001600160a01b03811661036a5760405162461bcd60e51b815260206004820152602f60248201527f4e6577204f70657261746f7220616464726573732063616e6e6f74206265207460448201526e6865206e756c6c206164647265737360881b60648201526084016101bb565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fd58299b712891143e76310d5e664c4203c940a67db37cf856bdaa3c5c76a802c90600090a35050565b6103c581610756565b61042b5760405162461bcd60e51b815260206004820152603160248201527f506572666f726d616e636520666565206d757374206265206c6573732074686160448201527006e206f7220657175616c20746f2031303607c1b60648201526084016101bb565b606680549082905560408051828152602081018490527ffac39c9265fbab8fd6b4293b3f584cb3b1c0c39fb315acbcd4d1bef067c340cd91015b60405180910390a15050565b6001600160a01b0381166104e15760405162461bcd60e51b815260206004820152603160248201527f4e6577205374726174656769737420616464726573732063616e6e6f7420626560448201527020746865206e756c6c206164647265737360781b60648201526084016101bb565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f3a76e21b656d08e1747e6decb6c6dcb819ace8e654b6582f4fcc50875ff9f85490600090a35050565b6067546001600160a01b039081169082160361059d5760405162461bcd60e51b8152602060048201526024808201527f4665657320726563697069656e74206973207468652073616d65206173206265604482015263666f726560e01b60648201526084016101bb565b606780546001600160a01b0319166001600160a01b03831690811790915560405182919081907fc5d8512a1ce98ff41b33712f195414dde7fd3a1a996a15dafab8933d9d32084490600090a35050565b6001600160a01b0381166106585760405162461bcd60e51b815260206004820152602c60248201527f4e65772041646d696e20616464726573732063616e6e6f74206265207468652060448201526b6e756c6c206164647265737360a01b60648201526084016101bb565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f90600090a35050565b6106b381610756565b6107185760405162461bcd60e51b815260206004820152603060248201527f4d616e6167656d656e7420666565206d757374206265206c657373207468616e60448201526f0206f7220657175616c20746f203130360841b60648201526084016101bb565b606580549082905560408051828152602081018490527ffac39c9265fbab8fd6b4293b3f584cb3b1c0c39fb315acbcd4d1bef067c340cd9101610465565b60006107646006600a610900565b90911115919050565b6001600160a01b03811681146101cd57600080fd5b60006020828403121561079457600080fd5b813561079f8161076d565b9392505050565b6000602082840312156107b857600080fd5b5035919050565b60208082526025908201527f4f6e6c79207468652041646d696e2063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561085557816000190482111561083b5761083b610804565b8085161561084857918102915b93841c939080029061081f565b509250929050565b60008261086c575060016108fa565b81610879575060006108fa565b816001811461088f5760028114610899576108b5565b60019150506108fa565b60ff8411156108aa576108aa610804565b50506001821b6108fa565b5060208310610133831016604e8410600b84101617156108d8575081810a6108fa565b6108e2838361081a565b80600019048211156108f6576108f6610804565b0290505b92915050565b600061079f838361085d56fea2646970667358221220c6801d8d2da48917c7607278c390136701e0d6d4eea519a5badadfc34dfcd39564736f6c634300080e0033";

type FeeManagerUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeManagerUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeManagerUpgradeable__factory extends ContractFactory {
  constructor(...args: FeeManagerUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeManagerUpgradeable> {
    return super.deploy(overrides || {}) as Promise<FeeManagerUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FeeManagerUpgradeable {
    return super.attach(address) as FeeManagerUpgradeable;
  }
  override connect(signer: Signer): FeeManagerUpgradeable__factory {
    return super.connect(signer) as FeeManagerUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeManagerUpgradeableInterface {
    return new utils.Interface(_abi) as FeeManagerUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeManagerUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FeeManagerUpgradeable;
  }
}
