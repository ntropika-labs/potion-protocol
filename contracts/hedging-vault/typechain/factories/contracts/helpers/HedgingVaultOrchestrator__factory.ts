/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  HedgingVaultOrchestrator,
  HedgingVaultOrchestratorInterface,
} from "../../../contracts/helpers/HedgingVaultOrchestrator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "canPositionBeEntered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canPositionBeExited",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expectedPriceRate",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapPath",
            type: "bytes",
          },
        ],
        internalType: "struct IUniswapV3Oracle.SwapInfo",
        name: "swapInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "targetPotionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikePriceInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct PotionBuyInfo",
        name: "potionBuyInfo",
        type: "tuple",
      },
    ],
    name: "enterPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expectedPriceRate",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapPath",
            type: "bytes",
          },
        ],
        internalType: "struct IUniswapV3Oracle.SwapInfo",
        name: "swapInfo",
        type: "tuple",
      },
    ],
    name: "exitPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hedgingVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "potionBuyAction",
    outputs: [
      {
        internalType: "contract IPotionBuyAction",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "hedgingVault_",
        type: "address",
      },
      {
        internalType: "address",
        name: "potionBuyAction_",
        type: "address",
      },
    ],
    name: "setSystemAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a5c8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638a228dcf116100665780638a228dcf1461011b5780638da5cb5b1461012e578063c9a461d61461013f578063f2fde38b14610147578063fd94172c1461015a57600080fd5b80634a70b746146100a35780634aa0bc20146100c057806358b76f8d146100d55780635f4d3135146100e8578063715018a614610113575b600080fd5b6100ab61016d565b60405190151581526020015b60405180910390f35b6100d36100ce366004610627565b6101e0565b005b6100d36100e3366004610664565b6102f2565b6001546100fb906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b6100d361044c565b6100d36101293660046106eb565b610482565b6000546001600160a01b03166100fb565b6100ab6104da565b6100d361015536600461071e565b610524565b6002546100fb906001600160a01b031681565b600154604080516325385ba360e11b815290516000926001600160a01b031691634a70b7469160048083019260209291908290030181865afa1580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db919061074e565b905090565b6000546001600160a01b031633146102135760405162461bcd60e51b815260040161020a9061076b565b60405180910390fd5b600254604051636d29753d60e11b81526001600160a01b039091169063da52ea7a906102439084906004016107c9565b600060405180830381600087803b15801561025d57600080fd5b505af1158015610271573d6000803e3d6000fd5b50505050600160009054906101000a90046001600160a01b03166001600160a01b031663997292166040518163ffffffff1660e01b81526004016020604051808303816000875af11580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee9190610865565b5050565b6000546001600160a01b0316331461031c5760405162461bcd60e51b815260040161020a9061076b565b600254604051636dc6639d60e11b81526001600160a01b039091169063db8cc73a9061034c908490600401610962565b600060405180830381600087803b15801561036657600080fd5b505af115801561037a573d6000803e3d6000fd5b5050600254604051636d29753d60e11b81526001600160a01b03909116925063da52ea7a91506103ae9085906004016107c9565b600060405180830381600087803b1580156103c857600080fd5b505af11580156103dc573d6000803e3d6000fd5b50505050600160009054906101000a90046001600160a01b03166001600160a01b0316633dc6eabf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561043057600080fd5b505af1158015610444573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146104765760405162461bcd60e51b815260040161020a9061076b565b61048060006105bf565b565b6000546001600160a01b031633146104ac5760405162461bcd60e51b815260040161020a9061076b565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055565b600154604080516364d230eb60e11b815290516000926001600160a01b03169163c9a461d69160048083019260209291908290030181865afa1580156101b7573d6000803e3d6000fd5b6000546001600160a01b0316331461054e5760405162461bcd60e51b815260040161020a9061076b565b6001600160a01b0381166105b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161020a565b6105bc816105bf565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006080828403121561062157600080fd5b50919050565b60006020828403121561063957600080fd5b813567ffffffffffffffff81111561065057600080fd5b61065c8482850161060f565b949350505050565b6000806040838503121561067757600080fd5b823567ffffffffffffffff8082111561068f57600080fd5b61069b8683870161060f565b935060208501359150808211156106b157600080fd5b50830160e081860312156106c457600080fd5b809150509250929050565b80356001600160a01b03811681146106e657600080fd5b919050565b600080604083850312156106fe57600080fd5b610707836106cf565b9150610715602084016106cf565b90509250929050565b60006020828403121561073057600080fd5b610739826106cf565b9392505050565b80151581146105bc57600080fd5b60006020828403121561076057600080fd5b815161073981610740565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006001600160a01b03806107e1856106cf565b166020840152806107f4602086016106cf565b16604084015250604083013560608301526060830135601e1984360301811261081c57600080fd5b830160208101903567ffffffffffffffff81111561083957600080fd5b80360382131561084857600080fd5b60808085015261085c60a0850182846107a0565b95945050505050565b60006020828403121561087757600080fd5b5051919050565b8183526000602080850194508260005b85811015610957576001600160a01b03806108a8846106cf565b168852828401358489015260408084013590890152606080840135908901526080808401359089015260a0808401359089015260c0808401359089015260e0816108f38286016106cf565b1690890152610100816109078583016106cf565b1690890152506101208281013561091d81610740565b1515908801526101408281013590880152610160808301359088015261018080830135908801526101a0968701969091019060010161088e565b509495945050505050565b6020815260006001600160a01b038061097a856106cf565b1660208401528061098d602086016106cf565b1660408401525060408301356060830152606083013560808301526080830135601e198436030181126109bf57600080fd5b830160208101903567ffffffffffffffff8111156109dc57600080fd5b6101a0810236038213156109ef57600080fd5b60e060a0850152610a056101008501828461087e565b91505060a084013560c084015260c084013560e0840152809150509291505056fea2646970667358221220b0b28416f42bcdf19641bdcdbf1abd7700ec96ea6b9719e46a320d5a5c96697164736f6c634300080e0033";

type HedgingVaultOrchestratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HedgingVaultOrchestratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HedgingVaultOrchestrator__factory extends ContractFactory {
  constructor(...args: HedgingVaultOrchestratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HedgingVaultOrchestrator> {
    return super.deploy(overrides || {}) as Promise<HedgingVaultOrchestrator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HedgingVaultOrchestrator {
    return super.attach(address) as HedgingVaultOrchestrator;
  }
  override connect(signer: Signer): HedgingVaultOrchestrator__factory {
    return super.connect(signer) as HedgingVaultOrchestrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HedgingVaultOrchestratorInterface {
    return new utils.Interface(_abi) as HedgingVaultOrchestratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HedgingVaultOrchestrator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HedgingVaultOrchestrator;
  }
}
