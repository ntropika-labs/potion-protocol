/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  HedgingVaultOrchestrator,
  HedgingVaultOrchestratorInterface,
} from "../../../contracts/helpers/HedgingVaultOrchestrator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "canEnterNextRound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hedgingVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expectedPriceRate",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapPath",
            type: "bytes",
          },
        ],
        internalType: "struct IUniswapV3Oracle.SwapInfo",
        name: "prevRoundExitSwapInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "targetPotionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikePriceInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct PotionBuyInfo",
        name: "nextRoundPotionBuyInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expectedPriceRate",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapPath",
            type: "bytes",
          },
        ],
        internalType: "struct IUniswapV3Oracle.SwapInfo",
        name: "nextRoundEnterSwapInfo",
        type: "tuple",
      },
    ],
    name: "nextRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "potionBuyAction",
    outputs: [
      {
        internalType: "contract IPotionBuyAction",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roundsInputVault",
    outputs: [
      {
        internalType: "contract IRoundsInputVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roundsOutputVault",
    outputs: [
      {
        internalType: "contract IRoundsOutputVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "hedgingVault_",
        type: "address",
      },
      {
        internalType: "address",
        name: "potionBuyAction_",
        type: "address",
      },
      {
        internalType: "address",
        name: "roundsInputVault_",
        type: "address",
      },
      {
        internalType: "address",
        name: "roundsOutputVault_",
        type: "address",
      },
    ],
    name: "setSystemAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ade8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639957cf8e116100665780639957cf8e14610119578063f2fde38b1461012c578063f3173f931461013f578063f473ecb914610152578063fd94172c1461016557600080fd5b8063058283a5146100a35780635f4d3135146100c0578063715018a6146100eb5780638da5cb5b146100f55780639469ed4114610106575b600080fd5b6100ab610178565b60405190151581526020015b60405180910390f35b6001546100d3906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b6100f36101eb565b005b6000546001600160a01b03166100d3565b6100f3610114366004610669565b61022a565b6004546100d3906001600160a01b031681565b6100f361013a366004610715565b6104ec565b6100f361014d366004610737565b610587565b6003546100d3906001600160a01b031681565b6002546100d3906001600160a01b031681565b600154604080516325385ba360e11b815290516000926001600160a01b031691634a70b7469160048083019260209291908290030181865afa1580156101c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e69190610799565b905090565b6000546001600160a01b0316331461021e5760405162461bcd60e51b8152600401610215906107b6565b60405180910390fd5b6102286000610601565b565b6000546001600160a01b031633146102545760405162461bcd60e51b8152600401610215906107b6565b60015460408051635479cf7960e01b815290516000926001600160a01b031691635479cf799160048083019260209291908290030181865afa15801561029e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c291906107eb565b905060028160028111156102d8576102d861080c565b036103ba57600254604051636d29753d60e11b81526001600160a01b039091169063da52ea7a9061030d90879060040161084b565b600060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b50505050600160009054906101000a90046001600160a01b03166001600160a01b031663997292166040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b891906108e7565b505b600254604051636dc6639d60e11b81526001600160a01b039091169063db8cc73a906103ea9086906004016109e4565b600060405180830381600087803b15801561040457600080fd5b505af1158015610418573d6000803e3d6000fd5b5050600254604051636d29753d60e11b81526001600160a01b03909116925063da52ea7a915061044c90859060040161084b565b600060405180830381600087803b15801561046657600080fd5b505af115801561047a573d6000803e3d6000fd5b50505050600160009054906101000a90046001600160a01b03166001600160a01b0316633dc6eabf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104ce57600080fd5b505af11580156104e2573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146105165760405162461bcd60e51b8152600401610215906107b6565b6001600160a01b03811661057b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610215565b61058481610601565b50565b6000546001600160a01b031633146105b15760405162461bcd60e51b8152600401610215906107b6565b600180546001600160a01b039586166001600160a01b0319918216179091556002805494861694821694909417909355600380549285169284169290921790915560048054919093169116179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006080828403121561066357600080fd5b50919050565b60008060006060848603121561067e57600080fd5b833567ffffffffffffffff8082111561069657600080fd5b6106a287838801610651565b945060208601359150808211156106b857600080fd5b9085019060e082880312156106cc57600080fd5b909250604085013590808211156106e257600080fd5b506106ef86828701610651565b9150509250925092565b80356001600160a01b038116811461071057600080fd5b919050565b60006020828403121561072757600080fd5b610730826106f9565b9392505050565b6000806000806080858703121561074d57600080fd5b610756856106f9565b9350610764602086016106f9565b9250610772604086016106f9565b9150610780606086016106f9565b905092959194509250565b801515811461058457600080fd5b6000602082840312156107ab57600080fd5b81516107308161078b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156107fd57600080fd5b81516003811061073057600080fd5b634e487b7160e01b600052602160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006001600160a01b0380610863856106f9565b16602084015280610876602086016106f9565b16604084015250604083013560608301526060830135601e1984360301811261089e57600080fd5b830160208101903567ffffffffffffffff8111156108bb57600080fd5b8036038213156108ca57600080fd5b6080808501526108de60a085018284610822565b95945050505050565b6000602082840312156108f957600080fd5b5051919050565b8183526000602080850194508260005b858110156109d9576001600160a01b038061092a846106f9565b168852828401358489015260408084013590890152606080840135908901526080808401359089015260a0808401359089015260c0808401359089015260e0816109758286016106f9565b1690890152610100816109898583016106f9565b1690890152506101208281013561099f8161078b565b1515908801526101408281013590880152610160808301359088015261018080830135908801526101a09687019690910190600101610910565b509495945050505050565b6020815260006001600160a01b03806109fc856106f9565b16602084015280610a0f602086016106f9565b1660408401525060408301356060830152606083013560808301526080830135601e19843603018112610a4157600080fd5b830160208101903567ffffffffffffffff811115610a5e57600080fd5b6101a081023603821315610a7157600080fd5b60e060a0850152610a8761010085018284610900565b91505060a084013560c084015260c084013560e0840152809150509291505056fea2646970667358221220661a6375af87a6e6a31f762da193f2d0030728154e4010f3ffb2242fed2a9f6f64736f6c634300080e0033";

type HedgingVaultOrchestratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HedgingVaultOrchestratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HedgingVaultOrchestrator__factory extends ContractFactory {
  constructor(...args: HedgingVaultOrchestratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HedgingVaultOrchestrator> {
    return super.deploy(overrides || {}) as Promise<HedgingVaultOrchestrator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HedgingVaultOrchestrator {
    return super.attach(address) as HedgingVaultOrchestrator;
  }
  override connect(signer: Signer): HedgingVaultOrchestrator__factory {
    return super.connect(signer) as HedgingVaultOrchestrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HedgingVaultOrchestratorInterface {
    return new utils.Interface(_abi) as HedgingVaultOrchestratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HedgingVaultOrchestrator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HedgingVaultOrchestrator;
  }
}
