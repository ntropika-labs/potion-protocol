/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UniswapV3OracleUpgradeable,
  UniswapV3OracleUpgradeableInterface,
} from "../../../../contracts/actions/common/UniswapV3OracleUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevAdminAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevOperatorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "OperatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevStrategistAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "StrategistChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevVaultAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newVaultAddress",
        type: "address",
      },
    ],
    name: "VaultChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "changeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "changeStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVaultAddress",
        type: "address",
      },
    ],
    name: "changeVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStrategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "outputToken",
        type: "address",
      },
    ],
    name: "getSwapInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expectedPriceRate",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapPath",
            type: "bytes",
          },
        ],
        internalType: "struct IUniswapV3Oracle.SwapInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expectedPriceRate",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapPath",
            type: "bytes",
          },
        ],
        internalType: "struct IUniswapV3Oracle.SwapInfo",
        name: "info",
        type: "tuple",
      },
    ],
    name: "setSwapInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610af6806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638d928af8116100665780638d928af8146101195780638f2839701461012a578063ae39ecfc1461013d578063da52ea7a1461015d578063e7f43c681461017057600080fd5b806306394c9b146100a357806334d9b2dc146100b857806360e232a9146100e25780636e9960c3146100f557806372eb05b914610106575b600080fd5b6100b66100b1366004610783565b610181565b005b6034546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100f0366004610783565b6101c9565b6033546001600160a01b03166100c5565b6100b6610114366004610783565b610205565b6036546001600160a01b03166100c5565b6100b6610138366004610783565b610241565b61015061014b3660046107a7565b61027d565b6040516100d991906107e0565b6100b661016b366004610867565b61038f565b6035546001600160a01b03166100c5565b6033546001600160a01b0316336001600160a01b0316146101bd5760405162461bcd60e51b81526004016101b4906108a2565b60405180910390fd5b6101c681610472565b50565b6033546001600160a01b0316336001600160a01b0316146101fc5760405162461bcd60e51b81526004016101b4906108a2565b6101c681610532565b6033546001600160a01b0316336001600160a01b0316146102385760405162461bcd60e51b81526004016101b4906108a2565b6101c6816105ef565b6033546001600160a01b0316336001600160a01b0316146102745760405162461bcd60e51b81526004016101b4906108a2565b6101c6816106b1565b60408051608081018252600080825260208201819052918101919091526060808201526001600160a01b03808416600090815260656020908152604080832086851684528252918290208251608081018452815485168152600182015490941691840191909152600281015491830191909152600381018054606084019190610305906108e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610331906108e7565b801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b505050505081525050905092915050565b6035546001600160a01b0316336001600160a01b0316146104035760405162461bcd60e51b815260206004820152602860248201527f4f6e6c7920746865204f70657261746f722063616e2063616c6c207468697320604482015267333ab731ba34b7b760c11b60648201526084016101b4565b80606560006104156020840184610783565b6001600160a01b03166001600160a01b03168152602001908152602001600020600083602001602081019061044a9190610783565b6001600160a01b03168152602081019190915260400160002061046d828261098f565b505050565b6001600160a01b0381166104e05760405162461bcd60e51b815260206004820152602f60248201527f4e6577204f70657261746f7220616464726573732063616e6e6f74206265207460448201526e6865206e756c6c206164647265737360881b60648201526084016101b4565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fd58299b712891143e76310d5e664c4203c940a67db37cf856bdaa3c5c76a802c90600090a35050565b6001600160a01b03811661059d5760405162461bcd60e51b815260206004820152602c60248201527f4e6577205661756c7420616464726573732063616e6e6f74206265207468652060448201526b6e756c6c206164647265737360a01b60648201526084016101b4565b603680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f16e2accad9173abff57b295b56993ec5d86b3cbf791fea02f02a6616463754ea90600090a35050565b6001600160a01b03811661065f5760405162461bcd60e51b815260206004820152603160248201527f4e6577205374726174656769737420616464726573732063616e6e6f7420626560448201527020746865206e756c6c206164647265737360781b60648201526084016101b4565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f3a76e21b656d08e1747e6decb6c6dcb819ace8e654b6582f4fcc50875ff9f85490600090a35050565b6001600160a01b03811661071c5760405162461bcd60e51b815260206004820152602c60248201527f4e65772041646d696e20616464726573732063616e6e6f74206265207468652060448201526b6e756c6c206164647265737360a01b60648201526084016101b4565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f90600090a35050565b6001600160a01b03811681146101c657600080fd5b60006020828403121561079557600080fd5b81356107a08161076e565b9392505050565b600080604083850312156107ba57600080fd5b82356107c58161076e565b915060208301356107d58161076e565b809150509250929050565b6000602080835260018060a01b03808551168285015280828601511660408501525060408401516060840152606084015160808085015280518060a086015260005b8181101561083e5782810184015186820160c001528301610822565b8181111561085057600060c083880101525b50601f01601f19169390930160c001949350505050565b60006020828403121561087957600080fd5b813567ffffffffffffffff81111561089057600080fd5b8201608081850312156107a057600080fd5b60208082526025908201527f4f6e6c79207468652041646d696e2063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b600181811c908216806108fb57607f821691505b60208210810361091b57634e487b7160e01b600052602260045260246000fd5b50919050565b80546001600160a01b0319166001600160a01b0392909216919091179055565b601f82111561046d57600081815260208120601f850160051c810160208610156109685750805b601f850160051c820191505b8181101561098757828155600101610974565b505050505050565b813561099a8161076e565b6109a48183610921565b5060016020808401356109b68161076e565b6109c281848601610921565b5060408401356002840155600383016060850135601e198636030181126109e857600080fd5b8501803567ffffffffffffffff811115610a0157600080fd5b8036038483011315610a1257600080fd5b610a2681610a2085546108e7565b85610941565b6000601f821160018114610a5c5760008315610a4457508382018601355b600019600385901b1c1916600184901b178555610ab5565b600085815260209020601f19841690835b82811015610a8c57868501890135825593880193908901908801610a6d565b5084821015610aab5760001960f88660031b161c198885880101351681555b50508683881b0185555b50505050505050505056fea26469706673582212201cc5804e209779efa4957cf548fce51fc181a737fab23b93a3bfe5a7063494af64736f6c634300080e0033";

type UniswapV3OracleUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3OracleUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3OracleUpgradeable__factory extends ContractFactory {
  constructor(...args: UniswapV3OracleUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3OracleUpgradeable> {
    return super.deploy(overrides || {}) as Promise<UniswapV3OracleUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UniswapV3OracleUpgradeable {
    return super.attach(address) as UniswapV3OracleUpgradeable;
  }
  override connect(signer: Signer): UniswapV3OracleUpgradeable__factory {
    return super.connect(signer) as UniswapV3OracleUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3OracleUpgradeableInterface {
    return new utils.Interface(_abi) as UniswapV3OracleUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3OracleUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV3OracleUpgradeable;
  }
}
