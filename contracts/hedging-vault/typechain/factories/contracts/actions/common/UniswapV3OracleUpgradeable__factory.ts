/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapV3OracleUpgradeable,
  UniswapV3OracleUpgradeableInterface,
} from "../../../../contracts/actions/common/UniswapV3OracleUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevKeeper",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newKeeper",
        type: "address",
      },
    ],
    name: "KeeperChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newKeeper",
        type: "address",
      },
    ],
    name: "changeKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKeeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "outputToken",
        type: "address",
      },
    ],
    name: "getSwapInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expectedPriceRate",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapPath",
            type: "bytes",
          },
        ],
        internalType: "struct UniswapV3OracleUpgradeable.SwapInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "inputToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expectedPriceRate",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapPath",
            type: "bytes",
          },
        ],
        internalType: "struct UniswapV3OracleUpgradeable.SwapInfo",
        name: "info",
        type: "tuple",
      },
    ],
    name: "setSwapInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610865806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630977983814610067578063391b6f4e1461007c5780636e9960c3146100a65780638f283970146100b7578063ae39ecfc146100ca578063da52ea7a146100ea575b600080fd5b61007a61007536600461049b565b6100fd565b005b6034546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6033546001600160a01b0316610089565b61007a6100c536600461049b565b6101f7565b6100dd6100d83660046104be565b6102e7565b60405161009d9190610573565b61007a6100f83660046104f6565b6103f9565b6033546001600160a01b0316336001600160a01b0316146101395760405162461bcd60e51b81526004016101309061052e565b60405180910390fd5b6001600160a01b0381166101a55760405162461bcd60e51b815260206004820152602d60248201527f4e6577206b656570657220616464726573732063616e6e6f742062652074686560448201526c206e756c6c206164647265737360981b6064820152608401610130565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f068b48a2fe7f498b57ff6da64f075ae658fde8d77124b092e62b3dc58d91ce3590600090a35050565b6033546001600160a01b0316336001600160a01b03161461022a5760405162461bcd60e51b81526004016101309061052e565b6001600160a01b0381166102955760405162461bcd60e51b815260206004820152602c60248201527f4e65772061646d696e20616464726573732063616e6e6f74206265207468652060448201526b6e756c6c206164647265737360a01b6064820152608401610130565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f90600090a35050565b60408051608081018252600080825260208201819052918101919091526060808201526001600160a01b0380841660009081526065602090815260408083208685168452825291829020825160808101845281548516815260018201549094169184019190915260028101549183019190915260038101805460608401919061036f90610711565b80601f016020809104026020016040519081016040528092919081815260200182805461039b90610711565b80156103e85780601f106103bd576101008083540402835291602001916103e8565b820191906000526020600020905b8154815290600101906020018083116103cb57829003601f168201915b505050505081525050905092915050565b6034546001600160a01b0316336001600160a01b03161461042c5760405162461bcd60e51b81526004016101309061052e565b806065600061043e602084018461049b565b6001600160a01b03166001600160a01b031681526020019081526020016000206000836020016020810190610473919061049b565b6001600160a01b0316815260208101919091526040016000206104968282610782565b505050565b6000602082840312156104ac578081fd5b81356104b781610817565b9392505050565b600080604083850312156104d0578081fd5b82356104db81610817565b915060208301356104eb81610817565b809150509250929050565b600060208284031215610507578081fd5b813567ffffffffffffffff81111561051d578182fd5b8201608081850312156104b7578182fd5b60208082526025908201527f4f6e6c79207468652041646d696e2063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b6000602080835260018060a01b03808551168285015280828601511660408501525060408401516060840152606084015160808085015280518060a0860152835b818110156105d05782810184015186820160c0015283016105b4565b818111156105e1578460c083880101525b50601f01601f19169390930160c001949350505050565b5b8181101561060d57600081556001016105f9565b5050565b67ffffffffffffffff8311156106295761062961074c565b6106338154610711565b600080601f8611601f8411818117156106525760008681526020902092505b801561068157601f880160051c8301602089101561066d5750825b61067f601f870160051c8501826105f8565b505b5080600181146106b55760009450871561069c578387013594505b600188901b60001960038a901b1c198616178655610707565b601f198816945082845b868110156106df57888601358255602095860195600190920191016106bf565b50888610156106fc5760001960f88a60031b161c19858901351681555b5060018860011b0186555b5050505050505050565b600181811c9082168061072557607f821691505b6020821081141561074657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b813561078d81610817565b6107978183610762565b5060208201356107a681610817565b6107b38160018401610762565b50604082013560028201556060820135601e198336030181126107d557600080fd5b8201803567ffffffffffffffff8111156107ee57600080fd5b60208201915080360382131561080357600080fd5b610811818360038601610611565b50505050565b6001600160a01b038116811461082c57600080fd5b5056fea264697066735822122044c9bd99ddc1d97981fab3879a1bba028bab0a78424b14e0c075101fd430cd7a64736f6c63430008040033";

type UniswapV3OracleUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3OracleUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3OracleUpgradeable__factory extends ContractFactory {
  constructor(...args: UniswapV3OracleUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3OracleUpgradeable> {
    return super.deploy(overrides || {}) as Promise<UniswapV3OracleUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UniswapV3OracleUpgradeable {
    return super.attach(address) as UniswapV3OracleUpgradeable;
  }
  override connect(signer: Signer): UniswapV3OracleUpgradeable__factory {
    return super.connect(signer) as UniswapV3OracleUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3OracleUpgradeableInterface {
    return new utils.Interface(_abi) as UniswapV3OracleUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3OracleUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV3OracleUpgradeable;
  }
}
