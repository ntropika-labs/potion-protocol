/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PotionProtocolOracleUpgradeable,
  PotionProtocolOracleUpgradeableInterface,
} from "../../../../contracts/actions/common/PotionProtocolOracleUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevAdminAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevOperatorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "OperatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevStrategistAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "StrategistChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "changeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "changeStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "potion",
        type: "address",
      },
    ],
    name: "getPotionBuyInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "potion",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct IPotionProtocolOracle.PotionBuyInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStrategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "potion",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct IPotionProtocolOracle.PotionBuyInfo",
        name: "info",
        type: "tuple",
      },
    ],
    name: "setPotionBuyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b2c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806372eb05b91161005b57806372eb05b9146100f05780638f283970146101035780639875196b14610116578063e7f43c681461013657600080fd5b806306394c9b1461008d57806334d9b2dc146100a25780634f66a9d6146100cc5780636e9960c3146100df575b600080fd5b6100a061009b36600461068d565b610147565b005b6035546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100a06100da3660046106b1565b61018f565b6033546001600160a01b03166100af565b6100a06100fe36600461068d565b61023d565b6100a061011136600461068d565b610279565b61012961012436600461068d565b6102b5565b6040516100c391906106ec565b6034546001600160a01b03166100af565b6033546001600160a01b0316336001600160a01b0316146101835760405162461bcd60e51b815260040161017a906107f6565b60405180910390fd5b61018c81610439565b50565b6034546001600160a01b0316336001600160a01b0316146102035760405162461bcd60e51b815260206004820152602860248201527f4f6e6c7920746865204f70657261746f722063616e2063616c6c207468697320604482015267333ab731ba34b7b760c11b606482015260840161017a565b8060656000610215602084018461068d565b6001600160a01b031681526020810191909152604001600020610238828261098f565b505050565b6033546001600160a01b0316336001600160a01b0316146102705760405162461bcd60e51b815260040161017a906107f6565b61018c816104f9565b6033546001600160a01b0316336001600160a01b0316146102ac5760405162461bcd60e51b815260040161017a906107f6565b61018c816105bb565b6102e9604051806080016040528060006001600160a01b031681526020016060815260200160008152602001600081525090565b6001600160a01b03808316600090815260656020908152604080832081516080810183528154909516855260018101805483518186028101860190945280845291948685019491929184015b828210156104165760008481526020908190206040805160a08082018352600c870290930180546001600160a01b0390811683526001808301548488015284518087018652600284015481526003840154818901526004840154818701526005840154606080830191909152600685015460808084019190915286880192909252865197880187526007850154841688526008850154938416888a0152600160a01b90930460ff16151595870195909552600983015486830152600a8301548686015290830194909452600b01549181019190915283529092019101610335565b505050508152602001600282015481526020016003820154815250509050919050565b6001600160a01b0381166104a75760405162461bcd60e51b815260206004820152602f60248201527f4e6577204f70657261746f7220616464726573732063616e6e6f74206265207460448201526e6865206e756c6c206164647265737360881b606482015260840161017a565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fd58299b712891143e76310d5e664c4203c940a67db37cf856bdaa3c5c76a802c90600090a35050565b6001600160a01b0381166105695760405162461bcd60e51b815260206004820152603160248201527f4e6577205374726174656769737420616464726573732063616e6e6f7420626560448201527020746865206e756c6c206164647265737360781b606482015260840161017a565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f3a76e21b656d08e1747e6decb6c6dcb819ace8e654b6582f4fcc50875ff9f85490600090a35050565b6001600160a01b0381166106265760405162461bcd60e51b815260206004820152602c60248201527f4e65772041646d696e20616464726573732063616e6e6f74206265207468652060448201526b6e756c6c206164647265737360a01b606482015260840161017a565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f90600090a35050565b6001600160a01b038116811461018c57600080fd5b60006020828403121561069f57600080fd5b81356106aa81610678565b9392505050565b6000602082840312156106c357600080fd5b813567ffffffffffffffff8111156106da57600080fd5b8201608081850312156106aa57600080fd5b6000602080835260a080840160018060a01b038087511684870152838701516080604081818a015284835180875260c09650868b019150888501945060005b818110156107d15785518051881684528a8101518b85015284810151805186860152808c01516060808701919091528187015188870152808201518c870152908701518a8601528082015180516001600160a01b0390811660e0880152602082015116610100870152604081015115156101208701529081015161014086015260800151610160850152850151610180840152948901946101a09092019160010161072b565b5050818b015160608b015260608b0151838b0152809850505050505050505092915050565b60208082526025908201527f4f6e6c79207468652041646d696e2063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b80546001600160a01b0319166001600160a01b0392909216919091179055565b60007f155555555555555555555555555555555555555555555555555555555555555582116001161561089e57634e487b7160e01b600052601160045260246000fd5b50600c0290565b81356108b081610678565b6108ba818361083b565b506001810160208301356108cd81610678565b6108d7818361083b565b5060408301358015158082146108ec57600080fd5b825460ff60a01b191660a09190911b60ff60a01b16179091555060608201356002820155608090910135600390910155565b813561092981610678565b610933818361083b565b506020820135600182015560408201356002820155606082013560038201556080820135600482015560a0820135600582015560c0820135600682015561098060e08301600783016108a5565b610180820135600b8201555050565b813561099a81610678565b6109a4818361083b565b5060018082016020840135601e198536030181126109c157600080fd5b8401803567ffffffffffffffff8111156109da57600080fd5b6020820191506101a080820236038313156109f457600080fd5b68010000000000000000821115610a1b57634e487b7160e01b600052604160045260246000fd5b835482855580831015610aa857610a318161085b565b610a3a8461085b565b6000878152602081209283019291909101905b82821015610aa457808255808983015580600283015580600383015580600483015580600583015580600683015580600783015580600883015580600983015580600a83015580600b830155600c82019150610a4d565b5050505b50600093845260208420935b82811015610ad857610ac6848661091e565b600c9490940193928101928501610ab4565b5050505050506040820135600282015560608201356003820155505056fea2646970667358221220c7cefac7dbc7bb034122f86b0b37625a68367308365793dbc80d111a0a3379dc64736f6c634300080e0033";

type PotionProtocolOracleUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PotionProtocolOracleUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PotionProtocolOracleUpgradeable__factory extends ContractFactory {
  constructor(...args: PotionProtocolOracleUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PotionProtocolOracleUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<PotionProtocolOracleUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PotionProtocolOracleUpgradeable {
    return super.attach(address) as PotionProtocolOracleUpgradeable;
  }
  override connect(signer: Signer): PotionProtocolOracleUpgradeable__factory {
    return super.connect(signer) as PotionProtocolOracleUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PotionProtocolOracleUpgradeableInterface {
    return new utils.Interface(
      _abi
    ) as PotionProtocolOracleUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PotionProtocolOracleUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PotionProtocolOracleUpgradeable;
  }
}
