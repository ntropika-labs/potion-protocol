/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PotionProtocolOracleUpgradeable,
  PotionProtocolOracleUpgradeableInterface,
} from "../../../../contracts/actions/common/PotionProtocolOracleUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevKeeper",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newKeeper",
        type: "address",
      },
    ],
    name: "KeeperChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newKeeper",
        type: "address",
      },
    ],
    name: "changeKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKeeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "potion",
        type: "address",
      },
    ],
    name: "getPotionBuyInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "potion",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct PotionProtocolOracleUpgradeable.PotionBuyInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "potion",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct PotionProtocolOracleUpgradeable.PotionBuyInfo",
        name: "info",
        type: "tuple",
      },
    ],
    name: "setPotionBuyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061098f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630977983814610067578063391b6f4e1461007c5780634f66a9d6146100a65780636e9960c3146100b95780638f283970146100ca5780639875196b146100dd575b600080fd5b61007a6100753660046104f0565b6100fd565b005b6034546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61007a6100b4366004610514565b6101f7565b6033546001600160a01b0316610089565b61007a6100d83660046104f0565b610264565b6100f06100eb3660046104f0565b610354565b60405161009d919061054f565b6033546001600160a01b0316336001600160a01b0316146101395760405162461bcd60e51b815260040161013090610659565b60405180910390fd5b6001600160a01b0381166101a55760405162461bcd60e51b815260206004820152602d60248201527f4e6577206b656570657220616464726573732063616e6e6f742062652074686560448201526c206e756c6c206164647265737360981b6064820152608401610130565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f068b48a2fe7f498b57ff6da64f075ae658fde8d77124b092e62b3dc58d91ce3590600090a35050565b6034546001600160a01b0316336001600160a01b03161461022a5760405162461bcd60e51b815260040161013090610659565b806065600061023c60208401846104f0565b6001600160a01b03168152602081019190915260400160002061025f82826107f2565b505050565b6033546001600160a01b0316336001600160a01b0316146102975760405162461bcd60e51b815260040161013090610659565b6001600160a01b0381166103025760405162461bcd60e51b815260206004820152602c60248201527f4e65772061646d696e20616464726573732063616e6e6f74206265207468652060448201526b6e756c6c206164647265737360a01b6064820152608401610130565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f90600090a35050565b610388604051806080016040528060006001600160a01b031681526020016060815260200160008152602001600081525090565b6001600160a01b03808316600090815260656020908152604080832081516080810183528154909516855260018101805483518186028101860190945280845291948685019491929184015b828210156104b55760008481526020908190206040805160a08082018352600c870290930180546001600160a01b0390811683526001808301548488015284518087018652600284015481526003840154818901526004840154818701526005840154606080830191909152600685015460808084019190915286880192909252865197880187526007850154841688526008850154938416888a0152600160a01b90930460ff16151595870195909552600983015486830152600a8301548686015290830194909452600b015491810191909152835290920191016103d4565b505050508152602001600282015481526020016003820154815250509050919050565b6001600160a01b03811681146104ed57600080fd5b50565b60006020828403121561050257600080fd5b813561050d816104d8565b9392505050565b60006020828403121561052657600080fd5b813567ffffffffffffffff81111561053d57600080fd5b82016080818503121561050d57600080fd5b6000602080835260a080840160018060a01b038087511684870152838701516080604081818a015284835180875260c09650868b019150888501945060005b818110156106345785518051881684528a8101518b85015284810151805186860152808c01516060808701919091528187015188870152808201518c870152908701518a8601528082015180516001600160a01b0390811660e0880152602082015116610100870152604081015115156101208701529081015161014086015260800151610160850152850151610180840152948901946101a09092019160010161058e565b5050818b015160608b015260608b0151838b0152809850505050505050505092915050565b60208082526025908201527f4f6e6c79207468652041646d696e2063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b80546001600160a01b0319166001600160a01b0392909216919091179055565b60007f155555555555555555555555555555555555555555555555555555555555555582116001161561070157634e487b7160e01b600052601160045260246000fd5b50600c0290565b8135610713816104d8565b61071d818361069e565b50600181016020830135610730816104d8565b61073a818361069e565b50604083013580151580821461074f57600080fd5b825460ff60a01b191660a09190911b60ff60a01b16179091555060608201356002820155608090910135600390910155565b813561078c816104d8565b610796818361069e565b506020820135600182015560408201356002820155606082013560038201556080820135600482015560a0820135600582015560c082013560068201556107e360e0830160078301610708565b610180820135600b8201555050565b81356107fd816104d8565b610807818361069e565b5060018082016020840135601e1985360301811261082457600080fd5b8401803567ffffffffffffffff81111561083d57600080fd5b6020820191506101a0808202360383131561085757600080fd5b6801000000000000000082111561087e57634e487b7160e01b600052604160045260246000fd5b83548285558083101561090b57610894816106be565b61089d846106be565b6000878152602081209283019291909101905b8282101561090757808255808983015580600283015580600383015580600483015580600583015580600683015580600783015580600883015580600983015580600a83015580600b830155600c820191506108b0565b5050505b50600093845260208420935b8281101561093b576109298486610781565b600c9490940193928101928501610917565b5050505050506040820135600282015560608201356003820155505056fea26469706673582212201af3fa8425bd87aee07697f98f4a3e8bb270168ae8241f9062ab397df733dbc864736f6c634300080e0033";

type PotionProtocolOracleUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PotionProtocolOracleUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PotionProtocolOracleUpgradeable__factory extends ContractFactory {
  constructor(...args: PotionProtocolOracleUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PotionProtocolOracleUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<PotionProtocolOracleUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PotionProtocolOracleUpgradeable {
    return super.attach(address) as PotionProtocolOracleUpgradeable;
  }
  override connect(signer: Signer): PotionProtocolOracleUpgradeable__factory {
    return super.connect(signer) as PotionProtocolOracleUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PotionProtocolOracleUpgradeableInterface {
    return new utils.Interface(
      _abi
    ) as PotionProtocolOracleUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PotionProtocolOracleUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PotionProtocolOracleUpgradeable;
  }
}
