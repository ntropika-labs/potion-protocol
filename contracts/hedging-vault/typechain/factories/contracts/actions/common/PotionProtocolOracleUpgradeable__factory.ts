/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PotionProtocolOracleUpgradeable,
  PotionProtocolOracleUpgradeableInterface,
} from "../../../../contracts/actions/common/PotionProtocolOracleUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevAdminAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevOperatorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "OperatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevStrategistAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "StrategistChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdminAddress",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperatorAddress",
        type: "address",
      },
    ],
    name: "changeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStrategistAddress",
        type: "address",
      },
    ],
    name: "changeStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "potion",
        type: "address",
      },
    ],
    name: "getPotionBuyInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "potion",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct PotionProtocolOracleUpgradeable.PotionBuyInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStrategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "potion",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct PotionProtocolOracleUpgradeable.PotionBuyInfo",
        name: "info",
        type: "tuple",
      },
    ],
    name: "setPotionBuyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ad2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806372eb05b91161005b57806372eb05b9146100f05780638f283970146101035780639875196b14610116578063e7f43c681461013657600080fd5b806306394c9b1461008d57806334d9b2dc146100a25780634f66a9d6146100cc5780636e9960c3146100df575b600080fd5b6100a061009b3660046105e2565b610147565b005b6035546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100a06100da366004610606565b6101fb565b6033546001600160a01b03166100af565b6100a06100fe3660046105e2565b6102ab565b6100a06101113660046105e2565b610356565b6101296101243660046105e2565b610446565b6040516100c39190610641565b6034546001600160a01b03166100af565b6033546001600160a01b0316336001600160a01b0316146101835760405162461bcd60e51b815260040161017a9061074b565b60405180910390fd5b6001600160a01b0381166101a95760405162461bcd60e51b815260040161017a90610790565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f3a76e21b656d08e1747e6decb6c6dcb819ace8e654b6582f4fcc50875ff9f85490600090a35050565b6035546001600160a01b0316336001600160a01b0316146102715760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c792074686520537472617465676973742063616e2063616c6c207468696044820152693990333ab731ba34b7b760b11b606482015260840161017a565b806065600061028360208401846105e2565b6001600160a01b0316815260208101919091526040016000206102a68282610935565b505050565b6033546001600160a01b0316336001600160a01b0316146102de5760405162461bcd60e51b815260040161017a9061074b565b6001600160a01b0381166103045760405162461bcd60e51b815260040161017a90610790565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f3a76e21b656d08e1747e6decb6c6dcb819ace8e654b6582f4fcc50875ff9f85490600090a35050565b6033546001600160a01b0316336001600160a01b0316146103895760405162461bcd60e51b815260040161017a9061074b565b6001600160a01b0381166103f45760405162461bcd60e51b815260206004820152602c60248201527f4e65772041646d696e20616464726573732063616e6e6f74206265207468652060448201526b6e756c6c206164647265737360a01b606482015260840161017a565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f90600090a35050565b61047a604051806080016040528060006001600160a01b031681526020016060815260200160008152602001600081525090565b6001600160a01b03808316600090815260656020908152604080832081516080810183528154909516855260018101805483518186028101860190945280845291948685019491929184015b828210156105a75760008481526020908190206040805160a08082018352600c870290930180546001600160a01b0390811683526001808301548488015284518087018652600284015481526003840154818901526004840154818701526005840154606080830191909152600685015460808084019190915286880192909252865197880187526007850154841688526008850154938416888a0152600160a01b90930460ff16151595870195909552600983015486830152600a8301548686015290830194909452600b015491810191909152835290920191016104c6565b505050508152602001600282015481526020016003820154815250509050919050565b6001600160a01b03811681146105df57600080fd5b50565b6000602082840312156105f457600080fd5b81356105ff816105ca565b9392505050565b60006020828403121561061857600080fd5b813567ffffffffffffffff81111561062f57600080fd5b8201608081850312156105ff57600080fd5b6000602080835260a080840160018060a01b038087511684870152838701516080604081818a015284835180875260c09650868b019150888501945060005b818110156107265785518051881684528a8101518b85015284810151805186860152808c01516060808701919091528187015188870152808201518c870152908701518a8601528082015180516001600160a01b0390811660e0880152602082015116610100870152604081015115156101208701529081015161014086015260800151610160850152850151610180840152948901946101a090920191600101610680565b5050818b015160608b015260608b0151838b0152809850505050505050505092915050565b60208082526025908201527f4f6e6c79207468652041646d696e2063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b60208082526031908201527f4e6577205374726174656769737420616464726573732063616e6e6f7420626560408201527020746865206e756c6c206164647265737360781b606082015260800190565b80546001600160a01b0319166001600160a01b0392909216919091179055565b60007f155555555555555555555555555555555555555555555555555555555555555582116001161561084457634e487b7160e01b600052601160045260246000fd5b50600c0290565b8135610856816105ca565b61086081836107e1565b50600181016020830135610873816105ca565b61087d81836107e1565b50604083013580151580821461089257600080fd5b825460ff60a01b191660a09190911b60ff60a01b16179091555060608201356002820155608090910135600390910155565b81356108cf816105ca565b6108d981836107e1565b506020820135600182015560408201356002820155606082013560038201556080820135600482015560a0820135600582015560c0820135600682015561092660e083016007830161084b565b610180820135600b8201555050565b8135610940816105ca565b61094a81836107e1565b5060018082016020840135601e1985360301811261096757600080fd5b8401803567ffffffffffffffff81111561098057600080fd5b6020820191506101a0808202360383131561099a57600080fd5b680100000000000000008211156109c157634e487b7160e01b600052604160045260246000fd5b835482855580831015610a4e576109d781610801565b6109e084610801565b6000878152602081209283019291909101905b82821015610a4a57808255808983015580600283015580600383015580600483015580600583015580600683015580600783015580600883015580600983015580600a83015580600b830155600c820191506109f3565b5050505b50600093845260208420935b82811015610a7e57610a6c84866108c4565b600c9490940193928101928501610a5a565b5050505050506040820135600282015560608201356003820155505056fea2646970667358221220d4bcf559adae5444ea39ee9598984d0d31f253c91b35155898ea3b1fb0a8ff5a64736f6c634300080e0033";

type PotionProtocolOracleUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PotionProtocolOracleUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PotionProtocolOracleUpgradeable__factory extends ContractFactory {
  constructor(...args: PotionProtocolOracleUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PotionProtocolOracleUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<PotionProtocolOracleUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PotionProtocolOracleUpgradeable {
    return super.attach(address) as PotionProtocolOracleUpgradeable;
  }
  override connect(signer: Signer): PotionProtocolOracleUpgradeable__factory {
    return super.connect(signer) as PotionProtocolOracleUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PotionProtocolOracleUpgradeableInterface {
    return new utils.Interface(
      _abi
    ) as PotionProtocolOracleUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PotionProtocolOracleUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PotionProtocolOracleUpgradeable;
  }
}
