/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestWrapperPotionProtocolLib,
  TestWrapperPotionProtocolLibInterface,
} from "../../../../contracts/test/wrappers/TestWrapperPotionProtocolLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPotionLiquidityPool",
        name: "potionLiquidityPoolManager",
        type: "address",
      },
      {
        internalType: "contract IOpynFactory",
        name: "opynFactory",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "targetPotionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikePriceInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct PotionBuyInfo",
        name: "buyInfo",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "USDC",
        type: "address",
      },
    ],
    name: "buyPotion",
    outputs: [
      {
        internalType: "uint256",
        name: "actualPremium",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPotionLiquidityPool",
        name: "potionLiquidityPoolManager",
        type: "address",
      },
      {
        internalType: "contract IOpynController",
        name: "opynController",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "targetPotionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikePriceInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct PotionBuyInfo",
        name: "buyInfo",
        type: "tuple",
      },
    ],
    name: "redeemPotion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611364806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632e63a94e1461003b578063983c031114610050575b600080fd5b61004e610049366004610aac565b610075565b005b61006361005e366004610b0e565b61008d565b60405190815260200160405180910390f35b610088838361008384610dcb565b6100ae565b505050565b60006100a4868661009d87610dcb565b86866101f5565b9695505050505050565b8051604051630545d15160e21b81526001600160a01b038083166004830152851690631517454490602401600060405180830381600087803b1580156100f357600080fd5b505af1158015610107573d6000803e3d6000fd5b5050604051631a25eb9160e11b81526001600160a01b038481166004830152600093508716915063344bd72290602401602060405180830381865afa158015610154573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101789190610e5e565b9050600061018c3084848760c001516104b5565b604051635b0bf86360e11b81529091506001600160a01b0386169063b617f0c6906101bb908490600401610ed3565b600060405180830381600087803b1580156101d557600080fd5b505af11580156101e9573d6000803e3d6000fd5b50505050505050505050565b60008061020f848660a001516105d890919063ffffffff16565b905061021c83888361060e565b602085015160408601516060870151600092610245926001600160a01b038b1692889190610745565b90506001600160a01b0381166103a55760208601516040870151606088015160009261027e926001600160a01b038c16928991906107c0565b905086600001516001600160a01b0316816001600160a01b0316146103105760405162461bcd60e51b815260206004820152603760248201527f4f746f6b656e20646f6573206e6f7420657869737420616e642074617267657460448201527f206164647265737320646f6573206e6f74206d6174636800000000000000000060648201526084015b60405180910390fd5b602087015160408089015160608a015160808b015192516322d8755f60e01b81526001600160a01b038e16946322d8755f9461035a9491938c938493926001918d90600401611082565b6020604051808303816000875af1158015610379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039d9190610e5e565b935050610496565b85516001600160a01b0382811691161461041d5760405162461bcd60e51b815260206004820152603360248201527f4f746f6b656e20646f65732065786973742062757420746172676574206164646044820152720e4cae6e640c8decae640dcdee840dac2e8c6d606b1b6064820152608401610307565b6080860151604051630e94961760e11b81526001600160a01b038a1691631d292c2e9161045091859187906004016110e3565b6020604051808303816000875af115801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190610e5e565b92505b818310156104aa576104aa8489600061060e565b505095945050505050565b60408051600180825281830190925260609160009190816020015b610534604080516101008101909152806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b8152602001906001900390816104d0579050506040805161010081019091529091508060088152602001876001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b031681526020018581526020018481526020016000815260200160405180602001604052806000815250815250816000815181106105c4576105c4611117565b602090810291909101015295945050505050565b600061060583836105eb6006600a611227565b6105f6906064611233565b6106009190611252565b6107fa565b90505b92915050565b8015806106885750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106869190610e5e565b155b6106f35760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610307565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610088908490610827565b6040516304551c1560e21b81526000906001600160a01b0387169063115470549061077f908890889081908990899060019060040161126a565b602060405180830381865afa15801561079c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a491906112a3565b604051632e1ae69960e21b81526000906001600160a01b0387169063b86b9a649061077f908890889081908990899060019060040161126a565b60006108086006600a611227565b610813906064611233565b61081d8385611233565b61060591906112c0565b600061087c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108f99092919063ffffffff16565b805190915015610088578080602001905181019061089a91906112e2565b6100885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610307565b60606109088484600085610912565b90505b9392505050565b6060824710156109735760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610307565b6001600160a01b0385163b6109ca5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610307565b600080866001600160a01b031685876040516109e691906112ff565b60006040518083038185875af1925050503d8060008114610a23576040519150601f19603f3d011682016040523d82523d6000602084013e610a28565b606091505b5091509150610a38828286610a43565b979650505050505050565b60608315610a5257508161090b565b825115610a625782518084602001fd5b8160405162461bcd60e51b8152600401610307919061131b565b6001600160a01b0381168114610a9157600080fd5b50565b600060e08284031215610aa657600080fd5b50919050565b600080600060608486031215610ac157600080fd5b8335610acc81610a7c565b92506020840135610adc81610a7c565b9150604084013567ffffffffffffffff811115610af857600080fd5b610b0486828701610a94565b9150509250925092565b600080600080600060a08688031215610b2657600080fd5b8535610b3181610a7c565b94506020860135610b4181610a7c565b9350604086013567ffffffffffffffff811115610b5d57600080fd5b610b6988828901610a94565b935050606086013591506080860135610b8181610a7c565b809150509295509295909350565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610bc857610bc8610b8f565b60405290565b60405160e0810167ffffffffffffffff81118282101715610bc857610bc8610b8f565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c1a57610c1a610b8f565b604052919050565b8035610c2d81610a7c565b919050565b8015158114610a9157600080fd5b600060a08284031215610c5257600080fd5b610c5a610ba5565b90508135610c6781610a7c565b81526020820135610c7781610a7c565b60208201526040820135610c8a81610c32565b80604083015250606082013560608201526080820135608082015292915050565b600082601f830112610cbc57600080fd5b8135602067ffffffffffffffff821115610cd857610cd8610b8f565b610ce6818360051b01610bf1565b8281526101a09283028501820192828201919087851115610d0657600080fd5b8387015b85811015610dbe5780890382811215610d235760008081fd5b610d2b610ba5565b8235610d3681610a7c565b81528287013587820152604060a0603f198401811315610d565760008081fd5b610d5e610ba5565b93508185013584526060808601358a86015260808087013584870152828701358287015260c0870135818701528584860152610d9d8f60e08901610c40565b91850191909152610180860135908401525050855250928401928101610d0a565b5090979650505050505050565b600060e08236031215610ddd57600080fd5b610de5610bce565b610dee83610c22565b8152610dfc60208401610c22565b60208201526040830135604082015260608301356060820152608083013567ffffffffffffffff811115610e2f57600080fd5b610e3b36828601610cab565b60808301525060a083013560a082015260c083013560c082015280915050919050565b600060208284031215610e7057600080fd5b5051919050565b60005b83811015610e92578181015183820152602001610e7a565b83811115610ea1576000848401525b50505050565b60008151808452610ebf816020860160208601610e77565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610fa557603f198a850301865282516101008151600b8110610f2f57634e487b7160e01b85526021600452602485fd5b8652818a01516001600160a01b039081168b8801528983015181168a880152606080840151909116908701526080808301519087015260a0808301519087015260c0808301519087015260e091820151918601819052610f9181870183610ea7565b978a01979550505091870191600101610efb565b50919998505050505050505050565b600081518084526020808501945080840160005b8381101561107757815180516001600160a01b03908116895284820151858a01526040808301518051828c0152808701516060808d0191909152818301516080808e01919091528183015160a08e01529182015160c08d0152808501518051851660e08e015260208101519094166101008d01529183015115156101208c0152908201516101408b0152908101516101608a015201516101808801526101a09096019590820190600101610fc8565b509495945050505050565b6001600160a01b038981168252888116602083015287166040820152606081018690526080810185905283151560a082015261010060c082018190526000906110cd83820186610fb4565b9150508260e08301529998505050505050505050565b6001600160a01b038416815260606020820181905260009061110790830185610fb4565b9050826040830152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561117e5781600019048211156111645761116461112d565b8085161561117157918102915b93841c9390800290611148565b509250929050565b60008261119557506001610608565b816111a257506000610608565b81600181146111b857600281146111c2576111de565b6001915050610608565b60ff8411156111d3576111d361112d565b50506001821b610608565b5060208310610133831016604e8410600b8410161715611201575081810a610608565b61120b8383611143565b806000190482111561121f5761121f61112d565b029392505050565b60006106058383611186565b600081600019048311821515161561124d5761124d61112d565b500290565b600082198211156112655761126561112d565b500190565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925290151560a082015260c00190565b6000602082840312156112b557600080fd5b815161090b81610a7c565b6000826112dd57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156112f457600080fd5b815161090b81610c32565b60008251611311818460208701610e77565b9190910192915050565b6020815260006106056020830184610ea756fea26469706673582212202643fd1337f018856f4e84d26a38f4c4cf589878fddf6225bd684dfc3022f42864736f6c634300080e0033";

type TestWrapperPotionProtocolLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrapperPotionProtocolLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrapperPotionProtocolLib__factory extends ContractFactory {
  constructor(...args: TestWrapperPotionProtocolLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestWrapperPotionProtocolLib> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestWrapperPotionProtocolLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWrapperPotionProtocolLib {
    return super.attach(address) as TestWrapperPotionProtocolLib;
  }
  override connect(signer: Signer): TestWrapperPotionProtocolLib__factory {
    return super.connect(signer) as TestWrapperPotionProtocolLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrapperPotionProtocolLibInterface {
    return new utils.Interface(_abi) as TestWrapperPotionProtocolLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrapperPotionProtocolLib {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestWrapperPotionProtocolLib;
  }
}
