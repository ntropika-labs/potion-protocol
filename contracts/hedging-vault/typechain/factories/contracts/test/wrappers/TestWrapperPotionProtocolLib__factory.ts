/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestWrapperPotionProtocolLib,
  TestWrapperPotionProtocolLibInterface,
} from "../../../../contracts/test/wrappers/TestWrapperPotionProtocolLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPotionLiquidityPool",
        name: "potionLiquidityPoolManager",
        type: "address",
      },
      {
        internalType: "contract IOpynFactory",
        name: "opynFactory",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "targetPotionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikePriceInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct PotionBuyInfo",
        name: "buyInfo",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "USDC",
        type: "address",
      },
    ],
    name: "buyPotion",
    outputs: [
      {
        internalType: "uint256",
        name: "actualPremium",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPotionLiquidityPool",
        name: "potionLiquidityPoolManager",
        type: "address",
      },
      {
        internalType: "contract IOpynController",
        name: "opynController",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "targetPotionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikePriceInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expectedPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSizeInPotions",
            type: "uint256",
          },
        ],
        internalType: "struct PotionBuyInfo",
        name: "buyInfo",
        type: "tuple",
      },
    ],
    name: "redeemPotion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061130a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632e63a94e1461003b578063983c031114610050575b600080fd5b61004e610049366004610a52565b610075565b005b61006361005e366004610ab4565b61008d565b60405190815260200160405180910390f35b610088838361008384610d71565b6100ae565b505050565b60006100a4868661009d87610d71565b868661019b565b9695505050505050565b8051604051631a25eb9160e11b81526001600160a01b0380831660048301526000919086169063344bd72290602401602060405180830381865afa1580156100fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011e9190610e04565b905060006101323084848760c0015161045b565b604051635b0bf86360e11b81529091506001600160a01b0386169063b617f0c690610161908490600401610e79565b600060405180830381600087803b15801561017b57600080fd5b505af115801561018f573d6000803e3d6000fd5b50505050505050505050565b6000806101b5848660a0015161057e90919063ffffffff16565b90506101c28388836105b4565b6020850151604086015160608701516000926101eb926001600160a01b038b16928891906106eb565b90506001600160a01b03811661034b57602086015160408701516060880151600092610224926001600160a01b038c1692899190610766565b905086600001516001600160a01b0316816001600160a01b0316146102b65760405162461bcd60e51b815260206004820152603760248201527f4f746f6b656e20646f6573206e6f7420657869737420616e642074617267657460448201527f206164647265737320646f6573206e6f74206d6174636800000000000000000060648201526084015b60405180910390fd5b602087015160408089015160608a015160808b015192516322d8755f60e01b81526001600160a01b038e16946322d8755f946103009491938c938493926001918d90600401611028565b6020604051808303816000875af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610e04565b93505061043c565b85516001600160a01b038281169116146103c35760405162461bcd60e51b815260206004820152603360248201527f4f746f6b656e20646f65732065786973742062757420746172676574206164646044820152720e4cae6e640c8decae640dcdee840dac2e8c6d606b1b60648201526084016102ad565b6080860151604051630e94961760e11b81526001600160a01b038a1691631d292c2e916103f69185918790600401611089565b6020604051808303816000875af1158015610415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104399190610e04565b92505b8183101561045057610450848960006105b4565b505095945050505050565b60408051600180825281830190925260609160009190816020015b6104da604080516101008101909152806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b815260200190600190039081610476579050506040805161010081019091529091508060088152602001876001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b0316815260200185815260200184815260200160008152602001604051806020016040528060008152508152508160008151811061056a5761056a6110bd565b602090810291909101015295945050505050565b60006105ab83836105916006600a6111cd565b61059c9060646111d9565b6105a691906111f8565b6107a0565b90505b92915050565b80158061062e5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190610e04565b155b6106995760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016102ad565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526100889084906107cd565b6040516304551c1560e21b81526000906001600160a01b038716906311547054906107259088908890819089908990600190600401611210565b602060405180830381865afa158015610742573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a49190611249565b604051632e1ae69960e21b81526000906001600160a01b0387169063b86b9a64906107259088908890819089908990600190600401611210565b60006107ae6006600a6111cd565b6107b99060646111d9565b6107c383856111d9565b6105ab9190611266565b6000610822826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661089f9092919063ffffffff16565b80519091501561008857808060200190518101906108409190611288565b6100885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102ad565b60606108ae84846000856108b8565b90505b9392505050565b6060824710156109195760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102ad565b6001600160a01b0385163b6109705760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102ad565b600080866001600160a01b0316858760405161098c91906112a5565b60006040518083038185875af1925050503d80600081146109c9576040519150601f19603f3d011682016040523d82523d6000602084013e6109ce565b606091505b50915091506109de8282866109e9565b979650505050505050565b606083156109f85750816108b1565b825115610a085782518084602001fd5b8160405162461bcd60e51b81526004016102ad91906112c1565b6001600160a01b0381168114610a3757600080fd5b50565b600060e08284031215610a4c57600080fd5b50919050565b600080600060608486031215610a6757600080fd5b8335610a7281610a22565b92506020840135610a8281610a22565b9150604084013567ffffffffffffffff811115610a9e57600080fd5b610aaa86828701610a3a565b9150509250925092565b600080600080600060a08688031215610acc57600080fd5b8535610ad781610a22565b94506020860135610ae781610a22565b9350604086013567ffffffffffffffff811115610b0357600080fd5b610b0f88828901610a3a565b935050606086013591506080860135610b2781610a22565b809150509295509295909350565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610b6e57610b6e610b35565b60405290565b60405160e0810167ffffffffffffffff81118282101715610b6e57610b6e610b35565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bc057610bc0610b35565b604052919050565b8035610bd381610a22565b919050565b8015158114610a3757600080fd5b600060a08284031215610bf857600080fd5b610c00610b4b565b90508135610c0d81610a22565b81526020820135610c1d81610a22565b60208201526040820135610c3081610bd8565b80604083015250606082013560608201526080820135608082015292915050565b600082601f830112610c6257600080fd5b8135602067ffffffffffffffff821115610c7e57610c7e610b35565b610c8c818360051b01610b97565b8281526101a09283028501820192828201919087851115610cac57600080fd5b8387015b85811015610d645780890382811215610cc95760008081fd5b610cd1610b4b565b8235610cdc81610a22565b81528287013587820152604060a0603f198401811315610cfc5760008081fd5b610d04610b4b565b93508185013584526060808601358a86015260808087013584870152828701358287015260c0870135818701528584860152610d438f60e08901610be6565b91850191909152610180860135908401525050855250928401928101610cb0565b5090979650505050505050565b600060e08236031215610d8357600080fd5b610d8b610b74565b610d9483610bc8565b8152610da260208401610bc8565b60208201526040830135604082015260608301356060820152608083013567ffffffffffffffff811115610dd557600080fd5b610de136828601610c51565b60808301525060a083013560a082015260c083013560c082015280915050919050565b600060208284031215610e1657600080fd5b5051919050565b60005b83811015610e38578181015183820152602001610e20565b83811115610e47576000848401525b50505050565b60008151808452610e65816020860160208601610e1d565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610f4b57603f198a850301865282516101008151600b8110610ed557634e487b7160e01b85526021600452602485fd5b8652818a01516001600160a01b039081168b8801528983015181168a880152606080840151909116908701526080808301519087015260a0808301519087015260c0808301519087015260e091820151918601819052610f3781870183610e4d565b978a01979550505091870191600101610ea1565b50919998505050505050505050565b600081518084526020808501945080840160005b8381101561101d57815180516001600160a01b03908116895284820151858a01526040808301518051828c0152808701516060808d0191909152818301516080808e01919091528183015160a08e01529182015160c08d0152808501518051851660e08e015260208101519094166101008d01529183015115156101208c0152908201516101408b0152908101516101608a015201516101808801526101a09096019590820190600101610f6e565b509495945050505050565b6001600160a01b038981168252888116602083015287166040820152606081018690526080810185905283151560a082015261010060c0820181905260009061107383820186610f5a565b9150508260e08301529998505050505050505050565b6001600160a01b03841681526060602082018190526000906110ad90830185610f5a565b9050826040830152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561112457816000190482111561110a5761110a6110d3565b8085161561111757918102915b93841c93908002906110ee565b509250929050565b60008261113b575060016105ae565b81611148575060006105ae565b816001811461115e576002811461116857611184565b60019150506105ae565b60ff841115611179576111796110d3565b50506001821b6105ae565b5060208310610133831016604e8410600b84101617156111a7575081810a6105ae565b6111b183836110e9565b80600019048211156111c5576111c56110d3565b029392505050565b60006105ab838361112c565b60008160001904831182151516156111f3576111f36110d3565b500290565b6000821982111561120b5761120b6110d3565b500190565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925290151560a082015260c00190565b60006020828403121561125b57600080fd5b81516108b181610a22565b60008261128357634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561129a57600080fd5b81516108b181610bd8565b600082516112b7818460208701610e1d565b9190910192915050565b6020815260006105ab6020830184610e4d56fea2646970667358221220ec66b9e136702dccd4713de10db5c6bf7a62745364877567cb51097ce25dace964736f6c634300080e0033";

type TestWrapperPotionProtocolLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrapperPotionProtocolLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrapperPotionProtocolLib__factory extends ContractFactory {
  constructor(...args: TestWrapperPotionProtocolLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestWrapperPotionProtocolLib> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestWrapperPotionProtocolLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWrapperPotionProtocolLib {
    return super.attach(address) as TestWrapperPotionProtocolLib;
  }
  override connect(signer: Signer): TestWrapperPotionProtocolLib__factory {
    return super.connect(signer) as TestWrapperPotionProtocolLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrapperPotionProtocolLibInterface {
    return new utils.Interface(_abi) as TestWrapperPotionProtocolLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrapperPotionProtocolLib {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestWrapperPotionProtocolLib;
  }
}
