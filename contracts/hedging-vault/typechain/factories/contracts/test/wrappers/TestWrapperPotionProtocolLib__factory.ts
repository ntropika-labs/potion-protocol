/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestWrapperPotionProtocolLib,
  TestWrapperPotionProtocolLibInterface,
} from "../../../../contracts/test/wrappers/TestWrapperPotionProtocolLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPotionLiquidityPool",
        name: "potionLiquidityPoolManager",
        type: "address",
      },
      {
        internalType: "contract IOpynFactory",
        name: "opynFactory",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikePriceInUSDC",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPremiumInUSDC",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "targetPotionAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "lp",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "poolId",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "a_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "b_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "c_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "d_59x18",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "max_util_59x18",
                    type: "int256",
                  },
                ],
                internalType: "struct ICurveManager.Curve",
                name: "curve",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "underlyingAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "strikeAsset",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "isPut",
                    type: "bool",
                  },
                  {
                    internalType: "uint256",
                    name: "maxStrikePercent",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxDurationInDays",
                    type: "uint256",
                  },
                ],
                internalType: "struct ICriteriaManager.Criteria",
                name: "criteria",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "orderSizeInOtokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPotionLiquidityPool.CounterpartyDetails[]",
            name: "sellers",
            type: "tuple[]",
          },
          {
            internalType: "contract IERC20Upgradeable",
            name: "USDC",
            type: "address",
          },
        ],
        internalType: "struct TestWrapperPotionProtocolLib.BuyPotionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "buyPotion",
    outputs: [
      {
        internalType: "uint256",
        name: "actualPremiumInUSDC",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPotionLiquidityPool",
        name: "potionLiquidityPoolManager",
        type: "address",
      },
      {
        internalType: "contract IOpynController",
        name: "opynController",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetPotionAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalSizeInPotions",
        type: "uint256",
      },
    ],
    name: "redeemPotion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type TestWrapperPotionProtocolLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrapperPotionProtocolLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrapperPotionProtocolLib__factory extends ContractFactory {
  constructor(...args: TestWrapperPotionProtocolLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestWrapperPotionProtocolLib> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestWrapperPotionProtocolLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWrapperPotionProtocolLib {
    return super.attach(address) as TestWrapperPotionProtocolLib;
  }
  override connect(signer: Signer): TestWrapperPotionProtocolLib__factory {
    return super.connect(signer) as TestWrapperPotionProtocolLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrapperPotionProtocolLibInterface {
    return new utils.Interface(_abi) as TestWrapperPotionProtocolLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrapperPotionProtocolLib {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestWrapperPotionProtocolLib;
  }
}
