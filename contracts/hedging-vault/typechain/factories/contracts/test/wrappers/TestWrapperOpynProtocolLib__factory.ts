/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestWrapperOpynProtocolLib,
  TestWrapperOpynProtocolLibInterface,
} from "../../../../contracts/test/wrappers/TestWrapperOpynProtocolLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IOpynController",
        name: "opynController",
        type: "address",
      },
      {
        internalType: "address",
        name: "potion",
        type: "address",
      },
    ],
    name: "isPotionRedeemable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061027a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063149bfc7b14610030575b600080fd5b61004361003e36600461018c565b610057565b604051901515815260200160405180910390f35b6000610063838361006a565b9392505050565b6040516339c8d01b60e21b81526001600160a01b038281166004830152600091829185169063e723406c90602401602060405180830381865afa1580156100b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d991906101c5565b9050610063604051806040016040528060128152602001716973506f74696f6e52656465656d61626c6560701b8152508261014f82826040516024016101209291906101e7565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b179052610153565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b038116811461018957600080fd5b50565b6000806040838503121561019f57600080fd5b82356101aa81610174565b915060208301356101ba81610174565b809150509250929050565b6000602082840312156101d757600080fd5b8151801515811461006357600080fd5b604081526000835180604084015260005b8181101561021557602081870181015160608684010152016101f8565b81811115610227576000606083860101525b50921515602083015250601f91909101601f19160160600191905056fea26469706673582212205b2bccddfe197287973d381d52f3c913e45371c006228a3a1834327debf00bf664736f6c634300080e0033";

type TestWrapperOpynProtocolLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrapperOpynProtocolLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrapperOpynProtocolLib__factory extends ContractFactory {
  constructor(...args: TestWrapperOpynProtocolLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestWrapperOpynProtocolLib> {
    return super.deploy(overrides || {}) as Promise<TestWrapperOpynProtocolLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWrapperOpynProtocolLib {
    return super.attach(address) as TestWrapperOpynProtocolLib;
  }
  override connect(signer: Signer): TestWrapperOpynProtocolLib__factory {
    return super.connect(signer) as TestWrapperOpynProtocolLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrapperOpynProtocolLibInterface {
    return new utils.Interface(_abi) as TestWrapperOpynProtocolLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrapperOpynProtocolLib {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestWrapperOpynProtocolLib;
  }
}
