/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestWrapperVaultWithReceipts,
  TestWrapperVaultWithReceiptsInterface,
} from "../../../../contracts/test/wrappers/TestWrapperVaultWithReceipts";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "DepositWithReceipt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RedeemReceipt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "RedeemReceiptBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOfAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "maxDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "maxRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintId_",
        type: "uint256",
      },
    ],
    name: "mockSetMintId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "redeemBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612867806100206000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c80636e553f65116100b8578063e985e9c51161007c578063e985e9c5146102c5578063f0670dd314610301578063f242432a14610314578063f399e22e14610327578063fe90e5bc1461033a578063fe992c981461034357600080fd5b80636e553f6514610264578063a22cb46514610277578063b42394f11461028a578063bd85b03914610292578063d905777e146102b257600080fd5b80632304cd181161010a5780632304cd18146101ca5780632eb2c2d6146101df57806338d52e0f146101f2578063402d267d1461020d5780634e1273f4146102225780634f558e791461024257600080fd5b8062fdd58e146101465780630169a9961461016c57806301e1d1141461017f57806301ffc9a7146101875780630e89341c146101aa575b600080fd5b610159610154366004611d4a565b61036c565b6040519081526020015b60405180910390f35b61015961017a366004611d74565b610404565b61015961046b565b61019a610195366004611dd0565b6104dd565b6040519015158152602001610163565b6101bd6101b8366004611ded565b61052f565b6040516101639190611e5e565b6101dd6101d8366004611ded565b60fb55565b005b6101dd6101ed366004611fbd565b6105c3565b60c9546040516001600160a01b039091168152602001610163565b61015961021b366004612067565b5060001990565b610235610230366004612082565b61060f565b6040516101639190612188565b61019a610250366004611ded565b600090815260986020526040902054151590565b61015961027236600461219b565b610739565b6101dd6102853660046121d5565b610756565b609754610159565b6101596102a0366004611ded565b60009081526098602052604090205490565b6101596102c0366004612067565b610765565b61019a6102d336600461220c565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b61015961030f366004612236565b610783565b6101dd6103223660046122a2565b610893565b6101dd610335366004612307565b6108d8565b61015960fb5481565b610159610351366004612067565b6001600160a01b031660009081526099602052604090205490565b60006001600160a01b0383166103dc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b600061040f82610765565b8411156104555760405162461bcd60e51b81526020600482015260146024820152730e4cac8cacada40dadee4ca40e8d0c2dc40dac2f60631b60448201526064016103d3565b6104623384848789610a2c565b50919392505050565b60c9546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d8919061238a565b905090565b60006001600160e01b03198216636cdb3d1360e11b148061050e57506001600160e01b031982166303a24d0760e21b145b8061052957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606067805461053e906123a3565b80601f016020809104026020016040519081016040528092919081815260200182805461056a906123a3565b80156105b75780601f1061058c576101008083540402835291602001916105b7565b820191906000526020600020905b81548152906001019060200180831161059a57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806105df57506105df85336102d3565b6105fb5760405162461bcd60e51b81526004016103d3906123dd565b6106088585858585610b24565b5050505050565b606081518351146106745760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016103d3565b6000835167ffffffffffffffff81111561069057610690611e71565b6040519080825280602002602001820160405280156106b9578160200160208202803683370190505b50905060005b8451811015610731576107048582815181106106dd576106dd61242c565b60200260200101518583815181106106f7576106f761242c565b602002602001015161036c565b8282815181106107165761071661242c565b602090810291909101015261072a81612458565b90506106bf565b509392505050565b600061074f33838561074a60fb5490565b610cd1565b5090919050565b610761338383610d60565b5050565b6001600160a01b038116600090815260996020526040812054610529565b600083518551146107e65760405162461bcd60e51b815260206004820152602760248201527f6d69736d61746368207368617265732069647320616e6420616d6f756e7473206044820152666c656e6774687360c81b60648201526084016103d3565b6000805b865181101561082c578581815181106108055761080561242c565b6020026020010151826108189190612471565b91508061082481612458565b9150506107ea565b5061083683610765565b81111561087c5760405162461bcd60e51b81526020600482015260146024820152730e4cac8cacada40dadee4ca40e8d0c2dc40dac2f60631b60448201526064016103d3565b61088a338585848a8a610e40565b95945050505050565b6001600160a01b0385163314806108af57506108af85336102d3565b6108cb5760405162461bcd60e51b81526004016103d3906123dd565b6106088585858585610ee6565b600054610100900460ff16158080156108f85750600054600160ff909116105b806109125750303b158015610912575060005460ff166001145b6109755760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103d3565b6000805460ff191660011790558015610998576000805461ff0019166101001790555b6109d783838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061102292505050565b6109e084611055565b8015610a26576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b826001600160a01b0316856001600160a01b031614610a9b57610a4f83866102d3565b610a9b5760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656460448201526064016103d3565b610aa68382846110ab565b60c954610abd906001600160a01b031685846111cc565b826001600160a01b0316846001600160a01b0316866001600160a01b03167fbdd2ea7c6c746c4b10d827cdb6a2e1033cba355ab3d4a0c8d33ffbd6436f6e138486604051610b15929190918252602082015260400190565b60405180910390a45050505050565b8151835114610b455760405162461bcd60e51b81526004016103d390612489565b6001600160a01b038416610b6b5760405162461bcd60e51b81526004016103d3906124d1565b33610b7a818787878787611234565b60005b8451811015610c63576000858281518110610b9a57610b9a61242c565b602002602001015190506000858381518110610bb857610bb861242c565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015610c095760405162461bcd60e51b81526004016103d390612516565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610c48908490612471565b9250508190555050505080610c5c90612458565b9050610b7d565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610cb3929190612560565b60405180910390a4610cc98187878787876114d9565b505050505050565b60c954610ce9906001600160a01b0316853085611634565b610d048382846040518060200160405280600081525061166c565b826001600160a01b0316846001600160a01b03167fd2e39d08f9cf06dc3751fbd36267ed7b6a0c4836f9d9d646c8995b1997ecafcb8385604051610d52929190918252602082015260400190565b60405180910390a350505050565b816001600160a01b0316836001600160a01b031603610dd35760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016103d3565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b836001600160a01b0316866001600160a01b031614610e6557610e6384876102d3565b505b610e70848383611788565b60c954610e87906001600160a01b031686856111cc565b836001600160a01b0316856001600160a01b0316876001600160a01b03167f44e3fb37a3cbf629917f1152a90f697de0e902e3d25aa43cad6b7e3e7c1190b88585604051610ed6929190612560565b60405180910390a4505050505050565b6001600160a01b038416610f0c5760405162461bcd60e51b81526004016103d3906124d1565b336000610f1885611927565b90506000610f2585611927565b9050610f35838989858589611234565b60008681526065602090815260408083206001600160a01b038c16845290915290205485811015610f785760405162461bcd60e51b81526004016103d390612516565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610fb7908490612471565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611017848a8a8a8a8a611972565b505050505050505050565b600054610100900460ff166110495760405162461bcd60e51b81526004016103d390612585565b61105281611a2d565b50565b600054610100900460ff1661107c5760405162461bcd60e51b81526004016103d390612585565b60c9805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b0383166110d15760405162461bcd60e51b81526004016103d3906125d0565b3360006110dd84611927565b905060006110ea84611927565b905061110a83876000858560405180602001604052806000815250611234565b60008581526065602090815260408083206001600160a01b038a1684529091529020548481101561114d5760405162461bcd60e51b81526004016103d390612613565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46040805160208101909152600090525b50505050505050565b6040516001600160a01b03831660248201526044810182905261122f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a40565b505050565b6001600160a01b0385166113425760005b8351811015611340578281815181106112605761126061242c565b60200260200101516098600086848151811061127e5761127e61242c565b6020026020010151815260200190815260200160002060008282546112a39190612471565b925050819055508281815181106112bc576112bc61242c565b602002602001015160996000876001600160a01b03166001600160a01b0316815260200190815260200160002060008282546112f89190612471565b925050819055508281815181106113115761131161242c565b60200260200101516097600082825461132a9190612471565b90915550611339905081612458565b9050611245565b505b6001600160a01b038416610cc95760005b83518110156111c35760008482815181106113705761137061242c565b60200260200101519050600084838151811061138e5761138e61242c565b60200260200101519050600060986000848152602001908152602001600020549050818110156114115760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016103d3565b6001600160a01b0389166000908152609960205260409020548281101561148e5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a206275726e20616d6f756e7420657863656564732061636360448201526a1bdd5b9d08185b5bdd5b9d60aa1b60648201526084016103d3565b6000938452609860209081526040808620938590039093556001600160a01b038b16855260999052922091819003909155609780549190910390556114d281612458565b9050611353565b6001600160a01b0384163b15610cc95760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061151d9089908990889088908890600401612657565b6020604051808303816000875af1925050508015611558575060408051601f3d908101601f19168201909252611555918101906126b5565b60015b611604576115646126d2565b806308c379a00361159d57506115786126ee565b80611583575061159f565b8060405162461bcd60e51b81526004016103d39190611e5e565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016103d3565b6001600160e01b0319811663bc197c8160e01b146111c35760405162461bcd60e51b81526004016103d390612778565b6040516001600160a01b0380851660248301528316604482015260648101829052610a269085906323b872dd60e01b906084016111f8565b6001600160a01b0384166116cc5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016103d3565b3360006116d885611927565b905060006116e585611927565b90506116f683600089858589611234565b60008681526065602090815260408083206001600160a01b038b16845290915281208054879290611728908490612471565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111c383600089898989611972565b6001600160a01b0383166117ae5760405162461bcd60e51b81526004016103d3906125d0565b80518251146117cf5760405162461bcd60e51b81526004016103d390612489565b60003390506117f281856000868660405180602001604052806000815250611234565b60005b83518110156118ba5760008482815181106118125761181261242c565b6020026020010151905060008483815181106118305761183061242c565b60209081029190910181015160008481526065835260408082206001600160a01b038c1683529093529190912054909150818110156118815760405162461bcd60e51b81526004016103d390612613565b60009283526065602090815260408085206001600160a01b038b16865290915290922091039055806118b281612458565b9150506117f5565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161190b929190612560565b60405180910390a4604080516020810190915260009052610a26565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106119615761196161242c565b602090810291909101015292915050565b6001600160a01b0384163b15610cc95760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906119b690899089908890889088906004016127c0565b6020604051808303816000875af19250505080156119f1575060408051601f3d908101601f191682019092526119ee918101906126b5565b60015b6119fd576115646126d2565b6001600160e01b0319811663f23a6e6160e01b146111c35760405162461bcd60e51b81526004016103d390612778565b8051610761906067906020840190611c95565b6000611a95826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b129092919063ffffffff16565b80519091501561122f5780806020019051810190611ab391906127f8565b61122f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103d3565b6060611b218484600085611b2b565b90505b9392505050565b606082471015611b8c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103d3565b6001600160a01b0385163b611be35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103d3565b600080866001600160a01b03168587604051611bff9190612815565b60006040518083038185875af1925050503d8060008114611c3c576040519150601f19603f3d011682016040523d82523d6000602084013e611c41565b606091505b5091509150611c51828286611c5c565b979650505050505050565b60608315611c6b575081611b24565b825115611c7b5782518084602001fd5b8160405162461bcd60e51b81526004016103d39190611e5e565b828054611ca1906123a3565b90600052602060002090601f016020900481019282611cc35760008555611d09565b82601f10611cdc57805160ff1916838001178555611d09565b82800160010185558215611d09579182015b82811115611d09578251825591602001919060010190611cee565b50611d15929150611d19565b5090565b5b80821115611d155760008155600101611d1a565b80356001600160a01b0381168114611d4557600080fd5b919050565b60008060408385031215611d5d57600080fd5b611d6683611d2e565b946020939093013593505050565b60008060008060808587031215611d8a57600080fd5b8435935060208501359250611da160408601611d2e565b9150611daf60608601611d2e565b905092959194509250565b6001600160e01b03198116811461105257600080fd5b600060208284031215611de257600080fd5b8135611b2481611dba565b600060208284031215611dff57600080fd5b5035919050565b60005b83811015611e21578181015183820152602001611e09565b83811115610a265750506000910152565b60008151808452611e4a816020860160208601611e06565b601f01601f19169290920160200192915050565b602081526000611b246020830184611e32565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611ead57611ead611e71565b6040525050565b600067ffffffffffffffff821115611ece57611ece611e71565b5060051b60200190565b600082601f830112611ee957600080fd5b81356020611ef682611eb4565b604051611f038282611e87565b83815260059390931b8501820192828101915086841115611f2357600080fd5b8286015b84811015611f3e5780358352918301918301611f27565b509695505050505050565b600082601f830112611f5a57600080fd5b813567ffffffffffffffff811115611f7457611f74611e71565b604051611f8b601f8301601f191660200182611e87565b818152846020838601011115611fa057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611fd557600080fd5b611fde86611d2e565b9450611fec60208701611d2e565b9350604086013567ffffffffffffffff8082111561200957600080fd5b61201589838a01611ed8565b9450606088013591508082111561202b57600080fd5b61203789838a01611ed8565b9350608088013591508082111561204d57600080fd5b5061205a88828901611f49565b9150509295509295909350565b60006020828403121561207957600080fd5b611b2482611d2e565b6000806040838503121561209557600080fd5b823567ffffffffffffffff808211156120ad57600080fd5b818501915085601f8301126120c157600080fd5b813560206120ce82611eb4565b6040516120db8282611e87565b83815260059390931b85018201928281019150898411156120fb57600080fd5b948201945b838610156121205761211186611d2e565b82529482019490820190612100565b9650508601359250508082111561213657600080fd5b5061214385828601611ed8565b9150509250929050565b600081518084526020808501945080840160005b8381101561217d57815187529582019590820190600101612161565b509495945050505050565b602081526000611b24602083018461214d565b600080604083850312156121ae57600080fd5b823591506121be60208401611d2e565b90509250929050565b801515811461105257600080fd5b600080604083850312156121e857600080fd5b6121f183611d2e565b91506020830135612201816121c7565b809150509250929050565b6000806040838503121561221f57600080fd5b61222883611d2e565b91506121be60208401611d2e565b6000806000806080858703121561224c57600080fd5b843567ffffffffffffffff8082111561226457600080fd5b61227088838901611ed8565b9550602087013591508082111561228657600080fd5b5061229387828801611ed8565b935050611da160408601611d2e565b600080600080600060a086880312156122ba57600080fd5b6122c386611d2e565b94506122d160208701611d2e565b93506040860135925060608601359150608086013567ffffffffffffffff8111156122fb57600080fd5b61205a88828901611f49565b60008060006040848603121561231c57600080fd5b61232584611d2e565b9250602084013567ffffffffffffffff8082111561234257600080fd5b818601915086601f83011261235657600080fd5b81358181111561236557600080fd5b87602082850101111561237757600080fd5b6020830194508093505050509250925092565b60006020828403121561239c57600080fd5b5051919050565b600181811c908216806123b757607f821691505b6020821081036123d757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161246a5761246a612442565b5060010190565b6000821982111561248457612484612442565b500190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000612573604083018561214d565b828103602084015261088a818561214d565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b60006001600160a01b03808816835280871660208401525060a0604083015261268360a083018661214d565b8281036060840152612695818661214d565b905082810360808401526126a98185611e32565b98975050505050505050565b6000602082840312156126c757600080fd5b8151611b2481611dba565b600060033d11156126eb5760046000803e5060005160e01c5b90565b600060443d10156126fc5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561272c57505050505090565b82850191508151818111156127445750505050505090565b843d870101602082850101111561275e5750505050505090565b61276d60208286010187611e87565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152611c5160a0830184611e32565b60006020828403121561280a57600080fd5b8151611b24816121c7565b60008251612827818460208701611e06565b919091019291505056fea264697066735822122049b7c6d9f8379874ce87c46cfe2e1ce4400e7d83650337d1249a586bb407d74564736f6c634300080e0033";

type TestWrapperVaultWithReceiptsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrapperVaultWithReceiptsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrapperVaultWithReceipts__factory extends ContractFactory {
  constructor(...args: TestWrapperVaultWithReceiptsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestWrapperVaultWithReceipts> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestWrapperVaultWithReceipts>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWrapperVaultWithReceipts {
    return super.attach(address) as TestWrapperVaultWithReceipts;
  }
  override connect(signer: Signer): TestWrapperVaultWithReceipts__factory {
    return super.connect(signer) as TestWrapperVaultWithReceipts__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrapperVaultWithReceiptsInterface {
    return new utils.Interface(_abi) as TestWrapperVaultWithReceiptsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrapperVaultWithReceipts {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestWrapperVaultWithReceipts;
  }
}
