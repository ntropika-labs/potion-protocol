/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestWrapperVaultWithReceipts,
  TestWrapperVaultWithReceiptsInterface,
} from "../../../../contracts/test/wrappers/TestWrapperVaultWithReceipts";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "DepositWithReceipt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RedeemReceipt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "RedeemReceiptBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOfAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "maxDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "maxRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintId_",
        type: "uint256",
      },
    ],
    name: "mockSetMintId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "redeemBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612789806100206000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c80636e553f65116100b8578063d905777e1161007c578063d905777e146102c3578063e985e9c5146102d6578063f0670dd3146102e9578063f242432a146102fc578063fe90e5bc1461030f578063fe992c981461031857600080fd5b80636e553f6514610262578063a22cb46514610275578063b42394f114610288578063bd85b03914610290578063c4d66de8146102b057600080fd5b80632304cd181161010a5780632304cd18146101ca5780632eb2c2d6146101df57806338d52e0f146101f2578063402d267d1461020d5780634e1273f4146102205780634f558e791461024057600080fd5b8062fdd58e146101465780630169a9961461016c57806301e1d1141461017f57806301ffc9a7146101875780630e89341c146101aa575b600080fd5b610159610154366004611cee565b610341565b6040519081526020015b60405180910390f35b61015961017a366004611d18565b6103d9565b610159610419565b61019a610195366004611d77565b61048b565b6040519015158152602001610163565b6101bd6101b8366004611d94565b6104dd565b6040516101639190611e05565b6101dd6101d8366004611d94565b60fb55565b005b6101dd6101ed366004611f64565b610571565b60c9546040516001600160a01b039091168152602001610163565b61015961021b36600461200e565b6105bd565b61023361022e366004612029565b6105db565b604051610163919061212f565b61019a61024e366004611d94565b600090815260986020526040902054151590565b610159610270366004612142565b610705565b6101dd61028336600461217c565b61078b565b609754610159565b61015961029e366004611d94565b60009081526098602052604090205490565b6101dd6102be36600461200e565b61079a565b6101596102d136600461200e565b6108ac565b61019a6102e43660046121b3565b6108ca565b6101596102f73660046121dd565b6108f8565b6101dd61030a366004612249565b6109f7565b61015960fb5481565b61015961032636600461200e565b6001600160a01b031660009081526099602052604090205490565b60006001600160a01b0383166103b15760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006103e4826108ac565b8411156104035760405162461bcd60e51b81526004016103a8906122ae565b6104103384848789610a3c565b50919392505050565b60c9546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610462573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048691906122f5565b905090565b60006001600160e01b03198216636cdb3d1360e11b14806104bc57506001600160e01b031982166303a24d0760e21b145b806104d757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606780546104ec9061230e565b80601f01602080910402602001604051908101604052809291908181526020018280546105189061230e565b80156105655780601f1061053a57610100808354040283529160200191610565565b820191906000526020600020905b81548152906001019060200180831161054857829003601f168201915b50505050509050919050565b6001600160a01b03851633148061058d575061058d85336108ca565b6105a95760405162461bcd60e51b81526004016103a890612348565b6105b68585858585610b50565b5050505050565b60006105c7610cfd565b6105d25760006104d7565b60001992915050565b606081518351146106405760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016103a8565b6000835167ffffffffffffffff81111561065c5761065c611e18565b604051908082528060200260200182016040528015610685578160200160208202803683370190505b50905060005b84518110156106fd576106d08582815181106106a9576106a9612397565b60200260200101518583815181106106c3576106c3612397565b6020026020010151610341565b8282815181106106e2576106e2612397565b60209081029190910101526106f6816123c3565b905061068b565b509392505050565b6000610710826105bd565b8311156107705760405162461bcd60e51b815260206004820152602860248201527f455243343632364d756c7469546f6b656e3a206465706f736974206d6f7265206044820152670e8d0c2dc40dac2f60c31b60648201526084016103a8565b61078433838561077f60fb5490565b610d17565b5090919050565b610796338383610da6565b5050565b600054610100900460ff16158080156107ba5750600054600160ff909116105b806107d45750303b1580156107d4575060005460ff166001145b6108375760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103a8565b6000805460ff19166001179055801561085a576000805461ff0019166101001790555b61086382610e86565b8015610796576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6001600160a01b0381166000908152609960205260408120546104d7565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b600083518551146109715760405162461bcd60e51b815260206004820152603a60248201527f455243343632364d756c7469546f6b656e3a206d69736d61746368207368617260448201527f65732069647320616e6420616d6f756e7473206c656e6774687300000000000060648201526084016103a8565b6000805b86518110156109b75785818151811061099057610990612397565b6020026020010151826109a391906123dc565b9150806109af816123c3565b915050610975565b506109c1836108ac565b8111156109e05760405162461bcd60e51b81526004016103a8906122ae565b6109ee338585848a8a610f13565b95945050505050565b6001600160a01b038516331480610a135750610a1385336108ca565b610a2f5760405162461bcd60e51b81526004016103a890612348565b6105b68585858585610fb9565b826001600160a01b0316856001600160a01b031614610ac757610a5f83866108ca565b610ac75760405162461bcd60e51b815260206004820152603360248201527f455243343632364d756c7469546f6b656e3a2063616c6c6572206973206e6f74604482015272081bdddb995c881b9bdc88185c1c1c9bdd9959606a1b60648201526084016103a8565b610ad28382846110f5565b60c954610ae9906001600160a01b03168584611216565b826001600160a01b0316846001600160a01b0316866001600160a01b03167fbdd2ea7c6c746c4b10d827cdb6a2e1033cba355ab3d4a0c8d33ffbd6436f6e138486604051610b41929190918252602082015260400190565b60405180910390a45050505050565b8151835114610b715760405162461bcd60e51b81526004016103a8906123f4565b6001600160a01b038416610b975760405162461bcd60e51b81526004016103a89061243c565b33610ba681878787878761127e565b60005b8451811015610c8f576000858281518110610bc657610bc6612397565b602002602001015190506000858381518110610be457610be4612397565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015610c355760405162461bcd60e51b81526004016103a890612481565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610c749084906123dc565b9250508190555050505080610c88906123c3565b9050610ba9565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610cdf9291906124cb565b60405180910390a4610cf5818787878787611523565b505050505050565b600080610d08610419565b11806104865750506097541590565b60c954610d2f906001600160a01b031685308561167e565b610d4a838284604051806020016040528060008152506116bc565b826001600160a01b0316846001600160a01b03167fd2e39d08f9cf06dc3751fbd36267ed7b6a0c4836f9d9d646c8995b1997ecafcb8385604051610d98929190918252602082015260400190565b60405180910390a350505050565b816001600160a01b0316836001600160a01b031603610e195760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016103a8565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600054610100900460ff16610ef15760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103a8565b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b836001600160a01b0316866001600160a01b031614610f3857610f3684876108ca565b505b610f438483836117d8565b60c954610f5a906001600160a01b03168685611216565b836001600160a01b0316856001600160a01b0316876001600160a01b03167f44e3fb37a3cbf629917f1152a90f697de0e902e3d25aa43cad6b7e3e7c1190b88585604051610fa99291906124cb565b60405180910390a4505050505050565b6001600160a01b038416610fdf5760405162461bcd60e51b81526004016103a89061243c565b336000610feb85611977565b90506000610ff885611977565b905061100883898985858961127e565b60008681526065602090815260408083206001600160a01b038c1684529091529020548581101561104b5760405162461bcd60e51b81526004016103a890612481565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061108a9084906123dc565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46110ea848a8a8a8a8a6119c2565b505050505050505050565b6001600160a01b03831661111b5760405162461bcd60e51b81526004016103a8906124f0565b33600061112784611977565b9050600061113484611977565b90506111548387600085856040518060200160405280600081525061127e565b60008581526065602090815260408083206001600160a01b038a168452909152902054848110156111975760405162461bcd60e51b81526004016103a890612533565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46040805160208101909152600090525b50505050505050565b6040516001600160a01b03831660248201526044810182905261127990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a7d565b505050565b6001600160a01b03851661138c5760005b835181101561138a578281815181106112aa576112aa612397565b6020026020010151609860008684815181106112c8576112c8612397565b6020026020010151815260200190815260200160002060008282546112ed91906123dc565b9250508190555082818151811061130657611306612397565b602002602001015160996000876001600160a01b03166001600160a01b03168152602001908152602001600020600082825461134291906123dc565b9250508190555082818151811061135b5761135b612397565b60200260200101516097600082825461137491906123dc565b909155506113839050816123c3565b905061128f565b505b6001600160a01b038416610cf55760005b835181101561120d5760008482815181106113ba576113ba612397565b6020026020010151905060008483815181106113d8576113d8612397565b602002602001015190506000609860008481526020019081526020016000205490508181101561145b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016103a8565b6001600160a01b038916600090815260996020526040902054828110156114d85760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a206275726e20616d6f756e7420657863656564732061636360448201526a1bdd5b9d08185b5bdd5b9d60aa1b60648201526084016103a8565b6000938452609860209081526040808620938590039093556001600160a01b038b168552609990529220918190039091556097805491909103905561151c816123c3565b905061139d565b6001600160a01b0384163b15610cf55760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906115679089908990889088908890600401612577565b6020604051808303816000875af19250505080156115a2575060408051601f3d908101601f1916820190925261159f918101906125d5565b60015b61164e576115ae6125f2565b806308c379a0036115e757506115c261260e565b806115cd57506115e9565b8060405162461bcd60e51b81526004016103a89190611e05565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016103a8565b6001600160e01b0319811663bc197c8160e01b1461120d5760405162461bcd60e51b81526004016103a890612698565b6040516001600160a01b03808516602483015283166044820152606481018290526116b69085906323b872dd60e01b90608401611242565b50505050565b6001600160a01b03841661171c5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016103a8565b33600061172885611977565b9050600061173585611977565b90506117468360008985858961127e565b60008681526065602090815260408083206001600160a01b038b168452909152812080548792906117789084906123dc565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461120d836000898989896119c2565b6001600160a01b0383166117fe5760405162461bcd60e51b81526004016103a8906124f0565b805182511461181f5760405162461bcd60e51b81526004016103a8906123f4565b60003390506118428185600086866040518060200160405280600081525061127e565b60005b835181101561190a57600084828151811061186257611862612397565b60200260200101519050600084838151811061188057611880612397565b60209081029190910181015160008481526065835260408082206001600160a01b038c1683529093529190912054909150818110156118d15760405162461bcd60e51b81526004016103a890612533565b60009283526065602090815260408085206001600160a01b038b1686529091529092209103905580611902816123c3565b915050611845565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161195b9291906124cb565b60405180910390a46040805160208101909152600090526116b6565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106119b1576119b1612397565b602090810291909101015292915050565b6001600160a01b0384163b15610cf55760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611a0690899089908890889088906004016126e0565b6020604051808303816000875af1925050508015611a41575060408051601f3d908101601f19168201909252611a3e918101906125d5565b60015b611a4d576115ae6125f2565b6001600160e01b0319811663f23a6e6160e01b1461120d5760405162461bcd60e51b81526004016103a890612698565b6000611ad2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b4f9092919063ffffffff16565b8051909150156112795780806020019051810190611af0919061271a565b6112795760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103a8565b6060611b5e8484600085611b68565b90505b9392505050565b606082471015611bc95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103a8565b6001600160a01b0385163b611c205760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103a8565b600080866001600160a01b03168587604051611c3c9190612737565b60006040518083038185875af1925050503d8060008114611c79576040519150601f19603f3d011682016040523d82523d6000602084013e611c7e565b606091505b5091509150611c8e828286611c99565b979650505050505050565b60608315611ca8575081611b61565b825115611cb85782518084602001fd5b8160405162461bcd60e51b81526004016103a89190611e05565b80356001600160a01b0381168114611ce957600080fd5b919050565b60008060408385031215611d0157600080fd5b611d0a83611cd2565b946020939093013593505050565b60008060008060808587031215611d2e57600080fd5b8435935060208501359250611d4560408601611cd2565b9150611d5360608601611cd2565b905092959194509250565b6001600160e01b031981168114611d7457600080fd5b50565b600060208284031215611d8957600080fd5b8135611b6181611d5e565b600060208284031215611da657600080fd5b5035919050565b60005b83811015611dc8578181015183820152602001611db0565b838111156116b65750506000910152565b60008151808452611df1816020860160208601611dad565b601f01601f19169290920160200192915050565b602081526000611b616020830184611dd9565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611e5457611e54611e18565b6040525050565b600067ffffffffffffffff821115611e7557611e75611e18565b5060051b60200190565b600082601f830112611e9057600080fd5b81356020611e9d82611e5b565b604051611eaa8282611e2e565b83815260059390931b8501820192828101915086841115611eca57600080fd5b8286015b84811015611ee55780358352918301918301611ece565b509695505050505050565b600082601f830112611f0157600080fd5b813567ffffffffffffffff811115611f1b57611f1b611e18565b604051611f32601f8301601f191660200182611e2e565b818152846020838601011115611f4757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611f7c57600080fd5b611f8586611cd2565b9450611f9360208701611cd2565b9350604086013567ffffffffffffffff80821115611fb057600080fd5b611fbc89838a01611e7f565b94506060880135915080821115611fd257600080fd5b611fde89838a01611e7f565b93506080880135915080821115611ff457600080fd5b5061200188828901611ef0565b9150509295509295909350565b60006020828403121561202057600080fd5b611b6182611cd2565b6000806040838503121561203c57600080fd5b823567ffffffffffffffff8082111561205457600080fd5b818501915085601f83011261206857600080fd5b8135602061207582611e5b565b6040516120828282611e2e565b83815260059390931b85018201928281019150898411156120a257600080fd5b948201945b838610156120c7576120b886611cd2565b825294820194908201906120a7565b965050860135925050808211156120dd57600080fd5b506120ea85828601611e7f565b9150509250929050565b600081518084526020808501945080840160005b8381101561212457815187529582019590820190600101612108565b509495945050505050565b602081526000611b6160208301846120f4565b6000806040838503121561215557600080fd5b8235915061216560208401611cd2565b90509250929050565b8015158114611d7457600080fd5b6000806040838503121561218f57600080fd5b61219883611cd2565b915060208301356121a88161216e565b809150509250929050565b600080604083850312156121c657600080fd5b6121cf83611cd2565b915061216560208401611cd2565b600080600080608085870312156121f357600080fd5b843567ffffffffffffffff8082111561220b57600080fd5b61221788838901611e7f565b9550602087013591508082111561222d57600080fd5b5061223a87828801611e7f565b935050611d4560408601611cd2565b600080600080600060a0868803121561226157600080fd5b61226a86611cd2565b945061227860208701611cd2565b93506040860135925060608601359150608086013567ffffffffffffffff8111156122a257600080fd5b61200188828901611ef0565b60208082526027908201527f455243343632364d756c7469546f6b656e3a2072656465656d206d6f726520746040820152660d0c2dc40dac2f60cb1b606082015260800190565b60006020828403121561230757600080fd5b5051919050565b600181811c9082168061232257607f821691505b60208210810361234257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016123d5576123d56123ad565b5060010190565b600082198211156123ef576123ef6123ad565b500190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006124de60408301856120f4565b82810360208401526109ee81856120f4565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190526000906125a3908301866120f4565b82810360608401526125b581866120f4565b905082810360808401526125c98185611dd9565b98975050505050505050565b6000602082840312156125e757600080fd5b8151611b6181611d5e565b600060033d111561260b5760046000803e5060005160e01c5b90565b600060443d101561261c5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561264c57505050505090565b82850191508151818111156126645750505050505090565b843d870101602082850101111561267e5750505050505090565b61268d60208286010187611e2e565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611c8e90830184611dd9565b60006020828403121561272c57600080fd5b8151611b618161216e565b60008251612749818460208701611dad565b919091019291505056fea2646970667358221220dd298d996d29ae4f6f81bee4d0ae4d855681913beff67e5f10f98101190f08e464736f6c634300080e0033";

type TestWrapperVaultWithReceiptsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrapperVaultWithReceiptsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrapperVaultWithReceipts__factory extends ContractFactory {
  constructor(...args: TestWrapperVaultWithReceiptsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestWrapperVaultWithReceipts> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestWrapperVaultWithReceipts>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWrapperVaultWithReceipts {
    return super.attach(address) as TestWrapperVaultWithReceipts;
  }
  override connect(signer: Signer): TestWrapperVaultWithReceipts__factory {
    return super.connect(signer) as TestWrapperVaultWithReceipts__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrapperVaultWithReceiptsInterface {
    return new utils.Interface(_abi) as TestWrapperVaultWithReceiptsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrapperVaultWithReceipts {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestWrapperVaultWithReceipts;
  }
}
