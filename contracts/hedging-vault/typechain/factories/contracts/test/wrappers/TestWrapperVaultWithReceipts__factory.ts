/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestWrapperVaultWithReceipts,
  TestWrapperVaultWithReceiptsInterface,
} from "../../../../contracts/test/wrappers/TestWrapperVaultWithReceipts";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "DepositWithReceipt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RedeemReceipt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "RedeemReceiptBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOfAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "maxDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "maxRedeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintId_",
        type: "uint256",
      },
    ],
    name: "mockSetMintId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "redeemBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612861806100206000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c80636e553f65116100b8578063e985e9c51161007c578063e985e9c5146102c5578063f0670dd3146102d8578063f242432a146102eb578063f399e22e146102fe578063fe90e5bc14610311578063fe992c981461031a57600080fd5b80636e553f6514610264578063a22cb46514610277578063b42394f11461028a578063bd85b03914610292578063d905777e146102b257600080fd5b80632304cd181161010a5780632304cd18146101ca5780632eb2c2d6146101df57806338d52e0f146101f2578063402d267d1461020d5780634e1273f4146102225780634f558e791461024257600080fd5b8062fdd58e146101465780630169a9961461016c57806301e1d1141461017f57806301ffc9a7146101875780630e89341c146101aa575b600080fd5b610159610154366004611d42565b610343565b6040519081526020015b60405180910390f35b61015961017a366004611d6c565b6103db565b610159610442565b61019a610195366004611dc8565b6104b4565b6040519015158152602001610163565b6101bd6101b8366004611de5565b610506565b6040516101639190611e56565b6101dd6101d8366004611de5565b60fb55565b005b6101dd6101ed366004611fb5565b61059a565b60c9546040516001600160a01b039091168152602001610163565b61015961021b36600461205f565b5060001990565b61023561023036600461207a565b6105e6565b6040516101639190612180565b61019a610250366004611de5565b600090815260986020526040902054151590565b610159610272366004612193565b610710565b6101dd6102853660046121cd565b61072d565b609754610159565b6101596102a0366004611de5565b60009081526098602052604090205490565b6101596102c036600461205f565b61073c565b61019a6102d3366004612204565b61075a565b6101596102e636600461222e565b610788565b6101dd6102f936600461229a565b610898565b6101dd61030c3660046122ff565b6108dd565b61015960fb5481565b61015961032836600461205f565b6001600160a01b031660009081526099602052604090205490565b60006001600160a01b0383166103b35760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006103e68261073c565b84111561042c5760405162461bcd60e51b81526020600482015260146024820152730e4cac8cacada40dadee4ca40e8d0c2dc40dac2f60631b60448201526064016103aa565b6104393384848789610a31565b50919392505050565b60c9546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af9190612382565b905090565b60006001600160e01b03198216636cdb3d1360e11b14806104e557506001600160e01b031982166303a24d0760e21b145b8061050057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606780546105159061239b565b80601f01602080910402602001604051908101604052809291908181526020018280546105419061239b565b801561058e5780601f106105635761010080835404028352916020019161058e565b820191906000526020600020905b81548152906001019060200180831161057157829003601f168201915b50505050509050919050565b6001600160a01b0385163314806105b657506105b6853361075a565b6105d25760405162461bcd60e51b81526004016103aa906123d5565b6105df8585858585610b29565b5050505050565b6060815183511461064b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016103aa565b6000835167ffffffffffffffff81111561066757610667611e69565b604051908082528060200260200182016040528015610690578160200160208202803683370190505b50905060005b8451811015610708576106db8582815181106106b4576106b4612424565b60200260200101518583815181106106ce576106ce612424565b6020026020010151610343565b8282815181106106ed576106ed612424565b602090810291909101015261070181612450565b9050610696565b509392505050565b600061072633838561072160fb5490565b610cd6565b5090919050565b610738338383610d65565b5050565b6001600160a01b038116600090815260996020526040812054610500565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b600083518551146107eb5760405162461bcd60e51b815260206004820152602760248201527f6d69736d61746368207368617265732069647320616e6420616d6f756e7473206044820152666c656e6774687360c81b60648201526084016103aa565b6000805b86518110156108315785818151811061080a5761080a612424565b60200260200101518261081d9190612469565b91508061082981612450565b9150506107ef565b5061083b8361073c565b8111156108815760405162461bcd60e51b81526020600482015260146024820152730e4cac8cacada40dadee4ca40e8d0c2dc40dac2f60631b60448201526064016103aa565b61088f338585848a8a610e45565b95945050505050565b6001600160a01b0385163314806108b457506108b4853361075a565b6108d05760405162461bcd60e51b81526004016103aa906123d5565b6105df8585858585610eeb565b600054610100900460ff16158080156108fd5750600054600160ff909116105b806109175750303b158015610917575060005460ff166001145b61097a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103aa565b6000805460ff19166001179055801561099d576000805461ff0019166101001790555b6109dc83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061102792505050565b6109e58461105a565b8015610a2b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b826001600160a01b0316856001600160a01b031614610aa057610a54838661075a565b610aa05760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656460448201526064016103aa565b610aab8382846110a3565b60c954610ac2906001600160a01b031685846111c4565b826001600160a01b0316846001600160a01b0316866001600160a01b03167fbdd2ea7c6c746c4b10d827cdb6a2e1033cba355ab3d4a0c8d33ffbd6436f6e138486604051610b1a929190918252602082015260400190565b60405180910390a45050505050565b8151835114610b4a5760405162461bcd60e51b81526004016103aa90612481565b6001600160a01b038416610b705760405162461bcd60e51b81526004016103aa906124c9565b33610b7f81878787878761122c565b60005b8451811015610c68576000858281518110610b9f57610b9f612424565b602002602001015190506000858381518110610bbd57610bbd612424565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015610c0e5760405162461bcd60e51b81526004016103aa9061250e565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610c4d908490612469565b9250508190555050505080610c6190612450565b9050610b82565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610cb8929190612558565b60405180910390a4610cce8187878787876114d1565b505050505050565b60c954610cee906001600160a01b031685308561162c565b610d0983828460405180602001604052806000815250611664565b826001600160a01b0316846001600160a01b03167fd2e39d08f9cf06dc3751fbd36267ed7b6a0c4836f9d9d646c8995b1997ecafcb8385604051610d57929190918252602082015260400190565b60405180910390a350505050565b816001600160a01b0316836001600160a01b031603610dd85760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016103aa565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b836001600160a01b0316866001600160a01b031614610e6a57610e68848761075a565b505b610e75848383611780565b60c954610e8c906001600160a01b031686856111c4565b836001600160a01b0316856001600160a01b0316876001600160a01b03167f44e3fb37a3cbf629917f1152a90f697de0e902e3d25aa43cad6b7e3e7c1190b88585604051610edb929190612558565b60405180910390a4505050505050565b6001600160a01b038416610f115760405162461bcd60e51b81526004016103aa906124c9565b336000610f1d8561191f565b90506000610f2a8561191f565b9050610f3a83898985858961122c565b60008681526065602090815260408083206001600160a01b038c16845290915290205485811015610f7d5760405162461bcd60e51b81526004016103aa9061250e565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610fbc908490612469565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461101c848a8a8a8a8a61196a565b505050505050505050565b600054610100900460ff1661104e5760405162461bcd60e51b81526004016103aa9061257d565b61105781611a25565b50565b600054610100900460ff166110815760405162461bcd60e51b81526004016103aa9061257d565b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166110c95760405162461bcd60e51b81526004016103aa906125c8565b3360006110d58461191f565b905060006110e28461191f565b90506111028387600085856040518060200160405280600081525061122c565b60008581526065602090815260408083206001600160a01b038a168452909152902054848110156111455760405162461bcd60e51b81526004016103aa9061260b565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46040805160208101909152600090525b50505050505050565b6040516001600160a01b03831660248201526044810182905261122790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a38565b505050565b6001600160a01b03851661133a5760005b83518110156113385782818151811061125857611258612424565b60200260200101516098600086848151811061127657611276612424565b60200260200101518152602001908152602001600020600082825461129b9190612469565b925050819055508281815181106112b4576112b4612424565b602002602001015160996000876001600160a01b03166001600160a01b0316815260200190815260200160002060008282546112f09190612469565b9250508190555082818151811061130957611309612424565b6020026020010151609760008282546113229190612469565b90915550611331905081612450565b905061123d565b505b6001600160a01b038416610cce5760005b83518110156111bb57600084828151811061136857611368612424565b60200260200101519050600084838151811061138657611386612424565b60200260200101519050600060986000848152602001908152602001600020549050818110156114095760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016103aa565b6001600160a01b038916600090815260996020526040902054828110156114865760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a206275726e20616d6f756e7420657863656564732061636360448201526a1bdd5b9d08185b5bdd5b9d60aa1b60648201526084016103aa565b6000938452609860209081526040808620938590039093556001600160a01b038b16855260999052922091819003909155609780549190910390556114ca81612450565b905061134b565b6001600160a01b0384163b15610cce5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611515908990899088908890889060040161264f565b6020604051808303816000875af1925050508015611550575060408051601f3d908101601f1916820190925261154d918101906126ad565b60015b6115fc5761155c6126ca565b806308c379a00361159557506115706126e6565b8061157b5750611597565b8060405162461bcd60e51b81526004016103aa9190611e56565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016103aa565b6001600160e01b0319811663bc197c8160e01b146111bb5760405162461bcd60e51b81526004016103aa90612770565b6040516001600160a01b0380851660248301528316604482015260648101829052610a2b9085906323b872dd60e01b906084016111f0565b6001600160a01b0384166116c45760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016103aa565b3360006116d08561191f565b905060006116dd8561191f565b90506116ee8360008985858961122c565b60008681526065602090815260408083206001600160a01b038b16845290915281208054879290611720908490612469565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111bb8360008989898961196a565b6001600160a01b0383166117a65760405162461bcd60e51b81526004016103aa906125c8565b80518251146117c75760405162461bcd60e51b81526004016103aa90612481565b60003390506117ea8185600086866040518060200160405280600081525061122c565b60005b83518110156118b257600084828151811061180a5761180a612424565b60200260200101519050600084838151811061182857611828612424565b60209081029190910181015160008481526065835260408082206001600160a01b038c1683529093529190912054909150818110156118795760405162461bcd60e51b81526004016103aa9061260b565b60009283526065602090815260408085206001600160a01b038b16865290915290922091039055806118aa81612450565b9150506117ed565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611903929190612558565b60405180910390a4604080516020810190915260009052610a2b565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061195957611959612424565b602090810291909101015292915050565b6001600160a01b0384163b15610cce5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906119ae90899089908890889088906004016127b8565b6020604051808303816000875af19250505080156119e9575060408051601f3d908101601f191682019092526119e6918101906126ad565b60015b6119f55761155c6126ca565b6001600160e01b0319811663f23a6e6160e01b146111bb5760405162461bcd60e51b81526004016103aa90612770565b8051610738906067906020840190611c8d565b6000611a8d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b0a9092919063ffffffff16565b8051909150156112275780806020019051810190611aab91906127f2565b6112275760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103aa565b6060611b198484600085611b23565b90505b9392505050565b606082471015611b845760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103aa565b6001600160a01b0385163b611bdb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103aa565b600080866001600160a01b03168587604051611bf7919061280f565b60006040518083038185875af1925050503d8060008114611c34576040519150601f19603f3d011682016040523d82523d6000602084013e611c39565b606091505b5091509150611c49828286611c54565b979650505050505050565b60608315611c63575081611b1c565b825115611c735782518084602001fd5b8160405162461bcd60e51b81526004016103aa9190611e56565b828054611c999061239b565b90600052602060002090601f016020900481019282611cbb5760008555611d01565b82601f10611cd457805160ff1916838001178555611d01565b82800160010185558215611d01579182015b82811115611d01578251825591602001919060010190611ce6565b50611d0d929150611d11565b5090565b5b80821115611d0d5760008155600101611d12565b80356001600160a01b0381168114611d3d57600080fd5b919050565b60008060408385031215611d5557600080fd5b611d5e83611d26565b946020939093013593505050565b60008060008060808587031215611d8257600080fd5b8435935060208501359250611d9960408601611d26565b9150611da760608601611d26565b905092959194509250565b6001600160e01b03198116811461105757600080fd5b600060208284031215611dda57600080fd5b8135611b1c81611db2565b600060208284031215611df757600080fd5b5035919050565b60005b83811015611e19578181015183820152602001611e01565b83811115610a2b5750506000910152565b60008151808452611e42816020860160208601611dfe565b601f01601f19169290920160200192915050565b602081526000611b1c6020830184611e2a565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611ea557611ea5611e69565b6040525050565b600067ffffffffffffffff821115611ec657611ec6611e69565b5060051b60200190565b600082601f830112611ee157600080fd5b81356020611eee82611eac565b604051611efb8282611e7f565b83815260059390931b8501820192828101915086841115611f1b57600080fd5b8286015b84811015611f365780358352918301918301611f1f565b509695505050505050565b600082601f830112611f5257600080fd5b813567ffffffffffffffff811115611f6c57611f6c611e69565b604051611f83601f8301601f191660200182611e7f565b818152846020838601011115611f9857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611fcd57600080fd5b611fd686611d26565b9450611fe460208701611d26565b9350604086013567ffffffffffffffff8082111561200157600080fd5b61200d89838a01611ed0565b9450606088013591508082111561202357600080fd5b61202f89838a01611ed0565b9350608088013591508082111561204557600080fd5b5061205288828901611f41565b9150509295509295909350565b60006020828403121561207157600080fd5b611b1c82611d26565b6000806040838503121561208d57600080fd5b823567ffffffffffffffff808211156120a557600080fd5b818501915085601f8301126120b957600080fd5b813560206120c682611eac565b6040516120d38282611e7f565b83815260059390931b85018201928281019150898411156120f357600080fd5b948201945b838610156121185761210986611d26565b825294820194908201906120f8565b9650508601359250508082111561212e57600080fd5b5061213b85828601611ed0565b9150509250929050565b600081518084526020808501945080840160005b8381101561217557815187529582019590820190600101612159565b509495945050505050565b602081526000611b1c6020830184612145565b600080604083850312156121a657600080fd5b823591506121b660208401611d26565b90509250929050565b801515811461105757600080fd5b600080604083850312156121e057600080fd5b6121e983611d26565b915060208301356121f9816121bf565b809150509250929050565b6000806040838503121561221757600080fd5b61222083611d26565b91506121b660208401611d26565b6000806000806080858703121561224457600080fd5b843567ffffffffffffffff8082111561225c57600080fd5b61226888838901611ed0565b9550602087013591508082111561227e57600080fd5b5061228b87828801611ed0565b935050611d9960408601611d26565b600080600080600060a086880312156122b257600080fd5b6122bb86611d26565b94506122c960208701611d26565b93506040860135925060608601359150608086013567ffffffffffffffff8111156122f357600080fd5b61205288828901611f41565b60008060006040848603121561231457600080fd5b61231d84611d26565b9250602084013567ffffffffffffffff8082111561233a57600080fd5b818601915086601f83011261234e57600080fd5b81358181111561235d57600080fd5b87602082850101111561236f57600080fd5b6020830194508093505050509250925092565b60006020828403121561239457600080fd5b5051919050565b600181811c908216806123af57607f821691505b6020821081036123cf57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016124625761246261243a565b5060010190565b6000821982111561247c5761247c61243a565b500190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60408152600061256b6040830185612145565b828103602084015261088f8185612145565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061267b90830186612145565b828103606084015261268d8186612145565b905082810360808401526126a18185611e2a565b98975050505050505050565b6000602082840312156126bf57600080fd5b8151611b1c81611db2565b600060033d11156126e35760046000803e5060005160e01c5b90565b600060443d10156126f45790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561272457505050505090565b828501915081518181111561273c5750505050505090565b843d87010160208285010111156127565750505050505090565b61276560208286010187611e7f565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611c4990830184611e2a565b60006020828403121561280457600080fd5b8151611b1c816121bf565b60008251612821818460208701611dfe565b919091019291505056fea26469706673582212209968433daff68eb5f2553660c7beecd19b5520dde9fc7acc903e04f0ba0c466264736f6c634300080e0033";

type TestWrapperVaultWithReceiptsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrapperVaultWithReceiptsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrapperVaultWithReceipts__factory extends ContractFactory {
  constructor(...args: TestWrapperVaultWithReceiptsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestWrapperVaultWithReceipts> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestWrapperVaultWithReceipts>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWrapperVaultWithReceipts {
    return super.attach(address) as TestWrapperVaultWithReceipts;
  }
  override connect(signer: Signer): TestWrapperVaultWithReceipts__factory {
    return super.connect(signer) as TestWrapperVaultWithReceipts__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrapperVaultWithReceiptsInterface {
    return new utils.Interface(_abi) as TestWrapperVaultWithReceiptsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrapperVaultWithReceipts {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestWrapperVaultWithReceipts;
  }
}
