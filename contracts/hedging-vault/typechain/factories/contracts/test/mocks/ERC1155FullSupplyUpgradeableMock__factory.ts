/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1155FullSupplyUpgradeableMock,
  ERC1155FullSupplyUpgradeableMockInterface,
} from "../../../../contracts/test/mocks/ERC1155FullSupplyUpgradeableMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610153806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634f558e791461004657806370a082311461007d578063bd85b039146100b4575b600080fd5b6100686100543660046100d4565b600090815260016020526040902054151590565b60405190151581526020015b60405180910390f35b6100a661008b3660046100ed565b6001600160a01b031660009081526002602052604090205490565b604051908152602001610074565b6100a66100c23660046100d4565b60009081526001602052604090205490565b6000602082840312156100e657600080fd5b5035919050565b6000602082840312156100ff57600080fd5b81356001600160a01b038116811461011657600080fd5b939250505056fea26469706673582212209af1ecdddfc67131e3db625cbb78dc9d885a48705cf85df13435fd9981a8919364736f6c634300080e0033";

type ERC1155FullSupplyUpgradeableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155FullSupplyUpgradeableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155FullSupplyUpgradeableMock__factory extends ContractFactory {
  constructor(...args: ERC1155FullSupplyUpgradeableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155FullSupplyUpgradeableMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC1155FullSupplyUpgradeableMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155FullSupplyUpgradeableMock {
    return super.attach(address) as ERC1155FullSupplyUpgradeableMock;
  }
  override connect(signer: Signer): ERC1155FullSupplyUpgradeableMock__factory {
    return super.connect(signer) as ERC1155FullSupplyUpgradeableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155FullSupplyUpgradeableMockInterface {
    return new utils.Interface(
      _abi
    ) as ERC1155FullSupplyUpgradeableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155FullSupplyUpgradeableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155FullSupplyUpgradeableMock;
  }
}
