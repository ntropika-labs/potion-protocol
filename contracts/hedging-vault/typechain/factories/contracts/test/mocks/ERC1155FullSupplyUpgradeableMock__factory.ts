/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1155FullSupplyUpgradeableMock,
  ERC1155FullSupplyUpgradeableMockInterface,
} from "../../../../contracts/test/mocks/ERC1155FullSupplyUpgradeableMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612076806100206000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80636b20c454116100a2578063b42394f111610071578063b42394f114610257578063bd85b0391461025f578063e985e9c51461027f578063f242432a146102bb578063f5298aca146102ce57600080fd5b80636b20c454146101f557806370a0823114610208578063731133e914610231578063a22cb4651461024457600080fd5b80631f7fdffa116100de5780631f7fdffa1461018d5780632eb2c2d6146101a05780634e1273f4146101b35780634f558e79146101d357600080fd5b8062fdd58e1461010f57806301ffc9a71461013557806302fe5305146101585780630e89341c1461016d575b600080fd5b61012261011d366004611514565b6102e1565b6040519081526020015b60405180910390f35b610148610143366004611554565b610379565b604051901515815260200161012c565b61016b610166366004611619565b6103cb565b005b61018061017b36600461166a565b6103d7565b60405161012c91906116d0565b61016b61019b366004611798565b61046b565b61016b6101ae366004611831565b61047d565b6101c66101c13660046118db565b6104c9565b60405161012c91906119e1565b6101486101e136600461166a565b600090815260ca6020526040902054151590565b61016b6102033660046119f4565b6105f3565b610122610216366004611a68565b6001600160a01b0316600090815260cb602052604090205490565b61016b61023f366004611a83565b610603565b61016b610252366004611ad8565b61060f565b60c954610122565b61012261026d36600461166a565b600090815260ca602052604090205490565b61014861028d366004611b14565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b61016b6102c9366004611b47565b61061e565b61016b6102dc366004611bac565b610663565b60006001600160a01b0383166103515760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806103aa57506001600160e01b031982166303a24d0760e21b145b806103c557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6103d48161066e565b50565b6060606780546103e690611bdf565b80601f016020809104026020016040519081016040528092919081815260200182805461041290611bdf565b801561045f5780601f106104345761010080835404028352916020019161045f565b820191906000526020600020905b81548152906001019060200180831161044257829003601f168201915b50505050509050919050565b61047784848484610681565b50505050565b6001600160a01b0385163314806104995750610499853361028d565b6104b55760405162461bcd60e51b815260040161034890611c19565b6104c285858585856107dc565b5050505050565b6060815183511461052e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610348565b6000835167ffffffffffffffff81111561054a5761054a611578565b604051908082528060200260200182016040528015610573578160200160208202803683370190505b50905060005b84518110156105eb576105be85828151811061059757610597611c68565b60200260200101518583815181106105b1576105b1611c68565b60200260200101516102e1565b8282815181106105d0576105d0611c68565b60209081029190910101526105e481611c94565b9050610579565b509392505050565b6105fe838383610989565b505050565b61047784848484610b28565b61061a338383610c13565b5050565b6001600160a01b03851633148061063a575061063a853361028d565b6106565760405162461bcd60e51b815260040161034890611c19565b6104c28585858585610cf3565b6105fe838383610e2f565b805161061a90606790602084019061145f565b6001600160a01b0384166106a75760405162461bcd60e51b815260040161034890611cad565b81518351146106c85760405162461bcd60e51b815260040161034890611cee565b336106d881600087878787610f4b565b60005b8451811015610774578381815181106106f6576106f6611c68565b60200260200101516065600087848151811061071457610714611c68565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461075c9190611d36565b9091555081905061076c81611c94565b9150506106db565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107c5929190611d4e565b60405180910390a46104c281600087878787610f59565b81518351146107fd5760405162461bcd60e51b815260040161034890611cee565b6001600160a01b0384166108235760405162461bcd60e51b815260040161034890611d7c565b33610832818787878787610f4b565b60005b845181101561091b57600085828151811061085257610852611c68565b60200260200101519050600085838151811061087057610870611c68565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156108c15760405162461bcd60e51b815260040161034890611dc1565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610900908490611d36565b925050819055505050508061091490611c94565b9050610835565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161096b929190611d4e565b60405180910390a4610981818787878787610f59565b505050505050565b6001600160a01b0383166109af5760405162461bcd60e51b815260040161034890611e0b565b80518251146109d05760405162461bcd60e51b815260040161034890611cee565b60003390506109f381856000868660405180602001604052806000815250610f4b565b60005b8351811015610abb576000848281518110610a1357610a13611c68565b602002602001015190506000848381518110610a3157610a31611c68565b60209081029190910181015160008481526065835260408082206001600160a01b038c168352909352919091205490915081811015610a825760405162461bcd60e51b815260040161034890611e4e565b60009283526065602090815260408085206001600160a01b038b1686529091529092209103905580610ab381611c94565b9150506109f6565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610b0c929190611d4e565b60405180910390a4604080516020810190915260009052610477565b6001600160a01b038416610b4e5760405162461bcd60e51b815260040161034890611cad565b336000610b5a856110b4565b90506000610b67856110b4565b9050610b7883600089858589610f4b565b60008681526065602090815260408083206001600160a01b038b16845290915281208054879290610baa908490611d36565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c0a836000898989896110ff565b50505050505050565b816001600160a01b0316836001600160a01b031603610c865760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610348565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610d195760405162461bcd60e51b815260040161034890611d7c565b336000610d25856110b4565b90506000610d32856110b4565b9050610d42838989858589610f4b565b60008681526065602090815260408083206001600160a01b038c16845290915290205485811015610d855760405162461bcd60e51b815260040161034890611dc1565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610dc4908490611d36565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e24848a8a8a8a8a6110ff565b505050505050505050565b6001600160a01b038316610e555760405162461bcd60e51b815260040161034890611e0b565b336000610e61846110b4565b90506000610e6e846110b4565b9050610e8e83876000858560405180602001604052806000815250610f4b565b60008581526065602090815260408083206001600160a01b038a16845290915290205484811015610ed15760405162461bcd60e51b815260040161034890611e4e565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610c0a565b6109818686868686866111ba565b6001600160a01b0384163b156109815760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610f9d9089908990889088908890600401611e92565b6020604051808303816000875af1925050508015610fd8575060408051601f3d908101601f19168201909252610fd591810190611ef0565b60015b61108457610fe4611f0d565b806308c379a00361101d5750610ff8611f29565b80611003575061101f565b8060405162461bcd60e51b815260040161034891906116d0565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610348565b6001600160e01b0319811663bc197c8160e01b14610c0a5760405162461bcd60e51b815260040161034890611fb3565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106110ee576110ee611c68565b602090810291909101015292915050565b6001600160a01b0384163b156109815760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906111439089908990889088908890600401611ffb565b6020604051808303816000875af192505050801561117e575060408051601f3d908101601f1916820190925261117b91810190611ef0565b60015b61118a57610fe4611f0d565b6001600160e01b0319811663f23a6e6160e01b14610c0a5760405162461bcd60e51b815260040161034890611fb3565b6001600160a01b0385166112c85760005b83518110156112c6578281815181106111e6576111e6611c68565b602002602001015160ca600086848151811061120457611204611c68565b6020026020010151815260200190815260200160002060008282546112299190611d36565b9250508190555082818151811061124257611242611c68565b602002602001015160cb6000876001600160a01b03166001600160a01b03168152602001908152602001600020600082825461127e9190611d36565b9250508190555082818151811061129757611297611c68565b602002602001015160c960008282546112b09190611d36565b909155506112bf905081611c94565b90506111cb565b505b6001600160a01b0384166109815760005b8351811015610c0a5760008482815181106112f6576112f6611c68565b60200260200101519050600084838151811061131457611314611c68565b60200260200101519050600060ca6000848152602001908152602001600020549050818110156113975760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b6064820152608401610348565b6001600160a01b038916600090815260cb6020526040902054828110156114145760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a206275726e20616d6f756e7420657863656564732061636360448201526a1bdd5b9d08185b5bdd5b9d60aa1b6064820152608401610348565b600093845260ca60209081526040808620938590039093556001600160a01b038b16855260cb905292209181900390915560c9805491909103905561145881611c94565b90506112d9565b82805461146b90611bdf565b90600052602060002090601f01602090048101928261148d57600085556114d3565b82601f106114a657805160ff19168380011785556114d3565b828001600101855582156114d3579182015b828111156114d35782518255916020019190600101906114b8565b506114df9291506114e3565b5090565b5b808211156114df57600081556001016114e4565b80356001600160a01b038116811461150f57600080fd5b919050565b6000806040838503121561152757600080fd5b611530836114f8565b946020939093013593505050565b6001600160e01b0319811681146103d457600080fd5b60006020828403121561156657600080fd5b81356115718161153e565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156115b4576115b4611578565b6040525050565b600067ffffffffffffffff8311156115d5576115d5611578565b6040516115ec601f8501601f19166020018261158e565b80915083815284848401111561160157600080fd5b83836020830137600060208583010152509392505050565b60006020828403121561162b57600080fd5b813567ffffffffffffffff81111561164257600080fd5b8201601f8101841361165357600080fd5b611662848235602084016115bb565b949350505050565b60006020828403121561167c57600080fd5b5035919050565b6000815180845260005b818110156116a95760208185018101518683018201520161168d565b818111156116bb576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006115716020830184611683565b600067ffffffffffffffff8211156116fd576116fd611578565b5060051b60200190565b600082601f83011261171857600080fd5b81356020611725826116e3565b604051611732828261158e565b83815260059390931b850182019282810191508684111561175257600080fd5b8286015b8481101561176d5780358352918301918301611756565b509695505050505050565b600082601f83011261178957600080fd5b611571838335602085016115bb565b600080600080608085870312156117ae57600080fd5b6117b7856114f8565b9350602085013567ffffffffffffffff808211156117d457600080fd5b6117e088838901611707565b945060408701359150808211156117f657600080fd5b61180288838901611707565b9350606087013591508082111561181857600080fd5b5061182587828801611778565b91505092959194509250565b600080600080600060a0868803121561184957600080fd5b611852866114f8565b9450611860602087016114f8565b9350604086013567ffffffffffffffff8082111561187d57600080fd5b61188989838a01611707565b9450606088013591508082111561189f57600080fd5b6118ab89838a01611707565b935060808801359150808211156118c157600080fd5b506118ce88828901611778565b9150509295509295909350565b600080604083850312156118ee57600080fd5b823567ffffffffffffffff8082111561190657600080fd5b818501915085601f83011261191a57600080fd5b81356020611927826116e3565b604051611934828261158e565b83815260059390931b850182019282810191508984111561195457600080fd5b948201945b838610156119795761196a866114f8565b82529482019490820190611959565b9650508601359250508082111561198f57600080fd5b5061199c85828601611707565b9150509250929050565b600081518084526020808501945080840160005b838110156119d6578151875295820195908201906001016119ba565b509495945050505050565b60208152600061157160208301846119a6565b600080600060608486031215611a0957600080fd5b611a12846114f8565b9250602084013567ffffffffffffffff80821115611a2f57600080fd5b611a3b87838801611707565b93506040860135915080821115611a5157600080fd5b50611a5e86828701611707565b9150509250925092565b600060208284031215611a7a57600080fd5b611571826114f8565b60008060008060808587031215611a9957600080fd5b611aa2856114f8565b93506020850135925060408501359150606085013567ffffffffffffffff811115611acc57600080fd5b61182587828801611778565b60008060408385031215611aeb57600080fd5b611af4836114f8565b915060208301358015158114611b0957600080fd5b809150509250929050565b60008060408385031215611b2757600080fd5b611b30836114f8565b9150611b3e602084016114f8565b90509250929050565b600080600080600060a08688031215611b5f57600080fd5b611b68866114f8565b9450611b76602087016114f8565b93506040860135925060608601359150608086013567ffffffffffffffff811115611ba057600080fd5b6118ce88828901611778565b600080600060608486031215611bc157600080fd5b611bca846114f8565b95602085013595506040909401359392505050565b600181811c90821680611bf357607f821691505b602082108103611c1357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611ca657611ca6611c7e565b5060010190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60008219821115611d4957611d49611c7e565b500190565b604081526000611d6160408301856119a6565b8281036020840152611d7381856119a6565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611ebe908301866119a6565b8281036060840152611ed081866119a6565b90508281036080840152611ee48185611683565b98975050505050505050565b600060208284031215611f0257600080fd5b81516115718161153e565b600060033d1115611f265760046000803e5060005160e01c5b90565b600060443d1015611f375790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611f6757505050505090565b8285019150815181811115611f7f5750505050505090565b843d8701016020828501011115611f995750505050505090565b611fa86020828601018761158e565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061203590830184611683565b97965050505050505056fea2646970667358221220a3b17f7db973a945dc3ee2e1b8198d16d74a6ee665819492306b862c7336b14164736f6c634300080e0033";

type ERC1155FullSupplyUpgradeableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155FullSupplyUpgradeableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155FullSupplyUpgradeableMock__factory extends ContractFactory {
  constructor(...args: ERC1155FullSupplyUpgradeableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155FullSupplyUpgradeableMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC1155FullSupplyUpgradeableMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155FullSupplyUpgradeableMock {
    return super.attach(address) as ERC1155FullSupplyUpgradeableMock;
  }
  override connect(signer: Signer): ERC1155FullSupplyUpgradeableMock__factory {
    return super.connect(signer) as ERC1155FullSupplyUpgradeableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155FullSupplyUpgradeableMockInterface {
    return new utils.Interface(
      _abi
    ) as ERC1155FullSupplyUpgradeableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155FullSupplyUpgradeableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155FullSupplyUpgradeableMock;
  }
}
