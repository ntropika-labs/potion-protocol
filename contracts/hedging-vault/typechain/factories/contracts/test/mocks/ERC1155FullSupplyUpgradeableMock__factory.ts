/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1155FullSupplyUpgradeableMock,
  ERC1155FullSupplyUpgradeableMockInterface,
} from "../../../../contracts/test/mocks/ERC1155FullSupplyUpgradeableMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612278806100206000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c806370a08231116100a2578063bd85b03911610071578063bd85b0391461026a578063e985e9c51461028a578063f242432a146102c6578063f5298aca146102d9578063f62d1888146102ec57600080fd5b806370a0823114610213578063731133e91461023c578063a22cb4651461024f578063b42394f11461026257600080fd5b80631f7fdffa116100e95780631f7fdffa146101985780632eb2c2d6146101ab5780634e1273f4146101be5780634f558e79146101de5780636b20c4541461020057600080fd5b8062fdd58e1461011a57806301ffc9a71461014057806302fe5305146101635780630e89341c14610178575b600080fd5b61012d6101283660046116cb565b6102ff565b6040519081526020015b60405180910390f35b61015361014e36600461170b565b610397565b6040519015158152602001610137565b6101766101713660046117d0565b6103e9565b005b61018b610186366004611821565b6103f5565b6040516101379190611887565b6101766101a636600461194f565b610489565b6101766101b93660046119e8565b61049b565b6101d16101cc366004611a92565b6104e7565b6040516101379190611b98565b6101536101ec366004611821565b600090815260ca6020526040902054151590565b61017661020e366004611bab565b610611565b61012d610221366004611c1f565b6001600160a01b0316600090815260cb602052604090205490565b61017661024a366004611c3a565b610621565b61017661025d366004611c8f565b61062d565b60c95461012d565b61012d610278366004611821565b600090815260ca602052604090205490565b610153610298366004611ccb565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6101766102d4366004611cfe565b61063c565b6101766102e7366004611d63565b610681565b6101766102fa3660046117d0565b61068c565b60006001600160a01b03831661036f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806103c857506001600160e01b031982166303a24d0760e21b145b806103e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6103f28161079e565b50565b60606067805461040490611d96565b80601f016020809104026020016040519081016040528092919081815260200182805461043090611d96565b801561047d5780601f106104525761010080835404028352916020019161047d565b820191906000526020600020905b81548152906001019060200180831161046057829003601f168201915b50505050509050919050565b610495848484846107b1565b50505050565b6001600160a01b0385163314806104b757506104b78533610298565b6104d35760405162461bcd60e51b815260040161036690611dd0565b6104e0858585858561090c565b5050505050565b6060815183511461054c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610366565b6000835167ffffffffffffffff8111156105685761056861172f565b604051908082528060200260200182016040528015610591578160200160208202803683370190505b50905060005b8451811015610609576105dc8582815181106105b5576105b5611e1f565b60200260200101518583815181106105cf576105cf611e1f565b60200260200101516102ff565b8282815181106105ee576105ee611e1f565b602090810291909101015261060281611e4b565b9050610597565b509392505050565b61061c838383610ab9565b505050565b61049584848484610c58565b610638338383610d43565b5050565b6001600160a01b03851633148061065857506106588533610298565b6106745760405162461bcd60e51b815260040161036690611dd0565b6104e08585858585610e23565b61061c838383610f5f565b600054610100900460ff16158080156106ac5750600054600160ff909116105b806106c65750303b1580156106c6575060005460ff166001145b6107295760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610366565b6000805460ff19166001179055801561074c576000805461ff0019166101001790555b6107558261107b565b8015610638576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b8051610638906067906020840190611616565b6001600160a01b0384166107d75760405162461bcd60e51b815260040161036690611e64565b81518351146107f85760405162461bcd60e51b815260040161036690611ea5565b33610808816000878787876110b4565b60005b84518110156108a45783818151811061082657610826611e1f565b60200260200101516065600087848151811061084457610844611e1f565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461088c9190611eed565b9091555081905061089c81611e4b565b91505061080b565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108f5929190611f05565b60405180910390a46104e0816000878787876110c2565b815183511461092d5760405162461bcd60e51b815260040161036690611ea5565b6001600160a01b0384166109535760405162461bcd60e51b815260040161036690611f33565b336109628187878787876110b4565b60005b8451811015610a4b57600085828151811061098257610982611e1f565b6020026020010151905060008583815181106109a0576109a0611e1f565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156109f15760405162461bcd60e51b815260040161036690611f78565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610a30908490611eed565b9250508190555050505080610a4490611e4b565b9050610965565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a9b929190611f05565b60405180910390a4610ab18187878787876110c2565b505050505050565b6001600160a01b038316610adf5760405162461bcd60e51b815260040161036690611fc2565b8051825114610b005760405162461bcd60e51b815260040161036690611ea5565b6000339050610b23818560008686604051806020016040528060008152506110b4565b60005b8351811015610beb576000848281518110610b4357610b43611e1f565b602002602001015190506000848381518110610b6157610b61611e1f565b60209081029190910181015160008481526065835260408082206001600160a01b038c168352909352919091205490915081811015610bb25760405162461bcd60e51b815260040161036690612005565b60009283526065602090815260408085206001600160a01b038b1686529091529092209103905580610be381611e4b565b915050610b26565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610c3c929190611f05565b60405180910390a4604080516020810190915260009052610495565b6001600160a01b038416610c7e5760405162461bcd60e51b815260040161036690611e64565b336000610c8a8561121d565b90506000610c978561121d565b9050610ca8836000898585896110b4565b60008681526065602090815260408083206001600160a01b038b16845290915281208054879290610cda908490611eed565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d3a83600089898989611268565b50505050505050565b816001600160a01b0316836001600160a01b031603610db65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610366565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610e495760405162461bcd60e51b815260040161036690611f33565b336000610e558561121d565b90506000610e628561121d565b9050610e728389898585896110b4565b60008681526065602090815260408083206001600160a01b038c16845290915290205485811015610eb55760405162461bcd60e51b815260040161036690611f78565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610ef4908490611eed565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610f54848a8a8a8a8a611268565b505050505050505050565b6001600160a01b038316610f855760405162461bcd60e51b815260040161036690611fc2565b336000610f918461121d565b90506000610f9e8461121d565b9050610fbe838760008585604051806020016040528060008152506110b4565b60008581526065602090815260408083206001600160a01b038a168452909152902054848110156110015760405162461bcd60e51b815260040161036690612005565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610d3a565b600054610100900460ff166110a25760405162461bcd60e51b815260040161036690612049565b6110ab81611323565b6103f28161134a565b610ab1868686868686611371565b6001600160a01b0384163b15610ab15760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111069089908990889088908890600401612094565b6020604051808303816000875af1925050508015611141575060408051601f3d908101601f1916820190925261113e918101906120f2565b60015b6111ed5761114d61210f565b806308c379a003611186575061116161212b565b8061116c5750611188565b8060405162461bcd60e51b81526004016103669190611887565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610366565b6001600160e01b0319811663bc197c8160e01b14610d3a5760405162461bcd60e51b8152600401610366906121b5565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061125757611257611e1f565b602090810291909101015292915050565b6001600160a01b0384163b15610ab15760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112ac90899089908890889088906004016121fd565b6020604051808303816000875af19250505080156112e7575060408051601f3d908101601f191682019092526112e4918101906120f2565b60015b6112f35761114d61210f565b6001600160e01b0319811663f23a6e6160e01b14610d3a5760405162461bcd60e51b8152600401610366906121b5565b600054610100900460ff166103e95760405162461bcd60e51b815260040161036690612049565b600054610100900460ff166103f25760405162461bcd60e51b815260040161036690612049565b6001600160a01b03851661147f5760005b835181101561147d5782818151811061139d5761139d611e1f565b602002602001015160ca60008684815181106113bb576113bb611e1f565b6020026020010151815260200190815260200160002060008282546113e09190611eed565b925050819055508281815181106113f9576113f9611e1f565b602002602001015160cb6000876001600160a01b03166001600160a01b0316815260200190815260200160002060008282546114359190611eed565b9250508190555082818151811061144e5761144e611e1f565b602002602001015160c960008282546114679190611eed565b90915550611476905081611e4b565b9050611382565b505b6001600160a01b038416610ab15760005b8351811015610d3a5760008482815181106114ad576114ad611e1f565b6020026020010151905060008483815181106114cb576114cb611e1f565b60200260200101519050600060ca60008481526020019081526020016000205490508181101561154e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b6064820152608401610366565b6001600160a01b038916600090815260cb6020526040902054828110156115cb5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a206275726e20616d6f756e7420657863656564732061636360448201526a1bdd5b9d08185b5bdd5b9d60aa1b6064820152608401610366565b600093845260ca60209081526040808620938590039093556001600160a01b038b16855260cb905292209181900390915560c9805491909103905561160f81611e4b565b9050611490565b82805461162290611d96565b90600052602060002090601f016020900481019282611644576000855561168a565b82601f1061165d57805160ff191683800117855561168a565b8280016001018555821561168a579182015b8281111561168a57825182559160200191906001019061166f565b5061169692915061169a565b5090565b5b80821115611696576000815560010161169b565b80356001600160a01b03811681146116c657600080fd5b919050565b600080604083850312156116de57600080fd5b6116e7836116af565b946020939093013593505050565b6001600160e01b0319811681146103f257600080fd5b60006020828403121561171d57600080fd5b8135611728816116f5565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561176b5761176b61172f565b6040525050565b600067ffffffffffffffff83111561178c5761178c61172f565b6040516117a3601f8501601f191660200182611745565b8091508381528484840111156117b857600080fd5b83836020830137600060208583010152509392505050565b6000602082840312156117e257600080fd5b813567ffffffffffffffff8111156117f957600080fd5b8201601f8101841361180a57600080fd5b61181984823560208401611772565b949350505050565b60006020828403121561183357600080fd5b5035919050565b6000815180845260005b8181101561186057602081850181015186830182015201611844565b81811115611872576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611728602083018461183a565b600067ffffffffffffffff8211156118b4576118b461172f565b5060051b60200190565b600082601f8301126118cf57600080fd5b813560206118dc8261189a565b6040516118e98282611745565b83815260059390931b850182019282810191508684111561190957600080fd5b8286015b84811015611924578035835291830191830161190d565b509695505050505050565b600082601f83011261194057600080fd5b61172883833560208501611772565b6000806000806080858703121561196557600080fd5b61196e856116af565b9350602085013567ffffffffffffffff8082111561198b57600080fd5b611997888389016118be565b945060408701359150808211156119ad57600080fd5b6119b9888389016118be565b935060608701359150808211156119cf57600080fd5b506119dc8782880161192f565b91505092959194509250565b600080600080600060a08688031215611a0057600080fd5b611a09866116af565b9450611a17602087016116af565b9350604086013567ffffffffffffffff80821115611a3457600080fd5b611a4089838a016118be565b94506060880135915080821115611a5657600080fd5b611a6289838a016118be565b93506080880135915080821115611a7857600080fd5b50611a858882890161192f565b9150509295509295909350565b60008060408385031215611aa557600080fd5b823567ffffffffffffffff80821115611abd57600080fd5b818501915085601f830112611ad157600080fd5b81356020611ade8261189a565b604051611aeb8282611745565b83815260059390931b8501820192828101915089841115611b0b57600080fd5b948201945b83861015611b3057611b21866116af565b82529482019490820190611b10565b96505086013592505080821115611b4657600080fd5b50611b53858286016118be565b9150509250929050565b600081518084526020808501945080840160005b83811015611b8d57815187529582019590820190600101611b71565b509495945050505050565b6020815260006117286020830184611b5d565b600080600060608486031215611bc057600080fd5b611bc9846116af565b9250602084013567ffffffffffffffff80821115611be657600080fd5b611bf2878388016118be565b93506040860135915080821115611c0857600080fd5b50611c15868287016118be565b9150509250925092565b600060208284031215611c3157600080fd5b611728826116af565b60008060008060808587031215611c5057600080fd5b611c59856116af565b93506020850135925060408501359150606085013567ffffffffffffffff811115611c8357600080fd5b6119dc8782880161192f565b60008060408385031215611ca257600080fd5b611cab836116af565b915060208301358015158114611cc057600080fd5b809150509250929050565b60008060408385031215611cde57600080fd5b611ce7836116af565b9150611cf5602084016116af565b90509250929050565b600080600080600060a08688031215611d1657600080fd5b611d1f866116af565b9450611d2d602087016116af565b93506040860135925060608601359150608086013567ffffffffffffffff811115611d5757600080fd5b611a858882890161192f565b600080600060608486031215611d7857600080fd5b611d81846116af565b95602085013595506040909401359392505050565b600181811c90821680611daa57607f821691505b602082108103611dca57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611e5d57611e5d611e35565b5060010190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60008219821115611f0057611f00611e35565b500190565b604081526000611f186040830185611b5d565b8281036020840152611f2a8185611b5d565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190526000906120c090830186611b5d565b82810360608401526120d28186611b5d565b905082810360808401526120e6818561183a565b98975050505050505050565b60006020828403121561210457600080fd5b8151611728816116f5565b600060033d11156121285760046000803e5060005160e01c5b90565b600060443d10156121395790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561216957505050505090565b82850191508151818111156121815750505050505090565b843d870101602082850101111561219b5750505050505090565b6121aa60208286010187611745565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906122379083018461183a565b97965050505050505056fea2646970667358221220c6afd345e9eac253fde439e7c255f9ba5e31534af76c77a5ba9339eb2c4467cd64736f6c634300080e0033";

type ERC1155FullSupplyUpgradeableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155FullSupplyUpgradeableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155FullSupplyUpgradeableMock__factory extends ContractFactory {
  constructor(...args: ERC1155FullSupplyUpgradeableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155FullSupplyUpgradeableMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC1155FullSupplyUpgradeableMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155FullSupplyUpgradeableMock {
    return super.attach(address) as ERC1155FullSupplyUpgradeableMock;
  }
  override connect(signer: Signer): ERC1155FullSupplyUpgradeableMock__factory {
    return super.connect(signer) as ERC1155FullSupplyUpgradeableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155FullSupplyUpgradeableMockInterface {
    return new utils.Interface(
      _abi
    ) as ERC1155FullSupplyUpgradeableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155FullSupplyUpgradeableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155FullSupplyUpgradeableMock;
  }
}
