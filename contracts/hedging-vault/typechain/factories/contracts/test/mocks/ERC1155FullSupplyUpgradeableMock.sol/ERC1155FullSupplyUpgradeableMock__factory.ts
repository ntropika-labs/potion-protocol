/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155FullSupplyUpgradeableMock,
  ERC1155FullSupplyUpgradeableMockInterface,
} from "../../../../../contracts/test/mocks/ERC1155FullSupplyUpgradeableMock.sol/ERC1155FullSupplyUpgradeableMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506120b5806100206000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80636b20c454116100a2578063b42394f111610071578063b42394f114610257578063bd85b0391461025f578063e985e9c51461027f578063f242432a146102bb578063f5298aca146102ce57600080fd5b80636b20c454146101f557806370a0823114610208578063731133e914610231578063a22cb4651461024457600080fd5b80631f7fdffa116100de5780631f7fdffa1461018d5780632eb2c2d6146101a05780634e1273f4146101b35780634f558e79146101d357600080fd5b8062fdd58e1461010f57806301ffc9a71461013557806302fe5305146101585780630e89341c1461016d575b600080fd5b61012261011d3660046115a2565b6102e1565b6040519081526020015b60405180910390f35b6101486101433660046115e2565b61037a565b604051901515815260200161012c565b61016b6101663660046116a7565b6103cc565b005b61018061017b3660046116f8565b6103d8565b60405161012c919061175e565b61016b61019b366004611826565b61046c565b61016b6101ae3660046118bf565b61047e565b6101c66101c1366004611969565b610515565b60405161012c9190611a6f565b6101486101e13660046116f8565b600090815260ca6020526040902054151590565b61016b610203366004611a82565b61063f565b610122610216366004611af6565b6001600160a01b0316600090815260cb602052604090205490565b61016b61023f366004611b11565b61064f565b61016b610252366004611b66565b61065b565b60c954610122565b61012261026d3660046116f8565b600090815260ca602052604090205490565b61014861028d366004611ba2565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b61016b6102c9366004611bd5565b61066a565b61016b6102dc366004611c3a565b6106f1565b60006001600160a01b0383166103525760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806103ab57506001600160e01b031982166303a24d0760e21b145b806103c657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6103d5816106fc565b50565b6060606780546103e790611c6d565b80601f016020809104026020016040519081016040528092919081815260200182805461041390611c6d565b80156104605780601f1061043557610100808354040283529160200191610460565b820191906000526020600020905b81548152906001019060200180831161044357829003601f168201915b50505050509050919050565b6104788484848461070f565b50505050565b6001600160a01b03851633148061049a575061049a853361028d565b6105015760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610349565b61050e858585858561086a565b5050505050565b6060815183511461057a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610349565b6000835167ffffffffffffffff81111561059657610596611606565b6040519080825280602002602001820160405280156105bf578160200160208202803683370190505b50905060005b84518110156106375761060a8582815181106105e3576105e3611ca7565b60200260200101518583815181106105fd576105fd611ca7565b60200260200101516102e1565b82828151811061061c5761061c611ca7565b602090810291909101015261063081611cd3565b90506105c5565b509392505050565b61064a838383610a17565b505050565b61047884848484610bb6565b610666338383610ca1565b5050565b6001600160a01b0385163314806106865750610686853361028d565b6106e45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610349565b61050e8585858585610d81565b61064a838383610ebd565b80516106669060679060208401906114ed565b6001600160a01b0384166107355760405162461bcd60e51b815260040161034990611cec565b81518351146107565760405162461bcd60e51b815260040161034990611d2d565b3361076681600087878787610fd9565b60005b84518110156108025783818151811061078457610784611ca7565b6020026020010151606560008784815181106107a2576107a2611ca7565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546107ea9190611d75565b909155508190506107fa81611cd3565b915050610769565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610853929190611d8d565b60405180910390a461050e81600087878787610fe7565b815183511461088b5760405162461bcd60e51b815260040161034990611d2d565b6001600160a01b0384166108b15760405162461bcd60e51b815260040161034990611dbb565b336108c0818787878787610fd9565b60005b84518110156109a95760008582815181106108e0576108e0611ca7565b6020026020010151905060008583815181106108fe576108fe611ca7565b60209081029190910181015160008481526065835260408082206001600160a01b038e16835290935291909120549091508181101561094f5760405162461bcd60e51b815260040161034990611e00565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061098e908490611d75565b92505081905550505050806109a290611cd3565b90506108c3565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109f9929190611d8d565b60405180910390a4610a0f818787878787610fe7565b505050505050565b6001600160a01b038316610a3d5760405162461bcd60e51b815260040161034990611e4a565b8051825114610a5e5760405162461bcd60e51b815260040161034990611d2d565b6000339050610a8181856000868660405180602001604052806000815250610fd9565b60005b8351811015610b49576000848281518110610aa157610aa1611ca7565b602002602001015190506000848381518110610abf57610abf611ca7565b60209081029190910181015160008481526065835260408082206001600160a01b038c168352909352919091205490915081811015610b105760405162461bcd60e51b815260040161034990611e8d565b60009283526065602090815260408085206001600160a01b038b1686529091529092209103905580610b4181611cd3565b915050610a84565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610b9a929190611d8d565b60405180910390a4604080516020810190915260009052610478565b6001600160a01b038416610bdc5760405162461bcd60e51b815260040161034990611cec565b336000610be885611142565b90506000610bf585611142565b9050610c0683600089858589610fd9565b60008681526065602090815260408083206001600160a01b038b16845290915281208054879290610c38908490611d75565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c988360008989898961118d565b50505050505050565b816001600160a01b0316836001600160a01b031603610d145760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610349565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610da75760405162461bcd60e51b815260040161034990611dbb565b336000610db385611142565b90506000610dc085611142565b9050610dd0838989858589610fd9565b60008681526065602090815260408083206001600160a01b038c16845290915290205485811015610e135760405162461bcd60e51b815260040161034990611e00565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610e52908490611d75565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610eb2848a8a8a8a8a61118d565b505050505050505050565b6001600160a01b038316610ee35760405162461bcd60e51b815260040161034990611e4a565b336000610eef84611142565b90506000610efc84611142565b9050610f1c83876000858560405180602001604052806000815250610fd9565b60008581526065602090815260408083206001600160a01b038a16845290915290205484811015610f5f5760405162461bcd60e51b815260040161034990611e8d565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610c98565b610a0f868686868686611248565b6001600160a01b0384163b15610a0f5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061102b9089908990889088908890600401611ed1565b6020604051808303816000875af1925050508015611066575060408051601f3d908101601f1916820190925261106391810190611f2f565b60015b61111257611072611f4c565b806308c379a0036110ab5750611086611f68565b8061109157506110ad565b8060405162461bcd60e51b8152600401610349919061175e565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610349565b6001600160e01b0319811663bc197c8160e01b14610c985760405162461bcd60e51b815260040161034990611ff2565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061117c5761117c611ca7565b602090810291909101015292915050565b6001600160a01b0384163b15610a0f5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906111d1908990899088908890889060040161203a565b6020604051808303816000875af192505050801561120c575060408051601f3d908101601f1916820190925261120991810190611f2f565b60015b61121857611072611f4c565b6001600160e01b0319811663f23a6e6160e01b14610c985760405162461bcd60e51b815260040161034990611ff2565b6001600160a01b0385166113565760005b83518110156113545782818151811061127457611274611ca7565b602002602001015160ca600086848151811061129257611292611ca7565b6020026020010151815260200190815260200160002060008282546112b79190611d75565b925050819055508281815181106112d0576112d0611ca7565b602002602001015160cb6000876001600160a01b03166001600160a01b03168152602001908152602001600020600082825461130c9190611d75565b9250508190555082818151811061132557611325611ca7565b602002602001015160c9600082825461133e9190611d75565b9091555061134d905081611cd3565b9050611259565b505b6001600160a01b038416610a0f5760005b8351811015610c9857600084828151811061138457611384611ca7565b6020026020010151905060008483815181106113a2576113a2611ca7565b60200260200101519050600060ca6000848152602001908152602001600020549050818110156114255760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b6064820152608401610349565b6001600160a01b038916600090815260cb6020526040902054828110156114a25760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a206275726e20616d6f756e7420657863656564732061636360448201526a1bdd5b9d08185b5bdd5b9d60aa1b6064820152608401610349565b600093845260ca60209081526040808620938590039093556001600160a01b038b16855260cb905292209181900390915560c980549190910390556114e681611cd3565b9050611367565b8280546114f990611c6d565b90600052602060002090601f01602090048101928261151b5760008555611561565b82601f1061153457805160ff1916838001178555611561565b82800160010185558215611561579182015b82811115611561578251825591602001919060010190611546565b5061156d929150611571565b5090565b5b8082111561156d5760008155600101611572565b80356001600160a01b038116811461159d57600080fd5b919050565b600080604083850312156115b557600080fd5b6115be83611586565b946020939093013593505050565b6001600160e01b0319811681146103d557600080fd5b6000602082840312156115f457600080fd5b81356115ff816115cc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561164257611642611606565b6040525050565b600067ffffffffffffffff83111561166357611663611606565b60405161167a601f8501601f19166020018261161c565b80915083815284848401111561168f57600080fd5b83836020830137600060208583010152509392505050565b6000602082840312156116b957600080fd5b813567ffffffffffffffff8111156116d057600080fd5b8201601f810184136116e157600080fd5b6116f084823560208401611649565b949350505050565b60006020828403121561170a57600080fd5b5035919050565b6000815180845260005b818110156117375760208185018101518683018201520161171b565b81811115611749576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006115ff6020830184611711565b600067ffffffffffffffff82111561178b5761178b611606565b5060051b60200190565b600082601f8301126117a657600080fd5b813560206117b382611771565b6040516117c0828261161c565b83815260059390931b85018201928281019150868411156117e057600080fd5b8286015b848110156117fb57803583529183019183016117e4565b509695505050505050565b600082601f83011261181757600080fd5b6115ff83833560208501611649565b6000806000806080858703121561183c57600080fd5b61184585611586565b9350602085013567ffffffffffffffff8082111561186257600080fd5b61186e88838901611795565b9450604087013591508082111561188457600080fd5b61189088838901611795565b935060608701359150808211156118a657600080fd5b506118b387828801611806565b91505092959194509250565b600080600080600060a086880312156118d757600080fd5b6118e086611586565b94506118ee60208701611586565b9350604086013567ffffffffffffffff8082111561190b57600080fd5b61191789838a01611795565b9450606088013591508082111561192d57600080fd5b61193989838a01611795565b9350608088013591508082111561194f57600080fd5b5061195c88828901611806565b9150509295509295909350565b6000806040838503121561197c57600080fd5b823567ffffffffffffffff8082111561199457600080fd5b818501915085601f8301126119a857600080fd5b813560206119b582611771565b6040516119c2828261161c565b83815260059390931b85018201928281019150898411156119e257600080fd5b948201945b83861015611a07576119f886611586565b825294820194908201906119e7565b96505086013592505080821115611a1d57600080fd5b50611a2a85828601611795565b9150509250929050565b600081518084526020808501945080840160005b83811015611a6457815187529582019590820190600101611a48565b509495945050505050565b6020815260006115ff6020830184611a34565b600080600060608486031215611a9757600080fd5b611aa084611586565b9250602084013567ffffffffffffffff80821115611abd57600080fd5b611ac987838801611795565b93506040860135915080821115611adf57600080fd5b50611aec86828701611795565b9150509250925092565b600060208284031215611b0857600080fd5b6115ff82611586565b60008060008060808587031215611b2757600080fd5b611b3085611586565b93506020850135925060408501359150606085013567ffffffffffffffff811115611b5a57600080fd5b6118b387828801611806565b60008060408385031215611b7957600080fd5b611b8283611586565b915060208301358015158114611b9757600080fd5b809150509250929050565b60008060408385031215611bb557600080fd5b611bbe83611586565b9150611bcc60208401611586565b90509250929050565b600080600080600060a08688031215611bed57600080fd5b611bf686611586565b9450611c0460208701611586565b93506040860135925060608601359150608086013567ffffffffffffffff811115611c2e57600080fd5b61195c88828901611806565b600080600060608486031215611c4f57600080fd5b611c5884611586565b95602085013595506040909401359392505050565b600181811c90821680611c8157607f821691505b602082108103611ca157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611ce557611ce5611cbd565b5060010190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60008219821115611d8857611d88611cbd565b500190565b604081526000611da06040830185611a34565b8281036020840152611db28185611a34565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611efd90830186611a34565b8281036060840152611f0f8186611a34565b90508281036080840152611f238185611711565b98975050505050505050565b600060208284031215611f4157600080fd5b81516115ff816115cc565b600060033d1115611f655760046000803e5060005160e01c5b90565b600060443d1015611f765790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611fa657505050505090565b8285019150815181811115611fbe5750505050505090565b843d8701016020828501011115611fd85750505050505090565b611fe76020828601018761161c565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061207490830184611711565b97965050505050505056fea264697066735822122076b5653c97cb251c765ebb0653f5669677f3e1c981acf9bf12e6a1cc88cf4b4964736f6c634300080e0033";

type ERC1155FullSupplyUpgradeableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155FullSupplyUpgradeableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155FullSupplyUpgradeableMock__factory extends ContractFactory {
  constructor(...args: ERC1155FullSupplyUpgradeableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155FullSupplyUpgradeableMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC1155FullSupplyUpgradeableMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155FullSupplyUpgradeableMock {
    return super.attach(address) as ERC1155FullSupplyUpgradeableMock;
  }
  override connect(signer: Signer): ERC1155FullSupplyUpgradeableMock__factory {
    return super.connect(signer) as ERC1155FullSupplyUpgradeableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155FullSupplyUpgradeableMockInterface {
    return new utils.Interface(
      _abi
    ) as ERC1155FullSupplyUpgradeableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155FullSupplyUpgradeableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155FullSupplyUpgradeableMock;
  }
}
