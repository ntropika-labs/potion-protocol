/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAction,
  IActionInterface,
} from "../../../contracts/interfaces/IAction";

const _abi = [
  {
    inputs: [],
    name: "canPositionBeExited",
    outputs: [
      {
        internalType: "bool",
        name: "canExit",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountReceived",
        type: "uint256",
      },
    ],
    name: "enterPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "asset",
        type: "address",
      },
    ],
    name: "exitPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "amountReturned",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAction__factory {
  static readonly abi = _abi;
  static createInterface(): IActionInterface {
    return new utils.Interface(_abi) as IActionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAction {
    return new Contract(address, _abi, signerOrProvider) as IAction;
  }
}
