/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PercentageUtils,
  PercentageUtilsInterface,
} from "../../../contracts/library/PercentageUtils";

const _abi = [
  {
    inputs: [],
    name: "PERCENTAGE_100",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_FACTOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61020461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80639070642514610050578063cbf5a55e1461006a578063ee01e5e714610072575b600080fd5b610058600681565b60405190815260200160405180910390f35b61005861007a565b610058610094565b6100866006600a61019c565b6100919060646101af565b81565b6100916006600a61019c565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156100f15781600019048211156100d7576100d76100a0565b808516156100e457918102915b93841c93908002906100bb565b509250929050565b60008261010857506001610196565b8161011557506000610196565b816001811461012b576002811461013557610151565b6001915050610196565b60ff841115610146576101466100a0565b50506001821b610196565b5060208310610133831016604e8410600b8410161715610174575081810a610196565b61017e83836100b6565b8060001904821115610192576101926100a0565b0290505b92915050565b60006101a883836100f9565b9392505050565b60008160001904831182151516156101c9576101c96100a0565b50029056fea26469706673582212203850893e1f9e0014923cecca26268bd4c70ea835d0c7945556c072cd9449a39264736f6c634300080e0033";

type PercentageUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PercentageUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PercentageUtils__factory extends ContractFactory {
  constructor(...args: PercentageUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PercentageUtils> {
    return super.deploy(overrides || {}) as Promise<PercentageUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PercentageUtils {
    return super.attach(address) as PercentageUtils;
  }
  override connect(signer: Signer): PercentageUtils__factory {
    return super.connect(signer) as PercentageUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PercentageUtilsInterface {
    return new utils.Interface(_abi) as PercentageUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PercentageUtils {
    return new Contract(address, _abi, signerOrProvider) as PercentageUtils;
  }
}
