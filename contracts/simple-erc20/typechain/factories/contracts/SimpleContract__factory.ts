/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleContract,
  SimpleContractInterface,
} from "../../contracts/SimpleContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "incrementBy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61030b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806303df179c146100675780633fa4f2451461007c578063715018a6146100985780638da5cb5b146100a0578063d09de08a146100bb578063f2fde38b146100c3575b600080fd5b61007a61007536600461028f565b6100d6565b005b61008560015481565b6040519081526020015b60405180910390f35b61007a6100f0565b6000546040516001600160a01b03909116815260200161008f565b61007a61015b565b61007a6100d13660046102a8565b610174565b80600160008282546100e891906102d8565b909155505050565b6000546001600160a01b0316331461014f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b610159600061023f565b565b600180600082825461016d91906102d8565b9091555050565b6000546001600160a01b031633146101ce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610146565b6001600160a01b0381166102335760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610146565b61023c8161023f565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102a157600080fd5b5035919050565b6000602082840312156102ba57600080fd5b81356001600160a01b03811681146102d157600080fd5b9392505050565b600082198211156102f957634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c6343000809000a";

type SimpleContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleContract__factory extends ContractFactory {
  constructor(...args: SimpleContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleContract> {
    return super.deploy(overrides || {}) as Promise<SimpleContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleContract {
    return super.attach(address) as SimpleContract;
  }
  override connect(signer: Signer): SimpleContract__factory {
    return super.connect(signer) as SimpleContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleContractInterface {
    return new utils.Interface(_abi) as SimpleContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleContract {
    return new Contract(address, _abi, signerOrProvider) as SimpleContract;
  }
}
