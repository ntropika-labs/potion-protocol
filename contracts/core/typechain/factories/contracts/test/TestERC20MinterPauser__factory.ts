/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestERC20MinterPauser,
  TestERC20MinterPauserInterface,
} from "../../../contracts/test/TestERC20MinterPauser";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001dca38038062001dca8339810160408190526200003491620003bb565b8282818181600590805190602001906200005092919062000262565b5080516200006690600690602084019062000262565b50506007805460ff191690555062000080600033620000fd565b620000ac7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000fd565b620000d87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000fd565b50506007805460ff9092166101000261ff0019909216919091179055506200048f9050565b6200010982826200010d565b5050565b6200012482826200015060201b6200094b1760201c565b60008281526001602090815260409091206200014b918390620009cf620001f0821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000109576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001ac3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000207836001600160a01b03841662000210565b90505b92915050565b600081815260018301602052604081205462000259575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200020a565b5060006200020a565b82805462000270906200043c565b90600052602060002090601f016020900481019282620002945760008555620002df565b82601f10620002af57805160ff1916838001178555620002df565b82800160010185558215620002df579182015b82811115620002df578251825591602001919060010190620002c2565b50620002ed929150620002f1565b5090565b5b80821115620002ed5760008155600101620002f2565b600082601f83011262000319578081fd5b81516001600160401b038082111562000336576200033662000479565b604051601f8301601f19908116603f0116810190828211818310171562000361576200036162000479565b816040528381526020925086838588010111156200037d578485fd5b8491505b83821015620003a0578582018301518183018401529082019062000381565b83821115620003b157848385830101525b9695505050505050565b600080600060608486031215620003d0578283fd5b83516001600160401b0380821115620003e7578485fd5b620003f58783880162000308565b945060208601519150808211156200040b578384fd5b506200041a8682870162000308565b925050604084015160ff8116811462000431578182fd5b809150509250925092565b600181811c908216806200045157607f821691505b602082108114156200047357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61192b806200049f6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d5391393146103bd578063d547741f146103e4578063dd62ed3e146103f7578063e63ab1e91461040a57600080fd5b8063a457c2d714610384578063a9059cbb14610397578063ca15c873146103aa57600080fd5b80639010d07c116100d35780639010d07c1461033657806391d148541461036157806395d89b4114610374578063a217fddf1461037c57600080fd5b806370a08231146102f257806379cc67901461031b5780638456cb591461032e57600080fd5b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102b957806340c10f19146102c157806342966c68146102d45780635c975abb146102e757600080fd5b8063313ce5671461027657806336568abe1461029357806339509351146102a657600080fd5b806318160ddd116101a257806318160ddd1461021957806323b872dd1461022b578063248a9ca31461023e5780632f2ff15d1461026157600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063095ea7b314610206575b600080fd5b6101dc6101d7366004611743565b610431565b60405190151581526020015b60405180910390f35b6101f961045c565b6040516101e891906117e0565b6101dc6102143660046116bf565b6104ee565b6004545b6040519081526020016101e8565b6101dc610239366004611684565b610506565b61021d61024c3660046116e8565b60009081526020819052604090206001015490565b61027461026f366004611700565b61052a565b005b600754610100900460ff1660405160ff90911681526020016101e8565b6102746102a1366004611700565b610554565b6101dc6102b43660046116bf565b6105d7565b6102746105f9565b6102746102cf3660046116bf565b61069f565b6102746102e23660046116e8565b61073e565b60075460ff166101dc565b61021d610300366004611638565b6001600160a01b031660009081526002602052604090205490565b6102746103293660046116bf565b61074b565b610274610760565b610349610344366004611722565b610804565b6040516001600160a01b0390911681526020016101e8565b6101dc61036f366004611700565b610823565b6101f961084c565b61021d600081565b6101dc6103923660046116bf565b61085b565b6101dc6103a53660046116bf565b6108d6565b61021d6103b83660046116e8565b6108e4565b61021d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102746103f2366004611700565b6108fb565b61021d610405366004611652565b610920565b61021d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104565750610456826109e4565b92915050565b60606005805461046b906118a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610497906118a4565b80156104e45780601f106104b9576101008083540402835291602001916104e4565b820191906000526020600020905b8154815290600101906020018083116104c757829003601f168201915b5050505050905090565b6000336104fc818585610a19565b5060019392505050565b600033610514858285610b3d565b61051f858585610bb7565b506001949350505050565b60008281526020819052604090206001015461054581610d90565b61054f8383610d9a565b505050565b6001600160a01b03811633146105c95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6105d38282610dbc565b5050565b6000336104fc8185856105ea8383610920565b6105f49190611813565b610a19565b6106237f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610823565b6106955760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e70617573650000000000000060648201526084016105c0565b61069d610dde565b565b6106c97f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610823565b6107345760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b60648201526084016105c0565b6105d38282610e71565b6107483382610f5c565b50565b610756823383610b3d565b6105d38282610f5c565b61078a7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610823565b6107fc5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20706175736500000000000000000060648201526084016105c0565b61069d6110b6565b600082815260016020526040812061081c9083611131565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606006805461046b906118a4565b600033816108698286610920565b9050838110156108c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105c0565b61051f8286868403610a19565b6000336104fc818585610bb7565b60008181526001602052604081206104569061113d565b60008281526020819052604090206001015461091681610d90565b61054f8383610dbc565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6109558282610823565b6105d3576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561098b3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061081c836001600160a01b038416611147565b60006001600160e01b03198216637965db0b60e01b148061045657506301ffc9a760e01b6001600160e01b0319831614610456565b6001600160a01b038316610a7b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105c0565b6001600160a01b038216610adc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105c0565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610b498484610920565b90506000198114610bb15781811015610ba45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105c0565b610bb18484848403610a19565b50505050565b6001600160a01b038316610c1b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105c0565b6001600160a01b038216610c7d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105c0565b610c88838383611196565b6001600160a01b03831660009081526002602052604090205481811015610d005760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105c0565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290610d37908490611813565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d8391815260200190565b60405180910390a3610bb1565b61074881336111a1565b610da4828261094b565b600082815260016020526040902061054f90826109cf565b610dc68282611205565b600082815260016020526040902061054f908261126a565b60075460ff16610e275760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105c0565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ec75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105c0565b610ed360008383611196565b8060046000828254610ee59190611813565b90915550506001600160a01b03821660009081526002602052604081208054839290610f12908490611813565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610fbc5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105c0565b610fc882600083611196565b6001600160a01b0382166000908152600260205260409020548181101561103c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105c0565b6001600160a01b038316600090815260026020526040812083830390556004805484929061106b90849061184a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60075460ff16156110fc5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105c0565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e543390565b600061081c838361127f565b6000610456825490565b600081815260018301602052604081205461118e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610456565b506000610456565b61054f8383836112b7565b6111ab8282610823565b6105d3576111c3816001600160a01b0316601461131d565b6111ce83602061131d565b6040516020016111df92919061176b565b60408051601f198184030181529082905262461bcd60e51b82526105c0916004016117e0565b61120f8282610823565b156105d3576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061081c836001600160a01b0384166114ff565b60008260000182815481106112a457634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60075460ff161561054f5760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b60648201526084016105c0565b6060600061132c83600261182b565b611337906002611813565b67ffffffffffffffff81111561135d57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611387576020820181803683370190505b509050600360fc1b816000815181106113b057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113ed57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061141184600261182b565b61141c906001611813565b90505b60018111156114b0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061145e57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061148257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936114a98161188d565b905061141f565b50831561081c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105c0565b6000818152600183016020526040812054801561161257600061152360018361184a565b85549091506000906115379060019061184a565b90508181146115b857600086600001828154811061156557634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061159657634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b85548690806115d757634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610456565b6000915050610456565b80356001600160a01b038116811461163357600080fd5b919050565b600060208284031215611649578081fd5b61081c8261161c565b60008060408385031215611664578081fd5b61166d8361161c565b915061167b6020840161161c565b90509250929050565b600080600060608486031215611698578081fd5b6116a18461161c565b92506116af6020850161161c565b9150604084013590509250925092565b600080604083850312156116d1578182fd5b6116da8361161c565b946020939093013593505050565b6000602082840312156116f9578081fd5b5035919050565b60008060408385031215611712578182fd5b8235915061167b6020840161161c565b60008060408385031215611734578182fd5b50508035926020909101359150565b600060208284031215611754578081fd5b81356001600160e01b03198116811461081c578182fd5b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516117a3816017850160208801611861565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516117d4816028840160208801611861565b01602801949350505050565b60208152600082518060208401526117ff816040850160208701611861565b601f01601f19169190910160400192915050565b60008219821115611826576118266118df565b500190565b6000816000190483118215151615611845576118456118df565b500290565b60008282101561185c5761185c6118df565b500390565b60005b8381101561187c578181015183820152602001611864565b83811115610bb15750506000910152565b60008161189c5761189c6118df565b506000190190565b600181811c908216806118b857607f821691505b602082108114156118d957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207c43413aac007b73c1afff4ebaba5688694330cbff5774fbcc839f3bd5c70bee64736f6c63430008040033";

type TestERC20MinterPauserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20MinterPauserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20MinterPauser__factory extends ContractFactory {
  constructor(...args: TestERC20MinterPauserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC20MinterPauser> {
    return super.deploy(
      name,
      symbol,
      decimals_,
      overrides || {}
    ) as Promise<TestERC20MinterPauser>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, decimals_, overrides || {});
  }
  override attach(address: string): TestERC20MinterPauser {
    return super.attach(address) as TestERC20MinterPauser;
  }
  override connect(signer: Signer): TestERC20MinterPauser__factory {
    return super.connect(signer) as TestERC20MinterPauser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20MinterPauserInterface {
    return new utils.Interface(_abi) as TestERC20MinterPauserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20MinterPauser {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestERC20MinterPauser;
  }
}
