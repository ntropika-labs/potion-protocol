/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FaucetToken,
  FaucetTokenInterface,
} from "../../../../contracts/test/FaucetToken.sol/FaucetToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c4038038062000c408339810160408190526200003491620001fa565b60038490553360009081526005602090815260408220869055845186928692869286926200006892909190860190620000a1565b5080516200007e906001906020840190620000a1565b50506002805460ff191660ff9290921691909117905550620002d8945050505050565b828054620000af9062000285565b90600052602060002090601f016020900481019282620000d357600085556200011e565b82601f10620000ee57805160ff19168380011785556200011e565b828001600101855582156200011e579182015b828111156200011e57825182559160200191906001019062000101565b506200012c92915062000130565b5090565b5b808211156200012c576000815560010162000131565b600082601f83011262000158578081fd5b81516001600160401b0380821115620001755762000175620002c2565b604051601f8301601f19908116603f01168101908282118183101715620001a057620001a0620002c2565b81604052838152602092508683858801011115620001bc578485fd5b8491505b83821015620001df5785820183015181830184015290820190620001c0565b83821115620001f057848385830101525b9695505050505050565b6000806000806080858703121562000210578384fd5b845160208601519094506001600160401b03808211156200022f578485fd5b6200023d8883890162000147565b94506040870151915060ff8216821462000255578384fd5b6060870151919350808211156200026a578283fd5b50620002798782880162000147565b91505092959194509250565b600181811c908216806200029a57607f821691505b60208210811415620002bc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61095880620002e86000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461012d57806370a082311461014257806395d89b4114610162578063a9059cbb1461016a578063dd62ed3e1461017d57600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100fb578063313ce5671461010e575b600080fd5b6100ab6101a8565b6040516100b89190610810565b60405180910390f35b6100d46100cf36600461079c565b610236565b60405190151581526020016100b8565b6100ed60035481565b6040519081526020016100b8565b6100d4610109366004610761565b6102a2565b60025461011b9060ff1681565b60405160ff90911681526020016100b8565b61014061013b36600461079c565b6104b7565b005b6100ed610150366004610715565b60056020526000908152604090205481565b6100ab610541565b6100d461017836600461079c565b61054e565b6100ed61018b36600461072f565b600460209081526000928352604080842090915290825290205481565b600080546101b59061089e565b80601f01602080910402602001604051908101604052809291908181526020018280546101e19061089e565b801561022e5780601f106102035761010080835404028352916020019161022e565b820191906000526020600020905b81548152906001019060200180831161021157829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102919086815260200190565b60405180910390a350600192915050565b60006102c56040518060600160405280603381526020016108f0603391396105e5565b6102f66040518060400160405280600f81526020016e029ba30b73230b9322a37b5b2b71d1608d1b8152503061062b565b61032b60405180604001604052806013815260200172029ba30b73230b9322a37b5b2b71039b9319d1606d1b8152508561062b565b61036060405180604001604052806013815260200172029ba30b73230b9322a37b5b2b7103239ba1d1606d1b8152508461062b565b61039860405180604001604052806016815260200175029ba30b73230b9322a37b5b2b71030b6b7bab73a1d160551b81525083610674565b6103b96040518060600160405280603381526020016108f0603391396105e5565b6001600160a01b03841660009081526004602090815260408083203384529091529020546103e790836106b9565b6001600160a01b03851660008181526004602090815260408083203384528252808320949094559181526005909152205461042290836106b9565b6001600160a01b03808616600090815260056020526040808220939093559085168152205461045190836106cc565b6001600160a01b0380851660008181526005602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104a59086815260200190565b60405180910390a35060019392505050565b6001600160a01b038216600090815260056020526040812080548392906104df90849061086f565b9250508190555080600360008282546104f8919061086f565b90915550506040518181526001600160a01b0383169030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600180546101b59061089e565b3360009081526005602052604081205461056890836106b9565b33600090815260056020526040808220929092556001600160a01b0385168152205461059490836106cc565b6001600160a01b0384166000818152600560205260409081902092909255905133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906102919086815260200190565b610628816040516024016105f99190610810565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526106d8565b50565b6106708282604051602401610641929190610823565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526106d8565b5050565b610670828260405160240161068a92919061084d565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526106d8565b60006106c58284610887565b9392505050565b60006106c5828461086f565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b038116811461071057600080fd5b919050565b600060208284031215610726578081fd5b6106c5826106f9565b60008060408385031215610741578081fd5b61074a836106f9565b9150610758602084016106f9565b90509250929050565b600080600060608486031215610775578081fd5b61077e846106f9565b925061078c602085016106f9565b9150604084013590509250925092565b600080604083850312156107ae578182fd5b6107b7836106f9565b946020939093013593505050565b60008151808452815b818110156107ea576020818501810151868301820152016107ce565b818111156107fb5782602083870101525b50601f01601f19169290920160200192915050565b6020815260006106c560208301846107c5565b60408152600061083660408301856107c5565b905060018060a01b03831660208301529392505050565b60408152600061086060408301856107c5565b90508260208301529392505050565b60008219821115610882576108826108d9565b500190565b600082821015610899576108996108d9565b500390565b600181811c908216806108b257607f821691505b602082108114156108d357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2da2646970667358221220004a5c79ba3939283f967f0eb67536867313a8ca137214a2b830223d5e00147864736f6c63430008040033";

type FaucetTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FaucetToken__factory extends ContractFactory {
  constructor(...args: FaucetTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _decimalUnits: BigNumberish,
    _tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FaucetToken> {
    return super.deploy(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    ) as Promise<FaucetToken>;
  }
  override getDeployTransaction(
    _initialAmount: BigNumberish,
    _tokenName: string,
    _decimalUnits: BigNumberish,
    _tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    );
  }
  override attach(address: string): FaucetToken {
    return super.attach(address) as FaucetToken;
  }
  override connect(signer: Signer): FaucetToken__factory {
    return super.connect(signer) as FaucetToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetTokenInterface {
    return new utils.Interface(_abi) as FaucetTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FaucetToken {
    return new Contract(address, _abi, signerOrProvider) as FaucetToken;
  }
}
