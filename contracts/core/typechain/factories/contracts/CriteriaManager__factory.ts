/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory } from "ethers";
import type { Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CriteriaManager,
  CriteriaManagerInterface,
} from "../../contracts/CriteriaManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "criteriaHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "strikeAsset",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isPut",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "maxStrikePercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDurationInDays",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ICriteriaManager.Criteria",
        name: "criteria",
        type: "tuple",
      },
    ],
    name: "CriteriaAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "criteriaSetHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "criteriaSet",
        type: "bytes32[]",
      },
    ],
    name: "CriteriaSetAdded",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "strikeAsset",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isPut",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "maxStrikePercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDurationInDays",
            type: "uint256",
          },
        ],
        internalType: "struct ICriteriaManager.Criteria",
        name: "_criteria",
        type: "tuple",
      },
    ],
    name: "addCriteria",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_hashes",
        type: "bytes32[]",
      },
    ],
    name: "addCriteriaSet",
    outputs: [
      {
        internalType: "bytes32",
        name: "criteriaSetHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "criteriaSetByHash",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "strikeAsset",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isPut",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "maxStrikePercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDurationInDays",
            type: "uint256",
          },
        ],
        internalType: "struct ICriteriaManager.Criteria",
        name: "_criteria",
        type: "tuple",
      },
    ],
    name: "hashCriteria",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_hashes",
        type: "bytes32[]",
      },
    ],
    name: "hashOfSortedHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_criteriaSetHash",
        type: "bytes32",
      },
    ],
    name: "isCriteriaSetHash",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_criteriaSetHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_criteriaHash",
        type: "bytes32",
      },
    ],
    name: "isInCriteriaSet",
    outputs: [
      {
        internalType: "bool",
        name: "isInSet",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "registeredCriteria",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "strikeAsset",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isPut",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "maxStrikePercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDurationInDays",
            type: "uint256",
          },
        ],
        internalType: "struct ICriteriaManager.Criteria",
        name: "_criteria",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "percentStrikeValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wholeDaysRemaining",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "strikeAsset",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isPut",
            type: "bool",
          },
        ],
        internalType: "struct ICriteriaManager.OtokenProperties",
        name: "_otokenCache",
        type: "tuple",
      },
    ],
    name: "requireOtokenMeetsCriteria",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610be2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80633f3d28ba116100665780633f3d28ba14610117578063697cd7e61461012c578063bedc9c821461014f578063d655e8e614610172578063eaccf89c1461018557600080fd5b806314c110bf146100985780632a1902b1146100be578063308aeb81146100f15780633e3912e114610104575b600080fd5b6100ab6100a6366004610a56565b610198565b6040519081526020015b60405180910390f35b6100e16100cc366004610a1d565b60006020819052908152604090205460ff1681565b60405190151581526020016100b5565b6100e16100ff366004610a35565b6102a9565b6100ab610112366004610993565b61037b565b61012a610125366004610a71565b61047b565b005b6100e161013a366004610a1d565b60016020526000908152604090205460ff1681565b6100e161015d366004610a1d565b60009081526001602052604090205460ff1690565b6100ab610180366004610a56565b61066b565b6100ab610193366004610993565b6106ff565b60008160008160800135116101e75760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b210323ab930ba34b7b760811b60448201526064015b60405180910390fd5b600081606001351161022d5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c696420737472696b652560881b60448201526064016101de565b6102368361066b565b60008181526020819052604090205490925060ff166102a35760008281526020819052604090819020805460ff191660011790555182907f73dbecaf23e4004fdf473469c07f62d742b4cd7ef10e6fda3d81743ffe6378619061029a908690610b0a565b60405180910390a25b50919050565b60008281526001602052604081205460ff166102f65760405162461bcd60e51b815260206004820152600c60248201526b1b9bc81cdd58da081b1a5cdd60a21b60448201526064016101de565b60008281526020819052604090205460ff166103545760405162461bcd60e51b815260206004820152601b60248201527f6e6f20737563682063726974657269612072656769737465726564000000000060448201526064016101de565b506000828152600160208181526040808420858552909201905290205460ff165b92915050565b6000600182111561044a5760015b8281101561044857838361039e600184610b64565b8181106103bb57634e487b7160e01b600052603260045260246000fd5b905060200201358484838181106103e257634e487b7160e01b600052603260045260246000fd5b90506020020135116104365760405162461bcd60e51b815260206004820152601760248201527f496e70757420686173686573206e6f7420736f7274656400000000000000000060448201526064016101de565b8061044081610b7b565b915050610389565b505b828260405160200161045d929190610aa6565b60405160208183030381529060405280519060200120905092915050565b61048b6060820160408301610972565b6001600160a01b03166104a16020840184610972565b6001600160a01b0316146104f05760405162461bcd60e51b81526020600482015260166024820152753bb937b733903ab73232b9363cb4b733903a37b5b2b760511b60448201526064016101de565b6105006080820160608301610972565b6001600160a01b03166105196040840160208501610972565b6001600160a01b0316146105645760405162461bcd60e51b81526020600482015260126024820152713bb937b7339039ba3934b5b2903a37b5b2b760711b60448201526064016101de565b61057460a0820160808301610a03565b15156105866060840160408501610a03565b1515146105d55760405162461bcd60e51b815260206004820152601a60248201527f63616c6c206f7074696f6e73206e6f7420737570706f7274656400000000000060448201526064016101de565b80356060830135101561061c5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c696420737472696b652560881b60448201526064016101de565b8060200135826080013510156106675760405162461bcd60e51b815260206004820152601060248201526f34b73b30b634b210323ab930ba34b7b760811b60448201526064016101de565b5050565b600061067a6020830183610972565b61068a6040840160208501610972565b61069a6060850160408601610a03565b6040516bffffffffffffffffffffffff19606094851b8116602083015292841b9092166034830152151560f81b604882015290830135604982015260808301356069820152608901604051602081830303815290604052805190602001209050919050565b600061070b838361037b565b60008181526001602052604090205490915060ff1661037557818061075e5760405162461bcd60e51b8152602060048201526009602482015268195b5c1d1e481cd95d60ba1b60448201526064016101de565b60008281526001602081905260408220805460ff19169091178155905b828110156108f2576000808787848181106107a657634e487b7160e01b600052603260045260246000fd5b602090810292909201358352508101919091526040016000205460ff166108035760405162461bcd60e51b81526020600482015260116024820152700aadce4cac6decedcd2e6cac840d0c2e6d607b1b60448201526064016101de565b81600101600087878481811061082957634e487b7160e01b600052603260045260246000fd5b602090810292909201358352508101919091526040016000205460ff161561088b5760405162461bcd60e51b8152602060048201526015602482015274088eae0d8d2c6c2e8cac840d2dce0eae840d0c2e6d605b1b60448201526064016101de565b60018260010160008888858181106108b357634e487b7160e01b600052603260045260246000fd5b90506020020135815260200190815260200160002060006101000a81548160ff02191690831515021790555080806108ea90610b7b565b91505061077b565b50827f18fc14364f30bfdead3b26643840a1e4468971b850d82dcaef6b8e0b897e13b38686604051610925929190610ad0565b60405180910390a2505092915050565b80356001600160a01b038116811461094c57600080fd5b919050565b8035801515811461094c57600080fd5b600060a082840312156102a3578081fd5b600060208284031215610983578081fd5b61098c82610935565b9392505050565b600080602083850312156109a5578081fd5b823567ffffffffffffffff808211156109bc578283fd5b818501915085601f8301126109cf578283fd5b8135818111156109dd578384fd5b8660208260051b85010111156109f1578384fd5b60209290920196919550909350505050565b600060208284031215610a14578081fd5b61098c82610951565b600060208284031215610a2e578081fd5b5035919050565b60008060408385031215610a47578182fd5b50508035926020909101359150565b600060a08284031215610a67578081fd5b61098c8383610961565b6000806101408385031215610a84578182fd5b610a8e8484610961565b9150610a9d8460a08501610961565b90509250929050565b60006001600160fb1b03831115610abb578081fd5b8260051b808584379190910190815292915050565b6020808252810182905260006001600160fb1b03831115610aef578081fd5b8260051b808560408501379190910160400190815292915050565b60a081016001600160a01b0380610b2085610935565b16835280610b3060208601610935565b16602084015250610b4360408401610951565b15156040830152606083013560608301526080830135608083015292915050565b600082821015610b7657610b76610b96565b500390565b6000600019821415610b8f57610b8f610b96565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122064ab753052e0ba286dadde4ff0d9ec0bc5e74f895cfc74f34babc2619d20757d64736f6c63430008040033";

type CriteriaManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CriteriaManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CriteriaManager__factory extends ContractFactory {
  constructor(...args: CriteriaManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CriteriaManager> {
    return super.deploy(overrides || {}) as Promise<CriteriaManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CriteriaManager {
    return super.attach(address) as CriteriaManager;
  }
  override connect(signer: Signer): CriteriaManager__factory {
    return super.connect(signer) as CriteriaManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CriteriaManagerInterface {
    return new utils.Interface(_abi) as CriteriaManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CriteriaManager {
    return new Contract(address, _abi, signerOrProvider) as CriteriaManager;
  }
}
