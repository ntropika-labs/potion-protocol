name: Development branch actions

# run when issued manually, push or pr
on:
  workflow_dispatch:
  push:
    branches: [feat-ci-cd-implementation-CU-2er6b37]
  pull_request:
    branches: [feat-ci-cd-implementation-CU-2er6b37]

permissions:
  contents: read
  # Needed for the 'trilom/file-changes-action' action
  pull-requests: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    env:
      DEPLOYER_MNEMONIC: ${{ secrets.DEPLOYER_MNEMONIC }}
      VITE_DEVELOPMENT_MNEMONIC: ${{ secrets.DEPLOYER_MNEMONIC }}
      VITE_ALCHEMY_KEY: ${{ secrets.VITE_ALCHEMY_KEY }}
      VITE_DEVELOPMENT_ADDRESS: ${{ secrets.VITE_DEVELOPMENT_ADDRESS }}
      GANACHE_VOLUME: ${{ secrets.GANACHE_VOLUME }}
      DATABASE_PATH: ${{ secrets.DATABASE_PATH }}
      # pass GitHub token to allow accurately detecting a build vs a re-run build
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # pass the project ID from the secrets through environment variable
      CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
      VITE_ETHEREUM_NETWORK: "localhost"
      VITE_ENDPOINT_PROVIDER: "alchemy"
      VITE_COINGECKO_API_ENDPOINT: "https://api.coingecko.com/api/v3"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "yarn"

      - name: Cache node modules
        id: cache-yarn
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # yarn cache files are stored in `~/.yarn` on Linux/macOS
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: yarn --immutable --immutable-cache

      - name: Start containers
        run: ./bin/create-local-env-headless
        shell: bash

      - name: Build app with mocked onboard
        run: yarn nx run potion-dapp:build-test

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          install: false
          start: yarn nx run potion-dapp:preview
          wait-on: "http://localhost:5050"
          config-file: apps/potion-dapp/cypress.config.ts
          browser: chrome
          record: true
          spec: apps/potion-dapp/cypress/e2e/**/*.cy.{js,jsx,ts,tsx}

      - name: Archive screenshots code coverage results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - name: Archive videos code coverage results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
