#!/usr/bin/env bash
# Script to check if the current environment has the required dependencies to run everything locally

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

setup_colors

if ! which docker > /dev/null 2>&1; then
    msg "${RED}- Please install 'docker' first"
    exit 1
fi
msg "${GREEN}- 'docker' detected"

docker_version="$(docker -v | cut -d ',' -f1 | cut -d ' ' -f3)"

if ! which docker-compose > /dev/null 2>&1; then
    if [ "$docker_version" -lt "20" ]; then
        msg "${RED}- Please install 'docker-compose' first"
    else
        msg "${RED}- Please ensure that you have the 'docker-compose' compatibility layer for your docker version installed"
    fi
    exit 1
fi
msg "${GREEN}- 'docker-compose' detected"

if ! which jq > /dev/null 2>&1; then
    msg "${RED}- Please install 'jq' first"
    exit 1
fi
msg "${GREEN}- 'jq' detected"

if ! which node > /dev/null 2>&1; then
  msg "${RED}- Please install 'node' first"
  exit 1
else
  node_version="$(node -v | cut -d 'v' -f2 | cut -d '.' -f1)"
  if [ "$node_version" -lt "16" ]; then
    msg "${RED}- Node $node_version detected; please ensure that you are using Node 16 instead"
    exit 1
  else 
    if [ "$node_version" -gt "16" ]; then
      msg "${ORANGE}- Node $node_version detected; newer versions than Node 16 haven't been tested"
    fi
  fi
fi 
msg "${GREEN}- 'node' detected"

if ! which yarn > /dev/null 2>&1; then
  msg "${RED}- Please install 'yarn' first"
  exit 1
fi 
msg "${GREEN}- 'yarn' detected"
